{"version":3,"sources":["packages/_dev/build/header.js","packages/_dev/node_modules/browser-pack-flat/_prelude","packages/utils/arr.js","packages/utils/isWindow.js","packages/utils/window.js","packages/utils/is.js","packages/actions/drag.js","packages/actions/drop/DropEvent.js","packages/utils/Signals.js","packages/utils/domObjects.js","packages/utils/browser.js","packages/utils/clone.js","packages/utils/domUtils.js","packages/utils/pointerExtend.js","packages/utils/hypot.js","packages/utils/pointerUtils.js","packages/utils/events.js","packages/utils/extend.js","packages/utils/rect.js","packages/utils/getOriginXY.js","packages/utils/normalizeListeners.js","packages/utils/raf.js","packages/utils/index.js","packages/actions/drop/index.js","packages/core/defaultOptions.js","packages/core/InteractEvent.js","packages/actions/gesture.js","packages/actions/resize.js","packages/actions/index.js","packages/autoScroll/index.js","packages/autoStart/InteractableMethods.js","packages/autoStart/base.js","packages/autoStart/dragAxis.js","packages/autoStart/hold.js","packages/autoStart/index.js","packages/core/interactablePreventDefault.js","packages/modifiers/base.js","packages/inertia/index.js","packages/core/Eventable.js","packages/core/Interactable.js","packages/core/Interaction.js","packages/utils/interactionFinder.js","packages/core/interactions.js","packages/core/scope.js","packages/interact/interact.js","packages/modifiers/restrict.js","packages/modifiers/restrictEdges.js","packages/modifiers/restrictSize.js","packages/modifiers/snap.js","packages/modifiers/snapSize.js","packages/modifiers/snapEdges.js","packages/modifiers/index.js","packages/pointerEvents/PointerEvent.js","packages/pointerEvents/base.js","packages/pointerEvents/holdRepeat.js","packages/pointerEvents/interactableTargets.js","packages/pointerEvents/index.js","packages/reflow/index.js","packages/utils/snappers/grid.js","packages/utils/snappers/index.js","packages/interact/index.js","index.js","packages/_dev/node_modules/browser-pack-flat/_postlude"],"names":[],"mappings":"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","file":"interact.js","sourceRoot":"","sourcesContent":["/**\n * interact.js v1.4.0-alpha.7+sha.faa1c52-dirty\n *\n * Copyright (c) 2012-2018 Taye Adeyemi <dev@taye.me>\n * Released under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;\n","export function contains (array, target) {\n  return array.indexOf(target) !== -1;\n}\n\nexport function remove (array, target) {\n  return array.splice(array.indexOf(target), 1);\n}\n\nexport function merge (target, source) {\n  for (const item of source) {\n    target.push(item);\n  }\n\n  return target;\n}\n\nexport function from (source) {\n  return merge([], source);\n}\n\nexport function findIndex (array, func) {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport function find (array, func) {\n  return array[findIndex(array, func)];\n}\n\nexport function some (array, func) {\n  return findIndex(array, func) !== -1;\n}\n","export default (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","import isWindow from './isWindow';\n\nconst win = {\n  getWindow,\n  init,\n};\n\nexport function init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window);\n  }\n\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nexport function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || win.window;\n}\n\nwin.init = init;\n\nexport default win;\n","import win      from './window';\nimport isWindow from './isWindow';\n\nexport const window   = thing => thing === win.window || isWindow(thing);\n\nexport const docFrag  = thing => object(thing) && thing.nodeType === 11;\n\nexport const object   = thing => !!thing && (typeof thing === 'object');\n\nexport const func     = thing => typeof thing === 'function';\n\nexport const number   = thing => typeof thing === 'number'  ;\n\nexport const bool     = thing => typeof thing === 'boolean' ;\n\nexport const string   = thing => typeof thing === 'string'  ;\n\nexport const element  = thing => {\n  if (!thing || (typeof thing !== 'object')) { return false; }\n\n  const _window = win.getWindow(thing) || win.window;\n\n  return (/object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element //DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string');\n};\n\nexport const plainObject = thing => object(thing) &&\n  !!thing.constructor &&\n  thing.constructor.name === 'Object';\n\nexport const array = thing => (object(thing)\n  && (typeof thing.length !== 'undefined')\n  && func(thing.splice));\n","import * as is from '@interactjs/utils/is';\nimport * as arr from '@interactjs/utils/arr';\n\nfunction init (scope) {\n  const {\n    actions,\n    Interactable,\n    interactions,\n    defaults,\n  } = scope;\n\n  interactions.signals.on('before-action-move', beforeMove);\n  interactions.signals.on('action-resume', beforeMove);\n\n  // dragmove\n  interactions.signals.on('action-move', move);\n\n  Interactable.prototype.draggable = drag.draggable;\n\n  actions.drag = drag;\n  actions.names.push('drag');\n  arr.merge(actions.eventTypes, [\n    'dragstart',\n    'dragmove',\n    'draginertiastart',\n    'dragresume',\n    'dragend',\n  ]);\n  actions.methodDict.drag = 'draggable';\n\n  defaults.drag = drag.defaults;\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y   = interaction.coords.start.page.y;\n    interaction.coords.cur.client.y = interaction.coords.start.client.y;\n\n    interaction.coords.velocity.client.y = 0;\n    interaction.coords.velocity.page.y   = 0;\n  }\n  else if (axis === 'y') {\n    interaction.coords.cur.page.x   = interaction.coords.start.page.x;\n    interaction.coords.cur.client.x = interaction.coords.start.client.x;\n\n    interaction.coords.velocity.client.x = 0;\n    interaction.coords.velocity.page.x   = 0;\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x';\n\n    iEvent.page[opposite]   = interaction.coords.start.page[opposite];\n    iEvent.client[opposite] = interaction.coords.start.client[opposite];\n    iEvent.delta[opposite] = 0;\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * });\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nfunction draggable (options) {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n}\n\nconst drag = {\n  init,\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  },\n\n  checker (pointer, event, interactable) {\n    const dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled\n      ? {\n        name: 'drag',\n        axis: (dragOptions.lockAxis === 'start'\n          ? dragOptions.startAxis\n          : dragOptions.lockAxis),\n      }\n      : null;\n  },\n\n  getCursor () {\n    return 'move';\n  },\n};\n\nexport default drag;\n","import * as arr from '@interactjs/utils/arr';\n\nclass DropEvent {\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropStatus, dragEvent, type) {\n    const { element, dropzone } = type === 'dragleave'\n      ? dropStatus.prev\n      : dropStatus.cur;\n\n    this.type          = type;\n    this.target        = element;\n    this.currentTarget = element;\n    this.dropzone      = dropzone;\n    this.dragEvent     = dragEvent;\n    this.relatedTarget = dragEvent.target;\n    this.interaction   = dragEvent.interaction;\n    this.draggable     = dragEvent.interactable;\n    this.timeStamp     = dragEvent.timeStamp;\n\n    this.propagationStopped = this.immediatePropagationStopped = false;\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropStatus } = this.interaction;\n\n    if (\n      (this.type !== 'dropactivate') && (\n        !this.dropzone ||\n        dropStatus.cur.dropzone !== this.dropzone ||\n        dropStatus.cur.element !== this.target)) {\n      return;\n    }\n\n    dropStatus.prev.dropzone = this.dropzone;\n    dropStatus.prev.element = this.target;\n\n    dropStatus.rejected = true;\n    dropStatus.events.enter = null;\n\n    this.stopImmediatePropagation();\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropStatus.activeDrops;\n      const index = arr.findIndex(activeDrops, ({ dropzone, element }) =>\n        dropzone === this.dropzone && element === this.target);\n\n      dropStatus.activeDrops = [\n        ...activeDrops.slice(0, index),\n        ...activeDrops.slice(index + 1),\n      ];\n\n      const deactivateEvent = new DropEvent(dropStatus, this.dragEvent, 'dropdeactivate');\n\n      deactivateEvent.dropzone = this.dropzone;\n      deactivateEvent.target = this.target;\n\n      this.dropzone.fire(deactivateEvent);\n    }\n    else {\n      this.dropzone.fire(new DropEvent(dropStatus, this.dragEvent, 'dragleave'));\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n}\n\nexport default DropEvent;\n","class Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = this.listeners[name].indexOf(listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (const listener of targetListeners) {\n      if (listener(arg, name) === false) {\n        return false;\n      }\n    }\n  }\n}\n\nexport default Signals;\n","const domObjects = {\n  init,\n};\n\nfunction blank () {}\n\nexport default domObjects;\n\nfunction init (window) {\n  domObjects.document           = window.document;\n  domObjects.DocumentFragment   = window.DocumentFragment   || blank;\n  domObjects.SVGElement         = window.SVGElement         || blank;\n  domObjects.SVGSVGElement      = window.SVGSVGElement      || blank;\n  domObjects.SVGElementInstance = window.SVGElementInstance || blank;\n  domObjects.Element            = window.Element            || blank;\n  domObjects.HTMLElement        = window.HTMLElement        || domObjects.Element;\n\n  domObjects.Event        = window.Event;\n  domObjects.Touch        = window.Touch || blank;\n  domObjects.PointerEvent = (window.PointerEvent || window.MSPointerEvent);\n}\n","import win from './window';\nimport * as is from './is';\nimport domObjects from './domObjects';\n\nconst browser = {\n  init,\n};\n\nexport default browser;\n\nfunction init (window) {\n  const Element = domObjects.Element;\n  const navigator  = win.window.navigator;\n\n  // Does the browser support touch input?\n  browser.supportsTouch = !!(('ontouchstart' in window) || is.func(window.DocumentTouch)\n                     && domObjects.document instanceof window.DocumentTouch);\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = !!domObjects.PointerEvent;\n\n  browser.isIOS = (/iP(hone|od|ad)/.test(navigator.platform));\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion));\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent);\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = 'matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector';\n\n  browser.pEventTypes = (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null);\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = 'onmousewheel' in domObjects.document? 'mousewheel': 'wheel';\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile = (navigator.appName === 'Opera'\n    && browser.supportsTouch\n    && navigator.userAgent.match('Presto'));\n}\n","import * as is from './is';\nimport * as arr from './arr';\n\nexport default function clone (source) {\n  const dest = {};\n\n  for (const prop in source) {\n    const value = source[prop];\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value);\n    }\n    else if (is.array(value)) {\n      dest[prop] = arr.from(value);\n    }\n    else {\n      dest[prop] = value;\n    }\n  }\n\n  return dest;\n}\n","import win        from './window';\nimport browser    from './browser';\nimport * as is    from './is';\nimport domObjects from './domObjects';\n\nexport function nodeContains (parent, child) {\n  while (child) {\n    if (child === parent) {\n      return true;\n    }\n\n    child = child.parentNode;\n  }\n\n  return false;\n}\n\nexport function closest (element, selector) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) { return element; }\n\n    element = parentNode(element);\n  }\n\n  return null;\n}\n\nexport function parentNode (node) {\n  let parent = node.parentNode;\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    while ((parent = parent.host) && is.docFrag(parent)) {\n      continue;\n    }\n\n    return parent;\n  }\n\n  return parent;\n}\n\nexport function matchesSelector (element, selector) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ');\n  }\n\n  return element[browser.prefixedMatchesSelector](selector);\n}\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements) {\n  let deepestZoneParents = [];\n  let dropzoneParents = [];\n  let dropzone;\n  let deepestZone = elements[0];\n  let index = deepestZone? 0: -1;\n  let parent;\n  let child;\n  let i;\n  let n;\n\n  for (i = 1; i < elements.length; i++) {\n    dropzone = elements[i];\n\n    // an element might belong to multiple selector dropzones\n    if (!dropzone || dropzone === deepestZone) {\n      continue;\n    }\n\n    if (!deepestZone) {\n      deepestZone = dropzone;\n      index = i;\n      continue;\n    }\n\n    // check if the deepest or current are document.documentElement or document.rootElement\n    // - if the current dropzone is, do nothing and continue\n    if (dropzone.parentNode === dropzone.ownerDocument) {\n      continue;\n    }\n    // - if deepest is, update with the current dropzone and continue to next\n    else if (deepestZone.parentNode === dropzone.ownerDocument) {\n      deepestZone = dropzone;\n      index = i;\n      continue;\n    }\n\n    if (!deepestZoneParents.length) {\n      parent = deepestZone;\n      while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n        deepestZoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n    }\n\n    // if this element is an svg element and the current deepest is\n    // an HTMLElement\n    if (deepestZone instanceof domObjects.HTMLElement\n        && dropzone instanceof domObjects.SVGElement\n        && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n      if (dropzone === deepestZone.parentNode) {\n        continue;\n      }\n\n      parent = dropzone.ownerSVGElement;\n    }\n    else {\n      parent = dropzone;\n    }\n\n    dropzoneParents = [];\n\n    while (parent.parentNode !== parent.ownerDocument) {\n      dropzoneParents.unshift(parent);\n      parent = parent.parentNode;\n    }\n\n    n = 0;\n\n    // get (position of last common ancestor) + 1\n    while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n      n++;\n    }\n\n    const parents = [\n      dropzoneParents[n - 1],\n      dropzoneParents[n],\n      deepestZoneParents[n],\n    ];\n\n    child = parents[0].lastChild;\n\n    while (child) {\n      if (child === parents[1]) {\n        deepestZone = dropzone;\n        index = i;\n        deepestZoneParents = [];\n\n        break;\n      }\n      else if (child === parents[2]) {\n        break;\n      }\n\n      child = child.previousSibling;\n    }\n  }\n\n  return index;\n}\n\nexport function matchesUpTo (element, selector, limit) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true;\n    }\n\n    element = parentNode(element);\n\n    if (element === limit) {\n      return matchesSelector(element, selector);\n    }\n  }\n\n  return false;\n}\n\nexport function getActualElement (element) {\n  return (element instanceof domObjects.SVGElementInstance\n    ? element.correspondingUseElement\n    : element);\n}\n\nexport function getScrollXY (relevantWindow) {\n  relevantWindow = relevantWindow || win.window;\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  };\n}\n\nexport function getElementClientRect (element) {\n  const clientRect = (element instanceof domObjects.SVGElement\n    ? element.getBoundingClientRect()\n    : element.getClientRects()[0]);\n\n  return clientRect && {\n    left  : clientRect.left,\n    right : clientRect.right,\n    top   : clientRect.top,\n    bottom: clientRect.bottom,\n    width : clientRect.width  || clientRect.right  - clientRect.left,\n    height: clientRect.height || clientRect.bottom - clientRect.top,\n  };\n}\n\nexport function getElementRect (element) {\n  const clientRect = getElementClientRect(element);\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element));\n\n    clientRect.left   += scroll.x;\n    clientRect.right  += scroll.x;\n    clientRect.top    += scroll.y;\n    clientRect.bottom += scroll.y;\n  }\n\n  return clientRect;\n}\n\nexport function getPath (element) {\n  const path = [];\n\n  while (element) {\n    path.push(element);\n    element = parentNode(element);\n  }\n\n  return path;\n}\n\nexport function trySelector (value) {\n  if (!is.string(value)) { return false; }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value);\n  return true;\n}\n","export default function pointerExtend (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs;\n    let deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n};\n","export default (x, y) =>  Math.sqrt(x * x + y * y);\n","import hypot         from './hypot';\nimport browser       from './browser';\nimport dom           from './domObjects';\nimport * as domUtils from './domUtils';\nimport domObjects    from './domObjects';\nimport * as is       from './is';\nimport pointerExtend from './pointerExtend';\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x;\n    targetObj.page.y    = cur.page.y    - prev.page.y;\n    targetObj.client.x  = cur.client.x  - prev.client.x;\n    targetObj.client.y  = cur.client.y  - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n  },\n\n  setCoordVelocity (targetObj, delta) {\n    const dt = Math.max(delta.timeStamp / 1000, 0.001);\n\n    targetObj.page.x   = delta.page.x / dt;\n    targetObj.page.y   = delta.page.y / dt;\n    targetObj.client.x = delta.client.x / dt;\n    targetObj.client.y = delta.client.y / dt;\n    targetObj.timeStamp = dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return is.number(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    const pointer = (pointers.length > 1\n      ? pointerUtils.pointerAverage(pointers)\n      : pointers[0]);\n\n    const tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = is.number(timeStamp) ? timeStamp :new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (is.array(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[1][sourceX] - touches[0][sourceX];\n    const dy = touches[1][sourceY] - touches[0][sourceY];\n    const angle = 180 * Math.atan2(dy , dx) / Math.PI;\n\n    return  angle;\n  },\n\n  getPointerType: function (pointer) {\n    return is.string(pointer.pointerType)\n      ? pointer.pointerType\n      : is.number(pointer.pointerType)\n        ? [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType]\n        // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        : /touch/.test(pointer.type) || pointer instanceof domObjects.Touch\n          ? 'touch'\n          : 'mouse';\n  },\n\n  // [ event.target, event.currentTarget ]\n  getEventTargets: function (event) {\n    const path = is.func(event.composedPath) ? event.composedPath() : event.path;\n\n    return [\n      domUtils.getActualElement(path ? path[0] : event.target),\n      domUtils.getActualElement(event.currentTarget),\n    ];\n  },\n\n  newCoords () {\n    return {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n  },\n\n  coordsToEvent: function ({ page, client, timeStamp }) {\n    return {\n      page,\n      client,\n      timeStamp,\n      pageX: page.x,\n      pageY: page.y,\n      clientX: client.x,\n      clientY: client.y,\n    };\n  },\n};\n\nexport default pointerUtils;\n","import * as is       from './is';\nimport * as domUtils from './domUtils';\nimport pointerUtils  from './pointerUtils';\nimport pExtend       from './pointerExtend';\n\nimport { contains } from './arr';\n\nconst elements = [];\nconst targets  = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, capture, passive], ...]\n//   }\n//  }\nconst delegatedEvents = {};\nconst documents       = [];\n\nfunction add (element, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  let elementIndex = elements.indexOf(element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    element.addEventListener(type, listener, events.supportsOptions? options : !!options.capture);\n    target.events[type].push(listener);\n  }\n}\n\nfunction remove (element, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  const elementIndex = elements.indexOf(element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], options);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element.removeEventListener(type, listener, events.supportsOptions? options : !!options.capture);\n          target.events[type].splice(i, 1);\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (const doc of documents) {\n      add(doc, type, delegateListener);\n      add(doc, type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and capture and passive flags\n  delegated.listeners[index].push([listener, !!options.capture, options.passive]);\n}\n\nfunction removeDelegate (selector, context, type, listener, optionalArg) {\n  const options = getOptions(optionalArg);\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, capture, passive]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const [fn, capture, passive] = listeners[i];\n\n        // check if the listener functions and capture and passive flags match\n        if (fn === listener && capture === !!options.capture && passive === options.passive) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, optionalArg) {\n  const options = getOptions(optionalArg);\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const [eventTarget] = (pointerUtils.getEventTargets(event));\n  let element = eventTarget;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (is.element(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          const [fn, capture, passive] = listeners[j];\n\n          if (capture === !!options.capture && passive === options.passive) {\n            fn(fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction getOptions (param) {\n  return is.object(param)? param : { capture: param };\n}\n\nconst events = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  supportsOptions: false,\n  supportsPassive: false,\n\n  _elements: elements,\n  _targets: targets,\n\n  init (window) {\n    window.document.createElement('div').addEventListener('test', null, {\n      get capture () { return (events.supportsOptions = true); },\n      get passive () { return (events.supportsPassive = true); },\n    });\n  },\n};\n\nexport default events;\n","export default function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n}\n","import extend from './extend';\nimport * as is from './is';\nimport {\n  closest,\n  parentNode,\n  getElementRect,\n} from './domUtils';\n\nexport function getStringOptionResult (value, interactable, element) {\n  if (!is.string(value)) {\n    return null;\n  }\n\n  if (value === 'parent') {\n    value = parentNode(element);\n  }\n  else if (value === 'self') {\n    value = interactable.getRect(element);\n  }\n  else {\n    value = closest(element, value);\n  }\n\n  return value;\n}\n\nexport function resolveRectLike (value, interactable, element, functionArgs) {\n  value = getStringOptionResult(value, interactable, element) || value;\n\n  if (is.func(value)) {\n    value = value.apply(null, functionArgs);\n  }\n\n  if (is.element(value)) {\n    value = getElementRect(value);\n  }\n\n  return value;\n}\n\nexport function rectToXY (rect) {\n  return  rect && {\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n  };\n}\n\nexport function xywhToTlbr (rect) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect);\n\n    rect.left   = rect.x || 0;\n    rect.top    = rect.y || 0;\n    rect.right  = rect.right   || (rect.left + rect.width);\n    rect.bottom = rect.bottom  || (rect.top + rect.height);\n  }\n\n  return rect;\n}\n\nexport function tlbrToXywh (rect) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect);\n\n    rect.x      = rect.left || 0;\n    rect.y      = rect.top  || 0;\n    rect.width  = rect.width  || (rect.right  - rect.x);\n    rect.height = rect.height || (rect.bottom - rect.y);\n  }\n\n  return rect;\n}\n\nexport default {\n  getStringOptionResult,\n  resolveRectLike,\n  rectToXY,\n  xywhToTlbr,\n  tlbrToXywh,\n};\n","import {\n  resolveRectLike,\n  rectToXY,\n} from './rect';\n\nexport default function (target, element, action) {\n  const actionOptions = target.options[action];\n  const actionOrigin = actionOptions && actionOptions.origin;\n  const origin = actionOrigin || target.options.origin;\n\n  const originRect = resolveRectLike(origin, target, element, [target && element]);\n\n  return rectToXY(originRect) || { x: 0, y: 0 };\n}\n","import * as is from './is';\nimport extend  from './extend';\n\nexport default function normalize (type, listener, result) {\n  result = result || {};\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type);\n  }\n\n  if (is.array(type)) {\n    return type.reduce((acc, t) => extend(acc, normalize(t, listener, result)), {});\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listener = type;\n    type = '';\n  }\n\n  if (is.func(listener)) {\n    result[type] = result[type] || [];\n    result[type].push(listener);\n  }\n  else if (is.array(listener)) {\n    for (const l of listener) {\n      normalize(type, l, result);\n    }\n  }\n  else if (is.object(listener)) {\n    for (const prefix in listener) {\n      const combinedTypes = split(prefix).map(p => `${type}${p}`);\n\n      normalize(combinedTypes, listener[prefix], result);\n    }\n  }\n\n  return result;\n}\n\nfunction split (type) {\n  return type.trim().split(/ +/);\n}\n","let lastTime = 0;\nlet request;\nlet cancel;\n\nfunction init (window) {\n  request = window.requestAnimationFrame;\n  cancel = window.cancelAnimationFrame;\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (const vendor of vendors) {\n      request = window[`${vendor}RequestAnimationFrame`];\n      cancel = window[`${vendor}CancelAnimationFrame`] || window[`${vendor}CancelRequestAnimationFrame`];\n    }\n  }\n\n  if (!request) {\n    request = callback => {\n      const currTime = new Date().getTime();\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      const token = setTimeout(function () { callback(currTime + timeToCall); },\n        timeToCall);\n\n      lastTime = currTime + timeToCall;\n      return token;\n    };\n\n    cancel = token => clearTimeout(token);\n  }\n}\n\nexport default {\n  request: callback => request(callback),\n  cancel: token => cancel(token),\n  init,\n};\n","import win from './window';\n\nexport function warnOnce (method, message) {\n  let warned = false;\n\n  return function () {\n    if (!warned) {\n      win.window.console.warn(message);\n      warned = true;\n    }\n\n    return method.apply(this, arguments);\n  };\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nexport function _getQBezierValue (t, p1, p2, p3) {\n  const iT = 1 - t;\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n}\n\nexport function getQuadraticCurvePoint (startX, startY, cpX, cpY, endX, endY, position) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  };\n}\n\n// http://gizma.com/easing/\nexport function easeOutQuad (t, b, c, d) {\n  t /= d;\n  return -c * t*(t-2) + b;\n}\n\nexport function copyAction (dest, src) {\n  dest.name  = src.name;\n  dest.axis  = src.axis;\n  dest.edges = src.edges;\n\n  return dest;\n}\n\nimport * as arr    from './arr';\nimport * as dom    from './domUtils';\nimport * as is     from './is';\n\nexport {\n  win,\n  arr,\n  dom,\n  is,\n};\n\nexport { default as browser }           from './browser';\nexport { default as Signals }           from './Signals';\nexport { default as raf }               from './raf';\nexport { default as extend }            from './extend';\nexport { default as clone }             from './clone';\nexport { default as getOriginXY }       from './getOriginXY';\nexport { default as pointer }           from './pointerUtils';\nexport { default as rect }              from './rect';\nexport { default as events }            from './events';\nexport { default as hypot }             from './hypot';\nexport { default as normaizeListeners } from './normalizeListeners';\n","import * as utils from '@interactjs/utils';\nimport DropEvent from './DropEvent';\n\nfunction init (scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interact,\n    /** @lends Interactable */\n    Interactable,\n    interactions,\n    defaults,\n  } = scope;\n\n  interactions.signals.on('after-action-start', function ({ interaction, event, iEvent: dragEvent }) {\n    if (interaction.prepared.name !== 'drag') { return; }\n\n    const { dropStatus } = interaction;\n\n    // reset active dropzones\n    dropStatus.activeDrops = null;\n    dropStatus.events = null;\n\n    if (!scope.dynamicDrop) {\n      dropStatus.activeDrops = getActiveDrops(scope, interaction.element);\n    }\n\n    dropStatus.events = getDropEvents(interaction, event, dragEvent);\n\n    if (dropStatus.events.activate) {\n      fireActivationEvents(dropStatus.activeDrops, dropStatus.events.activate);\n    }\n  });\n\n  interactions.signals.on('action-move', arg => onEventCreated(arg, scope));\n  interactions.signals.on('action-end' , arg => onEventCreated(arg, scope));\n\n  interactions.signals.on('after-action-move', function ({ interaction }) {\n    if (interaction.prepared.name !== 'drag') { return; }\n\n    fireDropEvents(interaction, interaction.dropStatus.events);\n    interaction.dropStatus.events = {};\n  });\n\n  interactions.signals.on('after-action-end', function ({ interaction }) {\n    if (interaction.prepared.name === 'drag') {\n      fireDropEvents(interaction, interaction.dropStatus.events);\n    }\n  });\n\n  interactions.signals.on('stop', function ({ interaction }) {\n    interaction.dropStatus.activeDrops = null;\n    interaction.dropStatus.events = null;\n  });\n\n  interactions.signals.on('new', function (interaction) {\n    interaction.dropStatus = {\n      cur: {\n        dropzone : null,  // the dropzone a drag target might be dropped into\n        element  : null,  // the element at the time of checking\n      },\n      prev: {\n        dropzone : null,  // the dropzone that was recently dragged away from\n        element  : null,  // the element at the time of checking\n      },\n      rejected   : false, // wheather the potential drop was rejected from a listener\n      events     : null,  // the drop events related to the current drag event\n      activeDrops: null,  // an array of { dropzone, element, rect }\n    };\n  });\n\n  interactions.signals.on('stop', function ({ interaction: { dropStatus } }) {\n    dropStatus.cur.dropzone = dropStatus.cur.element =\n      dropStatus.prev.dropzone = dropStatus.prev.element = null;\n    dropStatus.rejected = false;\n  });\n\n  Interactable.prototype.dropzone = function (options) {\n    return dropzoneMethod(this, options);\n  };\n\n  Interactable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect);\n  };\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue) {\n    if (utils.is.bool(newValue)) {\n      //if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones);\n      //}\n\n      scope.dynamicDrop = newValue;\n\n      return interact;\n    }\n    return scope.dynamicDrop;\n  };\n\n  utils.arr.merge(actions.eventTypes, [\n    'dragenter',\n    'dragleave',\n    'dropactivate',\n    'dropdeactivate',\n    'dropmove',\n    'drop',\n  ]);\n  actions.methodDict.drop = 'dropzone';\n\n  scope.dynamicDrop = false;\n\n  defaults.drop = drop.defaults;\n}\n\nfunction collectDrops ({ interactables }, draggableElement) {\n  const drops = [];\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) { continue; }\n\n    const accept = dropzone.options.drop.accept;\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if ((utils.is.element(accept) && accept !== draggableElement)\n        || (utils.is.string(accept)\n        && !utils.dom.matchesSelector(draggableElement, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : [dropzone.target];\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n        });\n      }\n    }\n  }\n\n  return drops;\n}\n\nfunction fireActivationEvents (activeDrops, event) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops) {\n    event.dropzone = dropzone;\n\n    // set current element as event target\n    event.target = element;\n    dropzone.fire(event);\n    event.propagationStopped = event.immediatePropagationStopped = false;\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement);\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element);\n  }\n\n  return activeDrops;\n}\n\nfunction getDrop ({ dropStatus, target: draggable, element: dragElement }, dragEvent, pointerEvent) {\n  const validDrops = [];\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropStatus.activeDrops) {\n    validDrops.push(dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n      ? dropzoneElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.dom.indexOfDeepestElement(validDrops);\n\n  return dropStatus.activeDrops[dropIndex] || null;\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const { dropStatus } = interaction;\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropStatus, dragEvent, 'dropactivate');\n\n    dropEvents.activate.target   = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropStatus, dragEvent, 'dropdeactivate');\n\n    dropEvents.deactivate.target   = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n\n  if (dropStatus.rejected) {\n    return dropEvents;\n  }\n\n  if (dropStatus.cur.element !== dropStatus.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropStatus.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropStatus, dragEvent, 'dragleave');\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = dropStatus.prev.element;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropStatus.prev.dropzone;\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropStatus.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropStatus, dragEvent, 'dragenter');\n\n      dragEvent.dragEnter = dropStatus.cur.element;\n      dragEvent.dropzone = dropStatus.cur.dropzone;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropStatus.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropStatus, dragEvent, 'drop');\n\n    dragEvent.dropzone = dropStatus.cur.dropzone;\n    dragEvent.relatedTarget = dropStatus.cur.element;\n  }\n  if (dragEvent.type === 'dragmove' && dropStatus.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropStatus, dragEvent, 'dropmove');\n\n    dropEvents.move.dragmove = dragEvent;\n    dragEvent.dropzone = dropStatus.cur.dropzone;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, events) {\n  const { dropStatus } = interaction;\n  const {\n    activeDrops,\n    cur,\n    prev,\n  } = dropStatus;\n\n  if (events.leave) { prev.dropzone.fire(events.leave); }\n  if (events.move ) { cur.dropzone.fire(events.move ); }\n  if (events.enter) { cur.dropzone.fire(events.enter); }\n  if (events.drop ) { cur.dropzone.fire(events.drop ); }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate);\n  }\n\n  dropStatus.prev.dropzone  = cur.dropzone;\n  dropStatus.prev.element = cur.element;\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }, scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const { dropStatus } = interaction;\n\n  if (scope.dynamicDrop) {\n    dropStatus.activeDrops = getActiveDrops(scope, interaction.target, interaction.element);\n  }\n\n  const dragEvent = iEvent;\n  const dropResult = getDrop(interaction, dragEvent, event);\n\n  // update rejected status\n  dropStatus.rejected = dropStatus.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropStatus.cur.dropzone &&\n    dropResult.element === dropStatus.cur.element;\n\n  dropStatus.cur.dropzone  = dropResult && dropResult.dropzone;\n  dropStatus.cur.element = dropResult && dropResult.element;\n\n  dropStatus.events = getDropEvents(interaction, event, dragEvent);\n}\n\n/**\n * ```js\n * interact(target)\n * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n *                       event,             // TouchEvent/PointerEvent/MouseEvent\n *                       dropped,           // bool result of the default checker\n *                       dropzone,          // dropzone Interactable\n *                       dropElement,       // dropzone elemnt\n *                       draggable,         // draggable Interactable\n *                       draggableElement) {// draggable element\n *\n *   return dropped && event.target.hasAttribute('allow-drop');\n * }\n * ```\n *\n * ```js\n * interact('.drop').dropzone({\n *   accept: '.can-drop' || document.getElementById('single-drop'),\n *   overlap: 'pointer' || 'center' || zeroToOne\n * }\n * ```\n *\n * Returns or sets whether draggables can be dropped onto this target to\n * trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged element\n * is over this Interactable.\n *\n * @param {boolean | object | null} [options] The new options to be set.\n * @return {boolean | Interactable} The current setting or this Interactable\n */\nfunction dropzoneMethod (interactable, options) {\n  if (utils.is.object(options)) {\n    interactable.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.is.func(options.ondrop)          ) { interactable.on('drop'          , options.ondrop          ); }\n    if (utils.is.func(options.ondropactivate)  ) { interactable.on('dropactivate'  , options.ondropactivate  ); }\n    if (utils.is.func(options.ondropdeactivate)) { interactable.on('dropdeactivate', options.ondropdeactivate); }\n    if (utils.is.func(options.ondragenter)     ) { interactable.on('dragenter'     , options.ondragenter     ); }\n    if (utils.is.func(options.ondragleave)     ) { interactable.on('dragleave'     , options.ondragleave     ); }\n    if (utils.is.func(options.ondropmove)      ) { interactable.on('dropmove'      , options.ondropmove      ); }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      interactable.options.drop.overlap = options.overlap;\n    }\n    else if (utils.is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker;\n    }\n\n\n    return interactable;\n  }\n\n  if (utils.is.bool(options)) {\n    interactable.options.drop.enabled = options;\n\n    return interactable;\n  }\n\n  return interactable.options.drop;\n}\n\nfunction dropCheckMethod (interactable, dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return (interactable.options.drop.checker\n      ? interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = interactable.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement, 'drag');\n    const page = utils.pointer.getPageXY(dragEvent);\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right);\n    const vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (dragRect && utils.is.number(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n}\n\n\nconst drop = {\n  init,\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nexport default drop;\n","export default {\n  base: {\n    preventDefault: 'auto',\n    deltaSource   : 'page',\n  },\n\n  perAction: {\n    enabled     : false,\n    origin: { x: 0, y: 0 },\n  },\n};\n","import extend      from '@interactjs/utils/extend';\nimport getOriginXY from '@interactjs/utils/getOriginXY';\nimport defaults    from './defaultOptions';\nimport hypot       from '@interactjs/utils/hypot';\n\nclass InteractEvent {\n  /** */\n  constructor (interaction, event, actionName, phase, element, related, preEnd, type) {\n    element = element || interaction.element;\n\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || defaults).deltaSource;\n    const origin      = getOriginXY(target, element, actionName);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const prevEvent   = starting? this : interaction.prevEvent;\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur;\n\n    this.page      = extend({}, coords.page);\n    this.client    = extend({}, coords.client);\n    this.timeStamp = coords.timeStamp;\n\n    if (!ending) {\n      this.page.x -= origin.x;\n      this.page.y -= origin.y;\n\n      this.client.x -= origin.x;\n      this.client.y -= origin.y;\n    }\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.preEnd        = preEnd;\n    this.type          = type || (actionName + (phase || ''));\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0;\n\n    this.x0       = interaction.coords.start.page.x - origin.x;\n    this.y0       = interaction.coords.start.page.y - origin.y;\n    this.clientX0 = interaction.coords.start.client.x - origin.x;\n    this.clientY0 = interaction.coords.start.client.y - origin.y;\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 };\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      };\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp;\n    this.duration  = this.timeStamp - this.t0;\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource]);\n    this.speed = hypot(this.velocity.x, this.velocity.y);\n\n    this.swipe = (ending || phase === 'inertiastart')? this.getSwipe() : null;\n  }\n\n  get pageX () { return this.page.x; }\n  get pageY () { return this.page.y; }\n  set pageX (value) { this.page.x = value; }\n  set pageY (value) { this.page.y = value; }\n\n  get clientX () { return this.client.x; }\n  get clientY () { return this.client.y; }\n  set clientX (value) { this.client.x = value; }\n  set clientY (value) { this.client.y = value; }\n\n  get dx () { return this.delta.x; }\n  get dy () { return this.delta.y; }\n  set dx (value) { this.delta.x = value; }\n  set dy (value) { this.delta.y = value; }\n\n  get velocityX () { return this.velocity.x; }\n  get velocityY () { return this.velocity.y; }\n  set velocityX (value) { this.velocity.x = value; }\n  set velocityY (value) { this.velocity.y = value; }\n\n  getSwipe () {\n    const interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600\n        || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    const overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap;\n    const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    };\n  }\n\n  preventDefault () {}\n\n  /** */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  /** */\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nexport default InteractEvent;\n","import * as utils from '@interactjs/utils';\nimport InteractEvent from '@interactjs/core/InteractEvent';\n\nfunction init (scope) {\n  const {\n    actions,\n    Interactable,\n    interactions,\n    defaults,\n  } = scope;\n\n  const gesture = {\n    defaults: {\n    },\n\n    checker: function (pointer, event, interactable, element, interaction) {\n      if (interaction.pointers.length >= 2) {\n        return { name: 'gesture' };\n      }\n\n      return null;\n    },\n\n    getCursor: function () {\n      return '';\n    },\n  };\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * });\n   *\n   * var isGestureable = interact(element).gesturable();\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (options) {\n    if (utils.is.object(options)) {\n      this.options.gesture.enabled = options.enabled === false? false: true;\n      this.setPerAction('gesture', options);\n      this.setOnEvents('gesture', options);\n\n      return this;\n    }\n\n    if (utils.is.bool(options)) {\n      this.options.gesture.enabled = options;\n\n      return this;\n    }\n\n    return this.options.gesture;\n  };\n\n  interactions.signals.on('action-start', start);\n  interactions.signals.on('action-move', move);\n\n  interactions.signals.on('action-start', updateGestureProps);\n  interactions.signals.on('action-move', updateGestureProps);\n  interactions.signals.on('action-end', updateGestureProps);\n\n  interactions.signals.on('new', function (interaction) {\n    interaction.gesture = {\n      start: { x: 0, y: 0 },\n\n      startDistance: 0,   // distance between two touches of touchStart\n      prevDistance : 0,\n      distance     : 0,\n\n      scale: 1,           // gesture.distance / gesture.startDistance\n\n      startAngle: 0,      // angle of line joining two touches\n      prevAngle : 0,      // angle of the previous gesture event\n    };\n  });\n\n  actions.gesture = gesture;\n  actions.names.push('gesture');\n  utils.arr.merge(actions.eventTypes, [\n    'gesturestart',\n    'gesturemove',\n    'gestureend',\n  ]);\n  actions.methodDict.gesture = 'gesturable';\n\n  defaults.gesture = gesture.defaults;\n}\n\nfunction start ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  iEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = iEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = iEvent.angle;\n  interaction.gesture.scale = 1;\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  iEvent.ds = iEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(iEvent);\n\n  interaction.gesture.prevAngle = iEvent.angle;\n  interaction.gesture.prevDistance = iEvent.distance;\n\n  if (iEvent.scale !== Infinity\n      && iEvent.scale !== null\n      && iEvent.scale !== undefined\n      && !isNaN(iEvent.scale)) {\n\n    interaction.gesture.scale = iEvent.scale;\n  }\n}\n\nfunction updateGestureProps ({ interaction, iEvent, event, phase, deltaSource }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const pointers = interaction.pointers;\n  const starting = phase === 'start';\n  const ending = phase === 'end';\n\n  iEvent.touches = [pointers[0].pointer, pointers[1].pointer];\n\n  if (starting) {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.pointer.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.pointer.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.pointer.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.pointer.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n}\n\nexport default { init };\n","import * as utils from '@interactjs/utils';\n\nfunction init (scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable,\n    interactions,\n    defaults,\n  } = scope;\n\n  // Less Precision with touch input\n  const defaultMargin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\n  const resize = {\n    defaults: {\n      square: false,\n      preserveAspectRatio: false,\n      axis: 'xy',\n\n      // use default margin\n      margin: NaN,\n\n      // object with props left, right, top, bottom which are\n      // true/false values to resize when the pointer is over that edge,\n      // CSS selectors to match the handles for each direction\n      // or the Elements for each handle\n      edges: null,\n\n      // a value of 'none' will limit the resize rect to a minimum of 0x0\n      // 'negate' will alow the rect to have negative width/height\n      // 'reposition' will keep the width/height positive by swapping\n      // the top and bottom edges and/or swapping the left and right edges\n      invert: 'none',\n    },\n\n    checker: function (pointer, event, interactable, element, interaction, rect) {\n      if (!rect) { return null; }\n\n      const page = utils.extend({}, interaction.coords.cur.page);\n      const options = interactable.options;\n\n      if (options.resize.enabled) {\n        const resizeOptions = options.resize;\n        const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n        // if using resize.edges\n        if (utils.is.object(resizeOptions.edges)) {\n          for (const edge in resizeEdges) {\n            resizeEdges[edge] = checkResizeEdge(edge,\n              resizeOptions.edges[edge],\n              page,\n              interaction._eventTarget,\n              element,\n              rect,\n              resizeOptions.margin || defaultMargin);\n          }\n\n          resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n          resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n          if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n            return {\n              name: 'resize',\n              edges: resizeEdges,\n            };\n          }\n        }\n        else {\n          const right  = options.resize.axis !== 'y' && page.x > (rect.right  - defaultMargin);\n          const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - defaultMargin);\n\n          if (right || bottom) {\n            return {\n              name: 'resize',\n              axes: (right? 'x' : '') + (bottom? 'y' : ''),\n            };\n          }\n        }\n      }\n\n      return null;\n    },\n\n    cursors: (browser.isIe9 ? {\n      x : 'e-resize',\n      y : 's-resize',\n      xy: 'se-resize',\n\n      top        : 'n-resize',\n      left       : 'w-resize',\n      bottom     : 's-resize',\n      right      : 'e-resize',\n      topleft    : 'se-resize',\n      bottomright: 'se-resize',\n      topright   : 'ne-resize',\n      bottomleft : 'ne-resize',\n    } : {\n      x : 'ew-resize',\n      y : 'ns-resize',\n      xy: 'nwse-resize',\n\n      top        : 'ns-resize',\n      left       : 'ew-resize',\n      bottom     : 'ns-resize',\n      right      : 'ew-resize',\n      topleft    : 'nwse-resize',\n      bottomright: 'nwse-resize',\n      topright   : 'nesw-resize',\n      bottomleft : 'nesw-resize',\n    }),\n\n    getCursor: function (action) {\n      if (action.axis) {\n        return resize.cursors[action.name + action.axis];\n      }\n      else if (action.edges) {\n        let cursorKey = '';\n        const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n        for (let i = 0; i < 4; i++) {\n          if (action.edges[edgeNames[i]]) {\n            cursorKey += edgeNames[i];\n          }\n        }\n\n        return resize.cursors[cursorKey];\n      }\n    },\n  };\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * });\n   *\n   * var isResizeable = interact(element).resizable();\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (options) {\n    if (utils.is.object(options)) {\n      this.options.resize.enabled = options.enabled === false? false: true;\n      this.setPerAction('resize', options);\n      this.setOnEvents('resize', options);\n\n      if (/^x$|^y$|^xy$/.test(options.axis)) {\n        this.options.resize.axis = options.axis;\n      }\n      else if (options.axis === null) {\n        this.options.resize.axis = defaults.resize.axis;\n      }\n\n      if (utils.is.bool(options.preserveAspectRatio)) {\n        this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n      }\n      else if (utils.is.bool(options.square)) {\n        this.options.resize.square = options.square;\n      }\n\n      return this;\n    }\n    if (utils.is.bool(options)) {\n      this.options.resize.enabled = options;\n\n      return this;\n    }\n    return this.options.resize;\n  };\n\n  interactions.signals.on('new', function (interaction) {\n    interaction.resizeAxes = 'xy';\n  });\n\n  interactions.signals.on('action-start', start);\n  interactions.signals.on('action-move', move);\n\n  interactions.signals.on('action-start', updateEventAxes);\n  interactions.signals.on('action-move', updateEventAxes);\n\n  actions.resize = resize;\n  actions.names.push('resize');\n  utils.arr.merge(actions.eventTypes, [\n    'resizestart',\n    'resizemove',\n    'resizeinertiastart',\n    'resizeresume',\n    'resizeend',\n  ]);\n  actions.methodDict.resize = 'resizable';\n\n  defaults.resize = resize.defaults;\n}\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.is.number(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.is.number(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.is.element(element)) { return false; }\n\n  return utils.is.element(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.dom.matchesUpTo(element, value, interactableElement);\n}\n\nfunction start ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return;\n  }\n\n  const startRect = interaction.target.getRect(interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n\n  /*\n   * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n   * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n   * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n   * on the active edges and the edge being interacted with.\n   */\n  if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n    const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n    interaction.prepared._linkedEdges = linkedEdges;\n  }\n  else {\n    interaction.prepared._linkedEdges = null;\n  }\n\n  // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n  if (resizeOptions.preserveAspectRatio) {\n    interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n  }\n\n  interaction.resizeRects = {\n    start     : startRect,\n    current   : utils.extend({}, startRect),\n    inverted  : utils.extend({}, startRect),\n    previous  : utils.extend({}, startRect),\n    delta     : {\n      left: 0, right : 0, width : 0,\n      top : 0, bottom: 0, height: 0,\n    },\n  };\n\n  iEvent.rect = interaction.resizeRects.inverted;\n  iEvent.deltaRect = interaction.resizeRects.delta;\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return; }\n\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  // eslint-disable-next-line no-shadow\n  const start      = interaction.resizeRects.start;\n  const current    = interaction.resizeRects.current;\n  const inverted   = interaction.resizeRects.inverted;\n  const deltaRect  = interaction.resizeRects.delta;\n  const previous   = utils.extend(interaction.resizeRects.previous, inverted);\n  const originalEdges = edges;\n\n  const eventDelta = utils.extend({}, iEvent.delta);\n\n  if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    const startAspectRatio = resizeOptions.preserveAspectRatio\n      ? interaction.resizeStartAspectRatio\n      : 1;\n\n    edges = interaction.prepared._linkedEdges;\n\n    if ((originalEdges.left && originalEdges.bottom)\n        || (originalEdges.right && originalEdges.top)) {\n      eventDelta.y = -eventDelta.x / startAspectRatio;\n    }\n    else if (originalEdges.left || originalEdges.right ) { eventDelta.y = eventDelta.x / startAspectRatio; }\n    else if (originalEdges.top  || originalEdges.bottom) { eventDelta.x = eventDelta.y * startAspectRatio; }\n  }\n\n  // update the 'current' rect without modifications\n  if (edges.top   ) { current.top    += eventDelta.y; }\n  if (edges.bottom) { current.bottom += eventDelta.y; }\n  if (edges.left  ) { current.left   += eventDelta.x; }\n  if (edges.right ) { current.right  += eventDelta.x; }\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    utils.extend(inverted, current);\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      let swap;\n\n      if (inverted.top > inverted.bottom) {\n        swap = inverted.top;\n\n        inverted.top = inverted.bottom;\n        inverted.bottom = swap;\n      }\n      if (inverted.left > inverted.right) {\n        swap = inverted.left;\n\n        inverted.left = inverted.right;\n        inverted.right = swap;\n      }\n    }\n  }\n  else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    inverted.top    = Math.min(current.top, start.bottom);\n    inverted.bottom = Math.max(current.bottom, start.top);\n    inverted.left   = Math.min(current.left, start.right);\n    inverted.right  = Math.max(current.right, start.left);\n  }\n\n  inverted.width  = inverted.right  - inverted.left;\n  inverted.height = inverted.bottom - inverted.top ;\n\n  for (const edge in inverted) {\n    deltaRect[edge] = inverted[edge] - previous[edge];\n  }\n\n  iEvent.edges = interaction.prepared.edges;\n  iEvent.rect = inverted;\n  iEvent.deltaRect = deltaRect;\n}\n\nfunction updateEventAxes ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = iEvent.delta.y;\n    }\n    else {\n      iEvent.delta.y = iEvent.delta.x;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.delta.y = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = 0;\n    }\n  }\n}\n\nexport default { init };\n","import gesture from './gesture';\nimport resize from './resize';\nimport drag from './drag';\nimport drop from './drop';\n\nfunction init (scope) {\n  gesture.init(scope);\n  resize.init(scope);\n  drag.init(scope);\n  drop.init(scope);\n}\n\nexport {\n  gesture,\n  resize,\n  drag,\n  drop,\n  init,\n};\n","import raf            from '@interactjs/utils/raf';\nimport { getWindow }  from '@interactjs/utils/window';\nimport * as is        from '@interactjs/utils/is';\nimport * as domUtils  from '@interactjs/utils/domUtils';\n\nfunction init (scope) {\n  const {\n    interactions,\n    defaults,\n  } = scope;\n\n  const autoScroll = scope.autoScroll = {\n    defaults: {\n      enabled  : false,\n      container: null,     // the item that is scrolled (Window or HTMLElement)\n      margin   : 60,\n      speed    : 300,      // the scroll speed in pixels per second\n    },\n\n    interaction: null,\n    i: null,    // the handle returned by window.setInterval\n    x: 0, y: 0, // Direction each pulse is to scroll in\n\n    isScrolling: false,\n    prevTime: 0,\n\n    start: function (interaction) {\n      autoScroll.isScrolling = true;\n      raf.cancel(autoScroll.i);\n\n      autoScroll.interaction = interaction;\n      autoScroll.prevTime = new Date().getTime();\n      autoScroll.i = raf.request(autoScroll.scroll);\n    },\n\n    stop: function () {\n      autoScroll.isScrolling = false;\n      raf.cancel(autoScroll.i);\n    },\n\n    // scroll the window by the values in scroll.x/y\n    scroll: function () {\n      const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n      const container = options.container || getWindow(autoScroll.interaction.element);\n      const now = new Date().getTime();\n      // change in time in seconds\n      const dt = (now - autoScroll.prevTime) / 1000;\n      // displacement\n      const s = options.speed * dt;\n\n      if (s >= 1) {\n        if (is.window(container)) {\n          container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n        }\n        else if (container) {\n          container.scrollLeft += autoScroll.x * s;\n          container.scrollTop  += autoScroll.y * s;\n        }\n\n        autoScroll.prevTime = now;\n      }\n\n      if (autoScroll.isScrolling) {\n        raf.cancel(autoScroll.i);\n        autoScroll.i = raf.request(autoScroll.scroll);\n      }\n    },\n    check: function (interactable, actionName) {\n      const options = interactable.options;\n\n      return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n    },\n    onInteractionMove: function ({ interaction, pointer }) {\n      if (!(interaction.interacting()\n            && autoScroll.check(interaction.target, interaction.prepared.name))) {\n        return;\n      }\n\n      if (interaction.simulation) {\n        autoScroll.x = autoScroll.y = 0;\n        return;\n      }\n\n      let top;\n      let right;\n      let bottom;\n      let left;\n\n      const options = interaction.target.options[interaction.prepared.name].autoScroll;\n      const container = options.container || getWindow(interaction.element);\n\n      if (is.window(container)) {\n        left   = pointer.clientX < autoScroll.margin;\n        top    = pointer.clientY < autoScroll.margin;\n        right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n        bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n      }\n      else {\n        const rect = domUtils.getElementClientRect(container);\n\n        left   = pointer.clientX < rect.left   + autoScroll.margin;\n        top    = pointer.clientY < rect.top    + autoScroll.margin;\n        right  = pointer.clientX > rect.right  - autoScroll.margin;\n        bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n      }\n\n      autoScroll.x = (right ? 1: left? -1: 0);\n      autoScroll.y = (bottom? 1:  top? -1: 0);\n\n      if (!autoScroll.isScrolling) {\n        // set the autoScroll properties to those of the target\n        autoScroll.margin = options.margin;\n        autoScroll.speed  = options.speed;\n\n        autoScroll.start(interaction);\n      }\n    },\n  };\n\n  interactions.signals.on('stop', autoScroll.stop);\n\n  interactions.signals.on('action-move', autoScroll.onInteractionMove);\n\n  defaults.perAction.autoScroll = autoScroll.defaults;\n}\n\nexport default { init };\n","import * as is       from '@interactjs/utils/is';\nimport * as domUtils from '@interactjs/utils/domUtils';\n\nimport { warnOnce } from '@interactjs/utils';\n\nfunction init (scope) {\n  const {\n    /** @lends Interactable */\n    Interactable,\n    actions,\n  } = scope;\n\n  Interactable.prototype.getAction = function (pointer, event, interaction, element) {\n    const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction);\n    }\n\n    return action;\n  };\n\n  /**\n   * ```js\n   * interact(element, { ignoreFrom: document.getElementById('no-action') });\n   * // or\n   * interact(element).ignoreFrom('input, textarea, a');\n   * ```\n   * @deprecated\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   });\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (newValue) {\n    return this._backCompatOption('ignoreFrom', newValue);\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).');\n\n  /**\n   * ```js\n   *\n   * @deprecated\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   });\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (newValue) {\n    return this._backCompatOption('allowFrom', newValue);\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).');\n\n  Interactable.prototype.testIgnore = function (ignoreFrom, interactableElement, element) {\n    if (!ignoreFrom || !is.element(element)) { return false; }\n\n    if (is.string(ignoreFrom)) {\n      return domUtils.matchesUpTo(element, ignoreFrom, interactableElement);\n    }\n    else if (is.element(ignoreFrom)) {\n      return domUtils.nodeContains(ignoreFrom, element);\n    }\n\n    return false;\n  };\n\n  Interactable.prototype.testAllow = function (allowFrom, interactableElement, element) {\n    if (!allowFrom) { return true; }\n\n    if (!is.element(element)) { return false; }\n\n    if (is.string(allowFrom)) {\n      return domUtils.matchesUpTo(element, allowFrom, interactableElement);\n    }\n    else if (is.element(allowFrom)) {\n      return domUtils.nodeContains(allowFrom, element);\n    }\n\n    return false;\n  };\n\n  Interactable.prototype.testIgnoreAllow = function (options, interactableElement, eventTarget) {\n    return (!this.testIgnore(options.ignoreFrom, interactableElement, eventTarget)\n      && this.testAllow(options.allowFrom, interactableElement, eventTarget));\n  };\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *   if (interact.matchesSelector(event.target, '.drag-handle') {\n   *     // force drag with handle target\n   *     action.name = drag;\n   *   }\n   *   else {\n   *     // resize from the top and right edges\n   *     action.name  = 'resize';\n   *     action.edges = { top: true, right: true };\n   *   }\n   *\n   *   return action;\n   * });\n   * ```\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = function (checker) {\n    if (is.func(checker)) {\n      this.options.actionChecker = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.actionChecker;\n\n      return this;\n    }\n\n    return this.options.actionChecker;\n  };\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = function (newValue) {\n    if (is.bool(newValue)) {\n      this.options.styleCursor = newValue;\n\n      return this;\n    }\n\n    if (newValue === null) {\n      delete this.options.styleCursor;\n\n      return this;\n    }\n\n    return this.options.styleCursor;\n  };\n\n  Interactable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n    const rect = this.getRect(element);\n    const buttons = event.buttons || ({\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    })[event.button];\n    let action = null;\n\n    for (const actionName of actions.names) {\n      // check mouseButton setting if the pointer is down\n      if (interaction.pointerIsDown\n          && /mouse|pointer/.test(interaction.pointerType)\n          && (buttons & this.options[actionName].mouseButtons) === 0) {\n        continue;\n      }\n\n      action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n      if (action) {\n        return action;\n      }\n    }\n  };\n}\n\nexport default { init };\n","import * as utils from '@interactjs/utils';\nimport InteractableMethods from './InteractableMethods';\n\nfunction init (scope) {\n  const {\n    interact,\n    interactions,\n    defaults,\n    Signals,\n  } = scope;\n\n  interact.use(InteractableMethods);\n\n  // set cursor style on mousedown\n  interactions.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n    if (interaction.interacting()) { return; }\n\n    const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope);\n    prepare(interaction, actionInfo, scope);\n  });\n\n  // set cursor style on mousemove\n  interactions.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n    if (interaction.pointerType !== 'mouse'\n        || interaction.pointerIsDown\n        || interaction.interacting()) { return; }\n\n    const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope);\n    prepare(interaction, actionInfo, scope);\n  });\n\n  interactions.signals.on('move', function (arg) {\n    const { interaction, event } = arg;\n\n    if (!interaction.pointerIsDown\n        || interaction.interacting()\n        || !interaction.pointerWasMoved\n        || !interaction.prepared.name) {\n      return;\n    }\n\n    scope.autoStart.signals.fire('before-start', arg);\n\n    const target = interaction.target;\n\n    if (interaction.prepared.name && target) {\n      // check manualStart and interaction limit\n      if (target.options[interaction.prepared.name].manualStart\n          || !withinInteractionLimit(target, interaction.element, interaction.prepared, scope)) {\n        interaction.stop(event);\n      }\n      else {\n        interaction.start(interaction.prepared, target, interaction.element);\n      }\n    }\n  });\n\n  interactions.signals.on('stop', function ({ interaction }) {\n    const target = interaction.target;\n\n    if (target && target.options.styleCursor) {\n      setCursor(interaction.element, '', scope);\n    }\n  });\n\n  interact.maxInteractions = maxInteractions;\n\n  defaults.base.actionChecker = null;\n  defaults.base.styleCursor = true;\n\n  utils.extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom:  null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  });\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = newValue => maxInteractions(newValue, scope);\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n    signals: new Signals(),\n  };\n}\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable, element, eventTarget, scope) {\n  if (utils.is.object(action)\n      && interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget)\n      && interactable.options[action.name].enabled\n      && withinInteractionLimit(interactable, element, action, scope)) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements, eventTarget, scope) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = validateAction(\n      match.getAction(pointer, event, interaction, matchElement),\n      match,\n      matchElement,\n      eventTarget,\n      scope);\n\n    if (action) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget, scope) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n\n  function pushMatches (interactable) {\n    matches.push(interactable);\n    matchElements.push(element);\n  }\n\n  while (utils.is.element(element)) {\n    matches = [];\n    matchElements = [];\n\n    scope.interactables.forEachMatch(element, pushMatches);\n\n    const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements, eventTarget, scope);\n\n    if (actionInfo.action\n      && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n      return actionInfo;\n    }\n\n    element = utils.dom.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }, scope) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    setCursor(interaction.element, '', scope);\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? scope.actions[action.name].getCursor(action) : '';\n    setCursor(interaction.element, cursor, scope);\n  }\n\n  scope.autoStart.signals.fire('prepared', { interaction: interaction });\n}\n\nfunction withinInteractionLimit (interactable, element, action, scope) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  const autoStartMax = scope.autoStart.maxInteractions;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) { return; }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStartMax) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction === action.name && targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStartMax > 0;\n}\n\nfunction maxInteractions (newValue, scope) {\n  if (utils.is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return scope.autoStart.maxInteractions;\n}\n\nfunction setCursor (element, cursor, scope) {\n  if (scope.autoStart.cursorElement) {\n    scope.autoStart.cursorElement.style.cursor = '';\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor;\n  element.style.cursor = cursor;\n  scope.autoStart.cursorElement = cursor ? element : null;\n}\n\nexport default {\n  init,\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n};\n","import * as is from '@interactjs/utils/is';\nimport autoStart from './base';\n\nimport { parentNode } from '@interactjs/utils/domUtils';\n\nfunction init (scope) {\n  scope.autoStart.signals.on('before-start',  function ({ interaction, eventTarget, dx, dy }) {\n    if (interaction.prepared.name !== 'drag') { return; }\n\n    // check if a drag is in the correct axis\n    const absX = Math.abs(dx);\n    const absY = Math.abs(dy);\n    const targetOptions = interaction.target.options.drag;\n    const startAxis = targetOptions.startAxis;\n    const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n    interaction.prepared.axis = targetOptions.lockAxis === 'start'\n      ? currentAxis[0] // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis;\n\n    // if the movement isn't in the startAxis of the interactable\n    if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n      // cancel the prepared action\n      interaction.prepared.name = null;\n\n      // then try to get a drag from another ineractable\n      let element = eventTarget;\n\n      const getDraggable = function (interactable) {\n        if (interactable === interaction.target) { return; }\n\n        const options = interaction.target.options.drag;\n\n        if (!options.manualStart\n            && interactable.testIgnoreAllow(options, element, eventTarget)) {\n\n          const action = interactable.getAction(\n            interaction.downPointer, interaction.downEvent, interaction, element);\n\n          if (action\n              && action.name === 'drag'\n              && checkStartAxis(currentAxis, interactable)\n              && autoStart.validateAction(action, interactable, element, eventTarget, scope)) {\n\n            return interactable;\n          }\n        }\n      };\n\n      // check all interactables\n      while (is.element(element)) {\n        const interactable = scope.interactables.forEachMatch(element, getDraggable);\n\n        if (interactable) {\n          interaction.prepared.name = 'drag';\n          interaction.target = interactable;\n          interaction.element = element;\n          break;\n        }\n\n        element = parentNode(element);\n      }\n    }\n  });\n\n  function checkStartAxis (startAxis, interactable) {\n    if (!interactable) { return false; }\n\n    const thisAxis = interactable.options.drag.startAxis;\n\n    return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis);\n  }\n}\n\nexport default { init };\n","function init (scope) {\n  const {\n    autoStart,\n    interactions,\n    defaults,\n  } = scope;\n\n  defaults.perAction.hold = 0;\n  defaults.perAction.delay = 0;\n\n  interactions.signals.on('new', function (interaction) {\n    interaction.autoStartHoldTimer = null;\n  });\n\n  autoStart.signals.on('prepared', function ({ interaction }) {\n    const hold = getHoldDuration(interaction);\n\n    if (hold > 0) {\n      interaction.autoStartHoldTimer = setTimeout(() => {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }, hold);\n    }\n  });\n\n  interactions.signals.on('move', function ({ interaction, duplicate }) {\n    if (interaction.pointerWasMoved && !duplicate) {\n      clearTimeout(interaction.autoStartHoldTimer);\n    }\n  });\n\n  // prevent regular down->move autoStart\n  autoStart.signals.on('before-start', function ({ interaction }) {\n    const hold = getHoldDuration(interaction);\n\n    if (hold > 0) {\n      interaction.prepared.name = null;\n    }\n  });\n}\n\nfunction getHoldDuration (interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name;\n\n  if (!actionName) { return null; }\n\n  const options = interaction.target.options;\n\n  return options[actionName].hold || options[actionName].delay;\n}\n\nexport default {\n  init,\n  getHoldDuration,\n};\n","import autoStart from './base';\nimport hold from './hold';\nimport dragAxis from './dragAxis';\n\nfunction init (scope) {\n  autoStart.init(scope);\n  hold.init(scope);\n  dragAxis.init(scope);\n}\n\nexport {\n  autoStart,\n  hold,\n  dragAxis,\n  init,\n};\n","import * as is from '@interactjs/utils/is';\nimport events from '@interactjs/utils/events';\n\nimport { nodeContains, matchesSelector } from '@interactjs/utils/domUtils';\nimport { getWindow } from '@interactjs/utils/window';\n\nfunction preventDefault (interactable, newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    interactable.options.preventDefault = newValue;\n    return interactable;\n  }\n\n  if (is.bool(newValue)) {\n    interactable.options.preventDefault = newValue? 'always' : 'never';\n    return interactable;\n  }\n\n  return interactable.options.preventDefault;\n}\n\nfunction checkAndPreventDefault (interactable, scope, event) {\n  const setting = interactable.options.preventDefault;\n\n  if (setting === 'never') { return; }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document;\n    const docOptions = scope.getDocOptions(doc);\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return;\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on editable elements\n  if (is.element(event.target)\n      && matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return;\n  }\n\n  event.preventDefault();\n}\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nexport function init (scope) {\n  /** @lends Interactable */\n  const Interactable = scope.Interactable;\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = function (newValue) {\n    return preventDefault(this, newValue);\n  };\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event);\n  };\n\n  for (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n    scope.interactions.signals.on(eventSignal, onInteractionEvent);\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.eventMap.dragstart = function preventNativeDrag (event) {\n    for (const interaction of scope.interactions.list) {\n\n      if (interaction.element\n        && (interaction.element === event.target\n          || nodeContains(interaction.element, event.target))) {\n\n        interaction.target.checkAndPreventDefault(event);\n        return;\n      }\n    }\n  };\n}\n\nexport default { init };\n","import extend from '@interactjs/utils/extend';\n\nfunction init (scope) {\n  const {\n    interactions,\n  } = scope;\n\n  scope.defaults.perAction.modifiers = [];\n\n  interactions.signals.on('new', function (interaction) {\n    interaction.modifiers = {\n      startOffset: { left: 0, right: 0, top: 0, bottom: 0 },\n      offsets    : {},\n      statuses   : null,\n      result     : null,\n    };\n  });\n\n  interactions.signals.on('before-action-start' , arg =>\n    start(arg, arg.interaction.coords.start.page));\n\n  interactions.signals.on('action-resume', arg => {\n    beforeMove(arg);\n    start(arg, arg.interaction.coords.cur.page);\n  });\n\n  interactions.signals.on('before-action-move', beforeMove);\n  interactions.signals.on('before-action-end', beforeEnd);\n\n  interactions.signals.on('before-action-start', setCoords);\n  interactions.signals.on('before-action-move', setCoords);\n\n  interactions.signals.on('after-action-start', restoreCoords);\n  interactions.signals.on('after-action-move', restoreCoords);\n  interactions.signals.on('stop', stop);\n}\n\nfunction startAll (arg) {\n  for (const status of arg.statuses) {\n    if (status.methods.start) {\n      arg.status = status;\n      status.methods.start(arg);\n    }\n  }\n}\n\nfunction getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left  : coords.x - rect.left,\n      top   : coords.y - rect.top,\n      right : rect.right  - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left  : 0,\n      top   : 0,\n      right : 0,\n      bottom: 0,\n    };\n}\n\nfunction start ({ interaction, phase }, pageCoords) {\n  const { target: interactable, element } = interaction;\n  const modifierList = getModifierList(interaction);\n  const statuses = prepareStatuses(modifierList);\n\n  const rect = extend({}, interactable.getRect(element));\n\n  if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n  if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n\n  const startOffset = getRectOffset(rect, pageCoords);\n\n  interaction.modifiers.startOffset = startOffset;\n  interaction.modifiers.startDelta = { x: 0, y: 0 };\n\n  const arg = {\n    interaction,\n    interactable,\n    element,\n    pageCoords,\n    phase,\n    rect,\n    startOffset,\n    statuses,\n    preEnd: false,\n    requireEndOnly: false,\n  };\n\n  interaction.modifiers.statuses = statuses;\n  startAll(arg);\n\n  arg.pageCoords = extend({}, interaction.coords.start.page);\n\n  const result = interaction.modifiers.result = setAll(arg);\n\n  return result;\n}\n\nfunction setAll (arg) {\n  const { interaction, phase, preEnd, requireEndOnly, rect, skipModifiers } = arg;\n\n  const statuses = skipModifiers\n    ? arg.statuses.slice(interaction.modifiers.skil)\n    : arg.statuses;\n\n  arg.coords = extend({}, arg.pageCoords);\n  arg.rect = extend({}, rect);\n\n  const result = {\n    delta: { x: 0, y: 0 },\n    coords: arg.coords,\n    shouldMove: true,\n  };\n\n  for (const status of statuses) {\n    const { options } = status;\n\n    if (!status.methods.set ||\n      !shouldDo(options, preEnd, requireEndOnly, phase)) { continue; }\n\n    arg.status = status;\n    status.methods.set(arg);\n  }\n\n  result.delta.x = arg.coords.x - arg.pageCoords.x;\n  result.delta.y = arg.coords.y - arg.pageCoords.y;\n\n\n  const differsFromPrevCoords =\n    interaction.coords.prev.page.x !== result.coords.x ||\n    interaction.coords.prev.page.y !== result.coords.y;\n\n  // a move should be fired if:\n  //  - the modified coords are different to the prev interaction coords\n  //  - there's a non zero result.delta\n  result.shouldMove = differsFromPrevCoords ||\n    result.delta.x !== 0 || result.delta.y !== 0;\n\n  return result;\n}\n\nfunction prepareStatuses (modifierList) {\n  const statuses = [];\n\n  for (let index = 0; index < modifierList.length; index++) {\n    const { options, methods } = modifierList[index];\n\n    if (options && options.enabled === false) { continue; }\n\n    const status = {\n      options,\n      methods,\n      index,\n    };\n\n    statuses.push(status);\n  }\n\n  return statuses;\n}\n\nfunction beforeMove ({ interaction, phase, preEnd, skipModifiers }) {\n  const { target: interactable, element } = interaction;\n  const modifierResult = setAll(\n    {\n      interaction,\n      interactable,\n      element,\n      preEnd,\n      phase,\n      pageCoords: interaction.coords.cur.page,\n      rect: interactable.getRect(element),\n      statuses: interaction.modifiers.statuses,\n      requireEndOnly: false,\n      skipModifiers,\n    });\n\n  interaction.modifiers.result = modifierResult;\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interaction.interacting()) {\n    return false;\n  }\n}\n\nfunction beforeEnd (arg) {\n  const { interaction, event } = arg;\n  const statuses = interaction.modifiers.statuses;\n\n  if (!statuses || !statuses.length) {\n    return;\n  }\n\n  let didPreEnd = false;\n\n  for (const status of statuses) {\n    arg.status = status;\n    const { options, methods } = status;\n\n    const endResult = methods.beforeEnd && methods.beforeEnd(arg);\n\n    if (endResult === false) {\n      return false;\n    }\n\n    // if the endOnly option is true for any modifier\n    if (!didPreEnd && shouldDo(options, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.move({ event, preEnd: true });\n      didPreEnd = true;\n    }\n  }\n}\n\nfunction stop (arg) {\n  const { interaction } = arg;\n  const statuses = interaction.modifiers.statuses;\n\n  if (!statuses || !statuses.length) {\n    return;\n  }\n\n  const modifierArg = extend({\n    statuses,\n    interactable: interaction.target,\n    element: interaction.element,\n  }, arg);\n\n\n  restoreCoords(arg);\n\n  for (const status of statuses) {\n    modifierArg.status = status;\n\n    if (status.methods.stop) { status.methods.stop(modifierArg); }\n  }\n\n  arg.interaction.modifiers.statuses = null;\n}\n\nfunction setCoords (arg) {\n  const { interaction, phase } = arg;\n  const curCoords = arg.curCoords || interaction.coords.cur;\n  const startCoords = arg.startCoords || interaction.coords.start;\n  const { result, startDelta } = interaction.modifiers;\n  const curDelta = result.delta;\n\n  if (phase === 'start') {\n    extend(interaction.modifiers.startDelta, result.delta);\n  }\n\n  for (const [coordsSet, delta] of [[startCoords, startDelta], [curCoords, curDelta]]) {\n    coordsSet.page.x   += delta.x;\n    coordsSet.page.y   += delta.y;\n    coordsSet.client.x += delta.x;\n    coordsSet.client.y += delta.y;\n  }\n}\n\nfunction restoreCoords ({ interaction: { coords, modifiers } }) {\n  const { startDelta, result: { delta: curDelta } } = modifiers;\n\n  for (const [coordsSet, delta] of [[coords.start, startDelta], [coords.cur, curDelta]]) {\n    coordsSet.page.x -= delta.x;\n    coordsSet.page.y -= delta.y;\n    coordsSet.client.x -= delta.x;\n    coordsSet.client.y -= delta.y;\n  }\n\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.target.options[interaction.prepared.name];\n  const actionModifiers = actionOptions.modifiers;\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers;\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map(type => {\n      const options = actionOptions[type];\n\n      return options && options.enabled && {\n        options,\n        methods: options._methods,\n      };\n    })\n    .filter(m => !!m);\n}\n\nfunction shouldDo (options, preEnd, requireEndOnly, phase) {\n  return options\n    ? options.enabled !== false &&\n      (preEnd || !options.endOnly) &&\n      (!requireEndOnly || options.endOnly) &&\n      (options.setStart || phase !== 'start')\n    : !requireEndOnly;\n}\n\nexport default {\n  init,\n  startAll,\n  setAll,\n  prepareStatuses,\n  start,\n  beforeMove,\n  beforeEnd,\n  stop,\n  shouldDo,\n  getModifierList,\n  getRectOffset,\n};\n","import modifiers  from '@interactjs/modifiers/base';\nimport * as utils from '@interactjs/utils';\nimport raf        from '@interactjs/utils/raf';\n\nfunction init (scope) {\n  const {\n    interactions,\n    defaults,\n  } = scope;\n\n  interactions.signals.on('new', function (interaction) {\n    interaction.inertia = {\n      active     : false,\n      smoothEnd  : false,\n      allowResume: false,\n\n      startEvent: null,\n      upCoords  : {},\n\n      xe: 0, ye: 0,\n      sx: 0, sy: 0,\n\n      t0: 0,\n      vx0: 0, vys: 0,\n      duration: 0,\n\n      lambda_v0: 0,\n      one_ve_v0: 0,\n      i  : null,\n    };\n  });\n\n  interactions.signals.on('before-action-end', arg => release(arg, scope));\n  interactions.signals.on('down'             , arg => resume (arg, scope));\n  interactions.signals.on('stop'             , arg => stop   (arg, scope));\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  };\n}\n\nfunction resume ({ interaction, event, pointer, eventTarget }, scope) {\n  const status = interaction.inertia;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    let element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.is.element(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        raf.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer, event, eventTarget, true);\n        utils.pointer.setCoords(\n          interaction.coords.cur,\n          interaction.pointers.map(p => p.pointer)\n        );\n\n        // fire appropriate signals\n        const signalArg = {\n          interaction,\n        };\n\n        scope.interactions.signals.fire('action-resume', signalArg);\n\n        // fire a reume event\n        const resumeEvent = new scope.InteractEvent(\n          interaction, event, interaction.prepared.name, 'resume', interaction.element);\n\n        interaction._fireEvent(resumeEvent);\n\n        utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur);\n        break;\n      }\n\n      element = utils.dom.parentNode(element);\n    }\n  }\n}\n\nfunction release ({ interaction, event }, scope) {\n  const status = interaction.inertia;\n\n  if (!interaction.interacting() || (interaction.simulation && interaction.simulation.active)) {\n    return;\n  }\n\n  const options = getOptions(interaction);\n\n  const now = new Date().getTime();\n  const { client: velocityClient } = interaction.coords.velocity;\n  const pointerSpeed = utils.hypot(velocityClient.x, velocityClient.y);\n\n  let smoothEnd = false;\n  let modifierResult;\n\n  // check if inertia should be started\n  const inertiaPossible = (options && options.enabled\n                     && interaction.prepared.name !== 'gesture'\n                     && event !== status.startEvent);\n\n  const inertia = (inertiaPossible\n    && (now - interaction.coords.cur.timeStamp) < 50\n    && pointerSpeed > options.minSpeed\n    && pointerSpeed > options.endSpeed);\n\n  const modifierArg = {\n    interaction,\n    pageCoords: utils.extend({}, interaction.coords.cur.page),\n    statuses: inertiaPossible && interaction.modifiers.statuses.map(\n      modifierStatus => utils.extend({}, modifierStatus)\n    ),\n    preEnd: true,\n    requireEndOnly: true,\n  };\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifierResult = modifiers.setAll(modifierArg);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return; }\n\n  utils.pointer.copyCoords(status.upCoords, interaction.coords.cur);\n\n  interaction.pointers[0].pointer = status.startEvent = new scope.InteractEvent(\n    interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = options.allowResume;\n  interaction.simulation = status;\n\n  interaction.target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.coords.velocity.client.x;\n    status.vy0 = interaction.coords.velocity.client.y;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(modifierArg.pageCoords, interaction.coords.cur.page);\n\n    modifierArg.pageCoords.x += status.xe;\n    modifierArg.pageCoords.y += status.ye;\n\n    modifierResult = modifiers.setAll(modifierArg);\n\n    status.modifiedXe += modifierResult.delta.x;\n    status.modifiedYe += modifierResult.delta.y;\n\n    status.i = raf.request(() => inertiaTick(interaction));\n  }\n  else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.delta.x;\n    status.ye = modifierResult.delta.y;\n\n    status.sx = status.sy = 0;\n\n    status.i = raf.request(() => smothEndTick(interaction));\n  }\n\n  return false;\n}\n\nfunction stop ({ interaction }) {\n  const status = interaction.inertia;\n\n  if (status.active) {\n    raf.cancel(status.i);\n    status.active = false;\n    interaction.simulation = null;\n  }\n}\n\nfunction calcInertia (interaction, status) {\n  const options = getOptions(interaction);\n  const lambda = options.resistance;\n  const inertiaDur = -Math.log(options.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.page.x;\n  status.y0 = interaction.prevEvent.page.y;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - options.endSpeed / status.v0;\n}\n\nfunction inertiaTick (interaction) {\n  updateInertiaCoords(interaction);\n  utils.pointer.setCoordDeltas(interaction.coords.delta, interaction.coords.prev, interaction.coords.cur);\n  utils.pointer.setCoordVelocity(interaction.coords.velocity, interaction.coords.delta);\n\n  const status = interaction.inertia;\n  const options = getOptions(interaction);\n  const lambda = options.resistance;\n  const t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    const progress =  1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(\n        0, 0,\n        status.xe, status.ye,\n        status.modifiedXe, status.modifiedYe,\n        progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    interaction.move();\n\n    status.i = raf.request(() => inertiaTick(interaction));\n  }\n  else {\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    interaction.move();\n    interaction.end(status.startEvent);\n    status.active = false;\n    interaction.simulation = null;\n  }\n\n  utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur);\n}\n\nfunction smothEndTick (interaction) {\n  updateInertiaCoords(interaction);\n\n  const status = interaction.inertia;\n  const t = new Date().getTime() - status.t0;\n  const { smoothEndDuration: duration } = getOptions(interaction);\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    interaction.move();\n\n    status.i = raf.request(() => smothEndTick(interaction));\n  }\n  else {\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    interaction.move();\n    interaction.end(status.startEvent);\n\n    status.smoothEnd =\n      status.active = false;\n    interaction.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords (interaction) {\n  const status = interaction.inertia;\n\n  // return if inertia isn't running\n  if (!status.active) { return; }\n\n  const pageUp   = status.upCoords.page;\n  const clientUp = status.upCoords.client;\n\n  utils.pointer.setCoords(interaction.coords.cur, [ {\n    pageX  : pageUp.x   + status.sx,\n    pageY  : pageUp.y   + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy,\n  } ]);\n}\n\nfunction getOptions ({ target, prepared }) {\n  return target && target.options && prepared.name && target.options[prepared.name].inertia;\n}\n\nexport default {\n  init,\n  calcInertia,\n  inertiaTick,\n  smothEndTick,\n  updateInertiaCoords,\n};\n","import * as arr  from '@interactjs/utils/arr';\nimport extend    from '@interactjs/utils/extend';\nimport normalize from '@interactjs/utils/normalizeListeners';\n\nfunction fireUntilImmediateStopped (event, listeners) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) { break; }\n\n    listener(event);\n  }\n}\n\nclass Eventable {\n\n  constructor (options) {\n    this.options = extend({}, options || {});\n    this.types = {};\n    this.propagationStopped = this.immediatePropagationStopped = false;\n  }\n\n  fire (event) {\n    let listeners;\n    const global = this.global;\n\n    // Interactable#on() listeners\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners);\n    }\n  }\n\n  on (type, listener) {\n    const listeners = normalize(type, listener);\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type]);\n    }\n  }\n\n  off (type, listener) {\n    const listeners = normalize(type, listener);\n\n    for (type in listeners) {\n      const eventList = this.types[type];\n\n      if (!eventList || !eventList.length) { continue; }\n\n      for (listener of listeners[type]) {\n        const index = eventList.indexOf(listener);\n\n        if (index !== -1) {\n          eventList.splice(index, 1);\n        }\n      }\n    }\n  }\n}\n\nexport default Eventable;\n","import clone     from '@interactjs/utils/clone';\nimport * as is   from '@interactjs/utils/is';\nimport events    from '@interactjs/utils/events';\nimport extend    from '@interactjs/utils/extend';\nimport * as arr  from '@interactjs/utils/arr';\nimport normalizeListeners from '@interactjs/utils/normalizeListeners';\nimport Eventable from './Eventable';\n\nimport {\n  getElementRect,\n  nodeContains,\n  trySelector,\n}                     from '@interactjs/utils/domUtils';\nimport { getWindow }  from '@interactjs/utils/window';\nimport browser from '@interactjs/utils/browser';\n\nclass Interactable {\n  get _defaults () {\n    return {\n      base: {},\n      perAction: {},\n    };\n  }\n\n  /** */\n  constructor (target, options, defaultContext) {\n    this._actions = options.actions;\n    this.target   = target;\n    this.events   = new Eventable();\n    this._context = options.context || defaultContext;\n    this._win     = getWindow(trySelector(target)? this._context : target);\n    this._doc     = this._win.document;\n\n    this.set(options);\n  }\n\n  setOnEvents (actionName, phases) {\n    if (is.func(phases.onstart)       ) { this.on(`${actionName}start`       , phases.onstart       ); }\n    if (is.func(phases.onmove)        ) { this.on(`${actionName}move`        , phases.onmove        ); }\n    if (is.func(phases.onend)         ) { this.on(`${actionName}end`         , phases.onend         ); }\n    if (is.func(phases.oninertiastart)) { this.on(`${actionName}inertiastart`, phases.oninertiastart); }\n\n    return this;\n  }\n\n  updatePerActionListeners (actionName, prev, cur) {\n    if (is.array(prev)) {\n      this.off(actionName, prev);\n    }\n\n    if (is.array(cur)) {\n      this.on(actionName, cur);\n    }\n  }\n\n  setPerAction (actionName, options) {\n    const defaults = this._defaults;\n\n    // for all the default per-action options\n    for (const optionName in options) {\n      const actionOptions = this.options[actionName];\n      const optionValue = options[optionName];\n      const isArray = is.array(optionValue);\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue);\n      }\n\n      // if the option value is an array\n      if (isArray) {\n        actionOptions[optionName] = arr.from(optionValue);\n      }\n      // if the option value is an object\n      else if (!isArray && is.plainObject(optionValue)) {\n        // copy the object\n        actionOptions[optionName] = extend(\n          actionOptions[optionName] || {},\n          clone(optionValue));\n\n        // set anabled field to true if it exists in the defaults\n        if (is.object(defaults.perAction[optionName]) && 'enabled' in defaults.perAction[optionName]) {\n          actionOptions[optionName].enabled = optionValue.enabled === false? false : true;\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        actionOptions[optionName].enabled = optionValue;\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        actionOptions[optionName] = optionValue;\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */\n  getRect (element) {\n    element = element || this.target;\n\n    if (is.string(this.target) && !(is.element(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker (checker) {\n    if (is.func(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  _backCompatOption (optionName, newValue) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      this.options[optionName] = newValue;\n\n      for (const action of this._actions.names) {\n        this.options[action][optionName] = newValue;\n      }\n\n      return this;\n    }\n\n    return this.options[optionName];\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue) {\n    return this._backCompatOption('origin', newValue);\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context;\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument\n            || nodeContains(this._context, element));\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire (iEvent) {\n    this.events.fire(iEvent);\n\n    return this;\n  }\n\n  _onOff (method, typeArg, listenerArg, options) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg;\n      listenerArg = null;\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove';\n    const listeners = normalizeListeners(typeArg, listenerArg);\n\n    for (let type in listeners) {\n      if (type === 'wheel') { type = browser.wheelEvent; }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (arr.contains(this._actions.eventTypes, type)) {\n          this.events[method](type, listener);\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          events[`${addRemove}Delegate`](this.target, this._context, type, listener, options);\n        }\n        // remove listener from this Interatable's element\n        else {\n          events[addRemove](this.target, type, listener, options);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types, listener, options) {\n    return this._onOff('on', types, listener, options);\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types, listener, options) {\n    return this._onOff('off', types, listener, options);\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options) {\n    const defaults = this._defaults;\n\n    if (!is.object(options)) {\n      options = {};\n    }\n\n    this.options = clone(defaults.base);\n\n    for (const actionName in this._actions.methodDict) {\n      const methodName = this._actions.methodDict[actionName];\n\n      this.options[actionName] = {};\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults[actionName]));\n\n      this[methodName](options[actionName]);\n    }\n\n    for (const setting in options) {\n      if (is.func(this[setting])) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        if (delegated.selectors[0] === this.target\n            && delegated.contexts[0] === this._context) {\n\n          delegated.selectors.splice(0, 1);\n          delegated.contexts .splice(0, 1);\n          delegated.listeners.splice(0, 1);\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null;\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener);\n        events.remove(this._context, type, events.delegateUseCapture, true);\n      }\n    }\n    else {\n      events.remove(this, 'all');\n    }\n  }\n}\n\nexport default Interactable;\n","import InteractEvent from './InteractEvent';\nimport * as utils    from '@interactjs/utils';\n\nclass Interaction {\n  get pointerMoveTolerance () {\n    return 1;\n  }\n\n  /** */\n  constructor ({ pointerType, signals }) {\n    this._signals = signals;\n\n    this.target   = null; // current interactable being interacted with\n    this.element  = null; // the target element of the interactable\n    this.prepared = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    // keep track of added pointers\n    this.pointers = [/* { id, pointer, event, target, downTime }*/];\n\n    this.coords = {\n      // Starting InteractEvent pointer coordinates\n      start: utils.pointer.newCoords(),\n      // Previous native pointer move event coordinates\n      prev: utils.pointer.newCoords(),\n      // current native pointer move event coordinates\n      cur: utils.pointer.newCoords(),\n      // Change in coordinates and time of the pointer\n      delta: utils.pointer.newCoords(),\n      // pointer velocity\n      velocity: utils.pointer.newCoords(),\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._latestPointer = {\n      pointer: null,\n      event: null,\n      eventTarget   : null,\n    };\n\n    this.prevEvent = null;      // previous action event\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n    this._ending         = false;\n\n    this.pointerType = pointerType;\n\n    this._signals.fire('new', this);\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true);\n\n    this._signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction;\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget);\n   *     }\n   * });\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */\n  start (action, target, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointers.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    utils.copyAction(this.prepared, action);\n\n    this.target       = target;\n    this.element      = element;\n    this._interacting = this._doPhase({\n      interaction: this,\n      event: this.downEvent,\n      phase: 'start',\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer, event, eventTarget, false);\n      utils.pointer.setCoords(this.coords.cur, this.pointers.map(p => p.pointer));\n    }\n\n    const duplicateMove = (this.coords.cur.page.x === this.coords.prev.page.x\n                           && this.coords.cur.page.y === this.coords.prev.page.y\n                           && this.coords.cur.client.x === this.coords.prev.client.x\n                           && this.coords.cur.client.y === this.coords.prev.client.y);\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x;\n      dy = this.coords.cur.client.y - this.coords.start.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > this.pointerMoveTolerance;\n    }\n\n    const signalArg = {\n      pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      utils.pointer.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur);\n      utils.pointer.setCoordVelocity(this.coords.velocity, this.coords.delta);\n    }\n\n    this._signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.move(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.pointer.copyCoords(this.coords.prev, this.coords.cur);\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }});\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move();\n   *     }\n   *   });\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg) {\n    signalArg = utils.extend({\n      pointer: this._latestPointer.pointer,\n      event: this._latestPointer.event,\n      eventTarget: this._latestPointer.eventTarget,\n      interaction: this,\n      noBefore: false,\n    }, signalArg || {});\n\n    signalArg.phase = 'move';\n\n    this._doPhase(signalArg);\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.getPointerIndex(pointer);\n\n    this._signals.fire(/cancel$/i.test(event.type)? 'cancel' : 'up', {\n      pointer,\n      pointerIndex,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n    }\n\n    this.pointerIsDown = false;\n    this.removePointer(pointer, event);\n  }\n\n  documentBlur (event) {\n    this.end(event);\n    this._signals.fire('blur', { event, interaction: this });\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end();\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation();\n   *     }\n   *   });\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event) {\n    this._ending = true;\n    event = event || this._latestPointer.event;\n    let endPhaseResult;\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      });\n    }\n\n    this._ending = false;\n\n    if (endPhaseResult === true) {\n      this.stop();\n    }\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  /** */\n  stop () {\n    this._signals.fire('stop', { interaction: this });\n\n    this.target = this.element = null;\n\n    this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  }\n\n  getPointerIndex (pointer) {\n    const pointerId = utils.pointer.getPointerId(pointer);\n\n    // mouse and pen interactions may have only one pointer\n    return (this.pointerType === 'mouse' || this.pointerType === 'pen')\n      ? 0\n      : utils.arr.findIndex(this.pointers, curPointer => curPointer.id === pointerId);\n  }\n\n  getPointerInfo (pointer) {\n    return this.pointers[this.getPointerIndex(pointer)];\n  }\n\n  updatePointer (pointer, event, eventTarget, down) {\n    const id = utils.pointer.getPointerId(pointer);\n    let pointerIndex = this.getPointerIndex(pointer);\n    let pointerInfo = this.pointers[pointerIndex];\n\n    if (!pointerInfo) {\n      pointerInfo = {\n        id,\n        pointer,\n        event,\n        downTime: null,\n        downTarget: null,\n      };\n\n      pointerIndex = this.pointers.length;\n      this.pointers.push(pointerInfo);\n    }\n    else {\n      pointerInfo.pointer = pointer;\n    }\n\n    if (down) {\n      this.pointerIsDown = true;\n\n      if (!this.interacting()) {\n        utils.pointer.setCoords(this.coords.start, this.pointers.map(p => p.pointer));\n\n        utils.pointer.copyCoords(this.coords.cur , this.coords.start);\n        utils.pointer.copyCoords(this.coords.prev, this.coords.start);\n        utils.pointer.pointerExtend(this.downPointer, pointer);\n\n        this.downEvent = event;\n        pointerInfo.downTime = this.coords.cur.timeStamp;\n        pointerInfo.downTarget = eventTarget;\n\n        this.pointerWasMoved = false;\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget);\n\n    this._signals.fire('update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this,\n    });\n\n    return pointerIndex;\n  }\n\n  removePointer (pointer, event) {\n    const pointerIndex = this.getPointerIndex(pointer);\n\n    if (pointerIndex === -1) { return; }\n\n    const pointerInfo = this.pointers[pointerIndex];\n\n    this._signals.fire('remove-pointer', {\n      pointer,\n      event,\n      pointerIndex,\n      pointerInfo,\n      interaction: this,\n    });\n\n    this.pointers.splice(pointerIndex, 1);\n  }\n\n  _updateLatestPointer (pointer, event, eventTarget) {\n    this._latestPointer.pointer = pointer;\n    this._latestPointer.event = event;\n    this._latestPointer.eventTarget = eventTarget;\n  }\n\n  _createPreparedEvent (event, phase, preEnd, type) {\n    const actionName = this.prepared.name;\n\n    return new InteractEvent(this, event, actionName, phase, this.element, null, preEnd, type);\n  }\n\n  _fireEvent (iEvent) {\n    this.target.fire(iEvent);\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent;\n    }\n  }\n\n  _doPhase (signalArg) {\n    const { event, phase, preEnd, type } = signalArg;\n\n    if (!signalArg.noBefore) {\n      const beforeResult = this._signals.fire(`before-action-${phase}`, signalArg);\n\n      if (beforeResult === false) {\n        return false;\n      }\n    }\n\n    const iEvent = signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type);\n\n    this._signals.fire(`action-${phase}`, signalArg);\n\n    this._fireEvent(iEvent);\n\n    this._signals.fire(`after-action-${phase}`, signalArg);\n\n    return true;\n  }\n}\n\n/**\n * @alias Interaction.prototype.move\n */\nInteraction.prototype.doMove = utils.warnOnce(\n  function (signalArg) {\n    this.move(signalArg);\n  },\n  'The interaction.doMove() method has been renamed to interaction.move()');\n\nexport default Interaction;\n","import * as utils from './index';\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouseOrPen', 'hasPointer', 'idle' ],\n\n  search: function (details) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function ({ pointerType, eventType, eventTarget, scope }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume\n          && (interaction.pointerType === pointerType)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.dom.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen: function ({ pointerId, pointerType, eventType, scope }) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null;\n    }\n\n    let firstNonActive;\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) { continue; }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction;\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId, scope }) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle: function ({ pointerType, scope }) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue;\n      }\n\n      if (!interaction.interacting() && (pointerType === interaction.pointerType)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nfunction hasPointerId (interaction, pointerId) {\n  return utils.arr.some(interaction.pointers, ({ id }) => id === pointerId);\n}\n\nexport default finder;\n","import InteractionBase from './Interaction';\nimport events          from '@interactjs/utils/events';\nimport finder          from '@interactjs/utils/interactionFinder';\nimport browser         from '@interactjs/utils/browser';\nimport domObjects      from '@interactjs/utils/domObjects';\nimport pointerUtils    from '@interactjs/utils/pointerUtils';\nimport Signals         from '@interactjs/utils/Signals';\n\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer', 'windowBlur',\n];\n\nfunction init (scope) {\n  const signals = new Signals();\n\n  const listeners = {};\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope);\n  }\n\n  const eventMap = { /* 'eventType': listenerFunc */ };\n  const pEventTypes = browser.pEventTypes;\n\n  if (domObjects.PointerEvent) {\n    eventMap[pEventTypes.down  ] = listeners.pointerDown;\n    eventMap[pEventTypes.move  ] = listeners.pointerMove;\n    eventMap[pEventTypes.up    ] = listeners.pointerUp;\n    eventMap[pEventTypes.cancel] = listeners.pointerUp;\n  }\n  else {\n    eventMap.mousedown   = listeners.pointerDown;\n    eventMap.mousemove   = listeners.pointerMove;\n    eventMap.mouseup     = listeners.pointerUp;\n\n    eventMap.touchstart  = listeners.pointerDown;\n    eventMap.touchmove   = listeners.pointerMove;\n    eventMap.touchend    = listeners.pointerUp;\n    eventMap.touchcancel = listeners.pointerUp;\n  }\n\n  eventMap.blur = event => {\n    for (const interaction of scope.interactions.list) {\n      interaction.documentBlur(event);\n    }\n  };\n\n  scope.signals.on('add-document'   , onDocSignal);\n  scope.signals.on('remove-document', onDocSignal);\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0;\n\n  scope.Interaction = class Interaction extends InteractionBase {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance;\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value;\n    }\n  };\n  scope.interactions = {\n    signals,\n    // all active and idle interactions\n    list: [],\n    new (options) {\n      options.signals = signals;\n\n      return new scope.Interaction(options);\n    },\n    listeners,\n    eventMap,\n    pointerMoveTolerance: 1,\n  };\n\n  scope.actions = {\n    names: [],\n    methodDict: {},\n    eventTypes: [],\n  };\n}\n\nfunction doOnInteractions (method, scope) {\n  return (function (event) {\n    const interactions = scope.interactions.list;\n\n    const pointerType = pointerUtils.getPointerType(event);\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      scope.prevTouchTime = new Date().getTime();\n\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch;\n        const pointerId = pointerUtils.getPointerId(pointer);\n        const searchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        };\n        const interaction = getInteraction(searchDetails);\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer\n          || (new Date().getTime() - scope.prevTouchTime < 500)\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          || event.timeStamp === 0;\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event,\n          pointerId: pointerUtils.getPointerId(event),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        };\n\n        const interaction = getInteraction(searchDetails);\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ]);\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\nfunction getInteraction (searchDetails) {\n  const { pointerType, scope } = searchDetails;\n\n  const foundInteraction = finder.search(searchDetails);\n  const signalArg = { interaction: foundInteraction, searchDetails };\n\n  scope.interactions.signals.fire('find', signalArg);\n\n  return signalArg.interaction || newInteraction({ pointerType }, scope);\n}\n\nexport function newInteraction (options, scope) {\n  const interaction = scope.interactions.new(options);\n\n  scope.interactions.list.push(interaction);\n  return interaction;\n}\n\nfunction onDocSignal ({ doc, scope, options }, signalName) {\n  const { eventMap } = scope.interactions;\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove;\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false };\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  const eventOptions = options && options.events;\n\n  for (const eventType in eventMap) {\n    eventMethod(doc, eventType, eventMap[eventType], eventOptions);\n  }\n}\n\nexport default {\n  init,\n  onDocSignal,\n  doOnInteractions,\n  newInteraction,\n  methodNames,\n};\n","import Eventable  from './Eventable';\nimport defaults   from './defaultOptions';\nimport * as utils from '@interactjs/utils';\nimport domObjects from '@interactjs/utils/domObjects';\n\nimport interactions from './interactions';\nimport InteractEvent    from './InteractEvent';\nimport InteractableBase from './Interactable';\n\nconst {\n  win,\n  browser,\n  raf,\n  Signals,\n  events,\n} = utils;\n\nexport function createScope () {\n  const scope = {\n    Signals,\n    signals: new Signals(),\n    browser,\n    events,\n    utils,\n    defaults: utils.clone(defaults),\n    Eventable,\n\n    InteractEvent: InteractEvent,\n    Interactable: class Interactable extends InteractableBase {\n      get _defaults () { return scope.defaults; }\n\n      set (options) {\n        super.set(options);\n\n        scope.interactables.signals.fire('set', {\n          options,\n          interactable: this,\n        });\n\n        return this;\n      }\n\n      unset () {\n        super.unset();\n        scope.interactables.signals.fire('unset', { interactable: this });\n      }\n    },\n\n    interactables: {\n      // all set interactables\n      list: [],\n\n      new (target, options) {\n        options = utils.extend(options || {}, {\n          actions: scope.actions,\n        });\n\n        const interactable = new scope.Interactable(target, options, scope.document);\n\n        scope.addDocument(interactable._doc);\n\n        scope.interactables.list.push(interactable);\n\n        scope.interactables.signals.fire('new', {\n          target,\n          options,\n          interactable: interactable,\n          win: this._win,\n        });\n\n        return interactable;\n      },\n\n      indexOfElement (target, context) {\n        context = context || scope.document;\n\n        const list = this.list;\n\n        for (let i = 0; i < list.length; i++) {\n          const interactable = list[i];\n\n          if (interactable.target === target && interactable._context === context) {\n            return i;\n          }\n        }\n\n        return -1;\n      },\n\n      get (element, options, dontCheckInContext) {\n        const ret = this.list[this.indexOfElement(element, options && options.context)];\n\n        return ret && (utils.is.string(element) || dontCheckInContext || ret.inContext(element))? ret : null;\n      },\n\n      forEachMatch (element, callback) {\n        for (const interactable of this.list) {\n          let ret;\n\n          if ((utils.is.string(interactable.target)\n            // target is a selector and the element matches\n            ? (utils.is.element(element) && utils.dom.matchesSelector(element, interactable.target))\n            // target is the element\n            : element === interactable.target)\n            // the element is in context\n            && (interactable.inContext(element))) {\n            ret = callback(interactable);\n          }\n\n          if (ret !== undefined) {\n            return ret;\n          }\n        }\n      },\n\n      signals: new utils.Signals(),\n    },\n\n    // main document\n    document: null,\n    // all documents being listened to\n    documents: [/* { doc, options } */],\n\n    init (window) {\n      return initScope(scope, window);\n    },\n\n    addDocument (doc, options) {\n      // do nothing if document is already known\n      if (scope.getDocIndex(doc) !== -1) { return false; }\n\n      const window = win.getWindow(doc);\n\n      options = options ? utils.extend({}, options) : {};\n\n      scope.documents.push({ doc, options });\n      events.documents.push(doc);\n\n      // don't add an unload event for the main document\n      // so that the page may be cached in browser history\n      if (doc !== scope.document) {\n        events.add(window, 'unload', scope.onWindowUnload);\n      }\n\n      scope.signals.fire('add-document', { doc, window, scope, options });\n    },\n\n    removeDocument (doc) {\n      const index = scope.getDocIndex(doc);\n\n      const window = win.getWindow(doc);\n      const options = scope.documents[index].options;\n\n      events.remove(window, 'unload', scope.onWindowUnload);\n\n      scope.documents.splice(index, 1);\n      events.documents.splice(index, 1);\n\n      scope.signals.fire('remove-document', { doc, window, scope, options });\n    },\n\n    onWindowUnload (event) {\n      scope.removeDocument(event.currentTarget.document);\n    },\n\n    getDocIndex (doc) {\n      for (let i = 0; i < scope.documents.length; i++) {\n        if (scope.documents[i].doc === doc) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    getDocOptions (doc) {\n      const docIndex = scope.getDocIndex(doc);\n\n      return docIndex === -1 ? null : scope.documents[docIndex].options;\n    },\n  };\n\n  interactions.init(scope);\n\n  return scope;\n}\n\nexport function initScope (scope, window) {\n  win.init(window);\n  domObjects.init(window);\n  browser.init(window);\n  raf.init(window);\n  events.init(window);\n\n  interactions.init(scope);\n  scope.document = window.document;\n\n  return scope;\n}\n","/** @module interact */\n\nimport browser         from '@interactjs/utils/browser';\nimport events          from '@interactjs/utils/events';\nimport * as utils      from '@interactjs/utils';\nimport { createScope } from '@interactjs/core/scope';\n\nconst globalEvents = {};\nconst scope = createScope();\n\n/**\n * ```js\n * interact('#draggable').draggable(true);\n *\n * var rectables = interact('rect');\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   });\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nfunction interact (target, options) {\n  let interactable = scope.interactables.get(target, options);\n\n\n  if (!interactable) {\n    interactable = scope.interactables.new(target, options);\n    interactable.events.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/**\n * Use a plugin\n *\n * @alias module:interact.use\n *\n * @param {Object} plugin\n * @param {function} plugin.init\n * @return {interact}\n*/\ninteract.use = function (plugin) {\n  plugin.init(scope);\n  return interact;\n};\n\n/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */\ninteract.on = function (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, options);\n    }\n\n    return interact;\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.arr.contains(scope.actions.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    }\n    else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, { options });\n  }\n\n  return interact;\n};\n\n/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */\ninteract.off = function (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, options);\n    }\n\n    return interact;\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.arr.contains(scope.actions.eventTypes, type)) {\n    events.remove(scope.document, type, listener, options);\n  }\n  else {\n    let index;\n\n    if (type in globalEvents\n        && (index = globalEvents[type].indexOf(listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/**\n * Returns an object which exposes internal data\n\n * @alias module:interact.debug\n *\n * @return {object} An object with properties that outline the current state\n * and expose internal functions and variables\n */\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointer.pointerAverage;\ninteract.getTouchBBox       = utils.pointer.touchBBox;\ninteract.getTouchDistance   = utils.pointer.touchDistance;\ninteract.getTouchAngle      = utils.pointer.touchAngle;\n\ninteract.getElementRect       = utils.dom.getElementRect;\ninteract.getElementClientRect = utils.dom.getElementClientRect;\ninteract.matchesSelector      = utils.dom.matchesSelector;\ninteract.closest              = utils.dom.closest;\n\n/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @param {Event} event An event on which to call preventDefault()\n * @return {object} interact\n */\ninteract.stop = function (event) {\n  for (const interaction of scope.interactions.list) {\n    interaction.stop(event);\n  }\n\n  return interact;\n};\n\n/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.is.number(newValue)) {\n    scope.interactions.pointerMoveTolerance = newValue;\n\n    return interact;\n  }\n\n  return scope.interactions.pointerMoveTolerance;\n};\n\nscope.interactables.signals.on('unset', ({ interactable }) => {\n  scope.interactables.list.splice(scope.interactables.list.indexOf(interactable), 1);\n\n  // Stop related interactions when an Interactable is unset\n  for (const interaction of scope.interactions.list) {\n    if (interaction.target === interactable && interaction.interacting() && interaction._ending) {\n      interaction.stop();\n    }\n  }\n});\ninteract.addDocument    = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nexport { scope };\nexport default interact;\n","import * as is   from '@interactjs/utils/is';\nimport rectUtils from '@interactjs/utils/rect';\n\nfunction start ({ rect, startOffset, status }) {\n  const { options } = status;\n  const { elementRect } = options;\n  const offset = {};\n\n  if (rect && elementRect) {\n    offset.left = startOffset.left - (rect.width  * elementRect.left);\n    offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n    offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n    offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n  }\n  else {\n    offset.left = offset.top = offset.right = offset.bottom = 0;\n  }\n\n  status.offset = offset;\n}\n\nfunction set ({ coords, interaction, status }) {\n  const { options, offset } = status;\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords);\n\n  if (!restriction) { return status; }\n\n  const rect = restriction;\n\n  // object is assumed to have\n  // x, y, width, height or\n  // left, top, right, bottom\n  if ('x' in restriction && 'y' in restriction) {\n    coords.x = Math.max(Math.min(rect.x + rect.width  - offset.right , coords.x), rect.x + offset.left);\n    coords.y = Math.max(Math.min(rect.y + rect.height - offset.bottom, coords.y), rect.y + offset.top );\n  }\n  else {\n    coords.x = Math.max(Math.min(rect.right  - offset.right , coords.x), rect.left + offset.left);\n    coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top  + offset.top );\n  }\n}\n\nfunction getRestrictionRect (value, interaction, coords) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.target, interaction.element, [coords.x, coords.y, interaction]);\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.target, interaction.element);\n  }\n}\n\nconst restrict = {\n  start,\n  set,\n  getRestrictionRect,\n  defaults: {\n    enabled: false,\n    restriction: null,\n    elementRect: null,\n  },\n};\n\nexport default restrict;\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// });\n\nimport extend from '@interactjs/utils/extend';\nimport rectUtils from '@interactjs/utils/rect';\nimport restrict from './restrict';\n\nconst { getRestrictionRect } = restrict;\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity };\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity };\n\nfunction start ({ interaction, status }) {\n  const { options } = status;\n  const startOffset = interaction.modifiers.startOffset;\n  let offset;\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page);\n\n    offset = rectUtils.rectToXY(offsetRect);\n  }\n\n  offset = offset || { x: 0, y: 0 };\n\n  status.offset = {\n    top:    offset.y + startOffset.top,\n    left:   offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right:  offset.x - startOffset.right,\n  };\n}\n\nfunction set ({ coords, interaction, status }) {\n  const { offset, options } = status;\n  const edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n  if (!edges) {\n    return;\n  }\n\n  const page = extend({}, coords);\n  const inner = getRestrictionRect(options.inner, interaction, page) || {};\n  const outer = getRestrictionRect(options.outer, interaction, page) || {};\n\n  fixRect(inner, noInner);\n  fixRect(outer, noOuter);\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top    + offset.top,    page.y), inner.top    + offset.top);\n  }\n  else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom);\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left   + offset.left,   page.x), inner.left   + offset.left);\n  }\n  else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right  + offset.right,  page.x), inner.right  + offset.right);\n  }\n}\n\nfunction fixRect (rect, defaults) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge];\n    }\n  }\n\n  return rect;\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  getRestrictionRect,\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    inner: null,\n    outer: null,\n    offset: null,\n  },\n};\n\nexport default restrictEdges;\n","// This module adds the options.resize.restrictSize setting which sets min and\n// max width and height for the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictSize: {\n//     min: { width: -600, height: -600 },\n//     max: { width:  600, height:  600 },\n//   },\n// });\n\nimport extend from '@interactjs/utils/extend';\nimport rectUtils from '@interactjs/utils/rect';\nimport restrictEdges from './restrictEdges';\n\nconst noMin = { width: -Infinity, height: -Infinity };\nconst noMax = { width: +Infinity, height: +Infinity };\n\nfunction start (arg) {\n  return restrictEdges.start(arg);\n}\n\nfunction set (arg) {\n  const { interaction, status } = arg;\n  const { options } = status;\n  const edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n  if (!edges) {\n    return;\n  }\n\n  const rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted);\n\n  const minSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.min, interaction)) || noMin;\n  const maxSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.max, interaction)) || noMax;\n\n  status.options = {\n    enabled: options.enabled,\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  };\n\n  if (edges.top) {\n    status.options.inner.top = rect.bottom - minSize.height;\n    status.options.outer.top = rect.bottom - maxSize.height;\n  }\n  else if (edges.bottom) {\n    status.options.inner.bottom = rect.top + minSize.height;\n    status.options.outer.bottom = rect.top + maxSize.height;\n  }\n  if (edges.left) {\n    status.options.inner.left = rect.right - minSize.width;\n    status.options.outer.left = rect.right - maxSize.width;\n  }\n  else if (edges.right) {\n    status.options.inner.right = rect.left + minSize.width;\n    status.options.outer.right = rect.left + maxSize.width;\n  }\n\n  restrictEdges.set(arg);\n\n  status.options = options;\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    min: null,\n    max: null,\n  },\n};\n\nexport default restrictSize;\n","import * as utils from '@interactjs/utils';\n\nfunction start ({ interaction, interactable, element, rect, status, startOffset }) {\n  const { options } = status;\n  const offsets = [];\n  const optionsOrigin = utils.rect.rectToXY(utils.rect.resolveRectLike(options.origin));\n  const origin = optionsOrigin || utils.getOriginXY(interactable, element, interaction.prepared.name);\n\n  let snapOffset;\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x - origin.x,\n      y: interaction.coords.start.page.y - origin.y,\n    };\n  }\n  else  {\n    const offsetRect = utils.rect.resolveRectLike(options.offset, interactable, element, [interaction]);\n\n    snapOffset = utils.rect.rectToXY(offsetRect) || { x: 0, y: 0 };\n  }\n\n  if (rect && options.relativePoints && options.relativePoints.length) {\n    for (const { x: relativeX, y: relativeY } of (options.relativePoints || [])) {\n      offsets.push({\n        x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n        y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n      });\n    }\n  }\n  else {\n    offsets.push(snapOffset);\n  }\n\n  status.offset = offsets;\n}\n\nfunction set ({ interaction, coords, status }) {\n  const { options, offset: offsets } = status;\n\n  const origin = utils.getOriginXY(interaction.target, interaction.element, interaction.prepared.name);\n  const page = utils.extend({}, coords);\n  const targets = [];\n  let target;\n  let i;\n\n  page.x -= origin.x;\n  page.y -= origin.y;\n\n  status.realX = page.x;\n  status.realY = page.y;\n\n  let len = options.targets? options.targets.length : 0;\n\n  for (const { x: offsetX, y: offsetY } of offsets) {\n    const relativeX = page.x - offsetX;\n    const relativeY = page.y - offsetY;\n\n    for (const snapTarget of options.targets) {\n      if (utils.is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction);\n      }\n      else {\n        target = snapTarget;\n      }\n\n      if (!target) { continue; }\n\n      targets.push({\n        x: utils.is.number(target.x) ? (target.x + offsetX) : relativeX,\n        y: utils.is.number(target.y) ? (target.y + offsetY) : relativeY,\n\n        range: utils.is.number(target.range)? target.range: options.range,\n      });\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    dx: 0,\n    dy: 0,\n  };\n\n  for (i = 0, len = targets.length; i < len; i++) {\n    target = targets[i];\n\n    const range = target.range;\n    const dx = target.x - page.x;\n    const dy = target.y - page.y;\n    const distance = utils.hypot(dx, dy);\n    let inRange = distance <= range;\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false;\n    }\n\n    if (!closest.target || (inRange\n      // is the closest target in range?\n      ? (closest.inRange && range !== Infinity\n        // the pointer is relatively deeper in this target\n        ? distance / range < closest.distance / closest.range\n        // this target has Infinite range and the closest doesn't\n        : (range === Infinity && closest.range !== Infinity) ||\n          // OR this target is closer that the previous closest\n          distance < closest.distance)\n      // The other is not in range and the pointer is closer to this target\n      : (!closest.inRange && distance < closest.distance))) {\n\n      closest.target = target;\n      closest.distance = distance;\n      closest.range = range;\n      closest.inRange = inRange;\n      closest.dx = dx;\n      closest.dy = dy;\n\n      status.range = range;\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x;\n    coords.y = closest.target.y;\n  }\n}\n\nconst snap = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n};\n\nexport default snap;\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend';\nimport * as is from '@interactjs/utils/is';\nimport snap from './snap';\n\nfunction start (arg) {\n  const { interaction, status } = arg;\n  const { options } = status;\n  const edges = interaction.prepared.edges;\n\n  if (!edges) { return null; }\n\n  arg.status = {\n    options: {\n      relativePoints: [{\n        x: edges.left? 0 : 1,\n        y: edges.top ? 0 : 1,\n      }],\n      origin: { x: 0, y: 0 },\n      offset: options.offset || 'self',\n      range: options.range,\n    },\n  };\n\n  status.targetFields = status.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ];\n\n  snap.start(arg);\n  status.offset = arg.status.offset;\n\n  arg.status = status;\n}\n\nfunction set (arg) {\n  const { interaction, status, coords } = arg;\n  const { options, offset } = status;\n  const relative = {\n    x: coords.x - offset[0].x,\n    y: coords.y - offset[0].y,\n  };\n\n  status.options = extend({}, options);\n  status.options.targets = [];\n\n  for (const snapTarget of (options.targets || [])) {\n    let target;\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction);\n    }\n    else {\n      target = snapTarget;\n    }\n\n    if (!target) { continue; }\n\n    for (const [xField, yField] of status.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField];\n        target.y = target[yField];\n\n        break;\n      }\n    }\n\n    status.options.targets.push(target);\n  }\n\n  snap.set(arg);\n\n  status.options = options;\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults: {\n    enabled: false,\n    range  : Infinity,\n    targets: null,\n    offset: null,\n    offsets: null,\n  },\n};\n\nexport default snapSize;\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */\n\nimport clone from '@interactjs/utils/clone';\nimport extend from '@interactjs/utils/extend';\nimport snapSize from './snapSize';\n\nfunction init (scope) {\n  const {\n    defaults,\n  } = scope;\n\n  defaults.perAction.snapEdges = snapEdges.defaults;\n}\n\nfunction start (arg) {\n  const edges = arg.interaction.prepared.edges;\n\n  if (!edges) { return null; }\n\n  arg.status.targetFields = arg.status.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ];\n\n  return snapSize.start(arg);\n}\n\nfunction set (arg) {\n  return snapSize.set(arg);\n}\n\nfunction modifyCoords (arg) {\n  snapSize.modifyCoords(arg);\n}\n\nconst snapEdges = {\n  init,\n  start,\n  set,\n  modifyCoords,\n  defaults: extend(clone(snapSize.defaults), {\n    offset: { x: 0, y: 0 },\n  }),\n};\n\nexport default snapEdges;\n","import snapModule from './snap';\nimport snapSizeModule from './snapSize';\nimport snapEdgesModule from './snapEdges';\nimport restrictModule from './restrict';\nimport restrictEdgesModule from './restrictEdges';\nimport restrictSizeModule from './restrictSize';\n\nexport const snap = makeModifier('snap', snapModule);\nexport const snapSize = makeModifier('snapSize', snapSizeModule);\nexport const snapEdges = makeModifier('snapEdges', snapEdgesModule);\nexport const restrict = makeModifier('restrict', restrictModule);\nexport const restrictEdges = makeModifier('restrictEdges', restrictEdgesModule);\nexport const restrictSize = makeModifier('restrictSize', restrictSizeModule);\n\nfunction makeModifier (name, module) {\n  const methods = { start: module.start, set: module.set };\n  const { defaults } = module;\n\n  const modifier = options => {\n    options = options || {};\n\n    // add missing defaults to options\n    options.enabled = options.enabled !== false;\n\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        options[prop] = defaults[prop];\n      }\n    }\n\n    return { options, methods };\n  };\n\n  Object.defineProperty(\n    modifier,\n    'name',\n    { value: name });\n\n  // for backwrads compatibility\n  modifier._defaults = defaults;\n  modifier._methods = methods;\n\n  return modifier;\n}\n","import pointerUtils from '@interactjs/utils/pointerUtils';\n\nexport default class PointerEvent {\n  /** */\n  constructor (type, pointer, event, eventTarget, interaction) {\n    pointerUtils.pointerExtend(this, event);\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer);\n    }\n\n    this.interaction = interaction;\n\n    this.timeStamp     = new Date().getTime();\n    this.originalEvent = event;\n    this.type          = type;\n    this.pointerId     = pointerUtils.getPointerId(pointer);\n    this.pointerType   = pointerUtils.getPointerType(pointer);\n    this.target        = eventTarget;\n    this.currentTarget = null;\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer);\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime;\n\n      const interval = this.timeStamp - interaction.tapTime;\n\n      this.double = !!(interaction.prevTap\n        && interaction.prevTap.type !== 'doubletap'\n        && interaction.prevTap.target === this.target\n        && interval < 500);\n    }\n    else if (type === 'doubletap') {\n      this.dt = pointer.timeStamp - interaction.tapTime;\n    }\n  }\n\n  subtractOrigin ({ x: originX, y: originY }) {\n    this.pageX   -= originX;\n    this.pageY   -= originY;\n    this.clientX -= originX;\n    this.clientY -= originY;\n\n    return this;\n  }\n\n  addOrigin ({ x: originX, y: originY }) {\n    this.pageX   += originX;\n    this.pageY   += originY;\n    this.clientX += originX;\n    this.clientY += originY;\n\n    return this;\n  }\n\n  /** */\n  preventDefault () {\n    this.originalEvent.preventDefault();\n  }\n\n  /** */\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n\n  /** */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n}\n","import * as utils   from '@interactjs/utils';\nimport PointerEvent from './PointerEvent';\n\nconst signals       = new utils.Signals();\nconst simpleSignals = [ 'down', 'up', 'cancel' ];\nconst simpleEvents  = [ 'down', 'up', 'cancel' ];\n\nconst pointerEvents = {\n  init,\n  signals,\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  createSignalListener,\n  defaults: {\n    holdDuration: 600,\n    ignoreFrom  : null,\n    allowFrom   : null,\n    origin      : { x: 0, y: 0 },\n  },\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n};\n\nfunction fire (arg) {\n  const {\n    interaction, pointer, event, eventTarget,\n    type = arg.pointerEvent.type,\n    targets = collectEventTargets(arg),\n    pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction),\n  } = arg;\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  };\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i];\n\n    for (const prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    const origin = utils.getOriginXY(target.eventable, target.element);\n\n    pointerEvent.subtractOrigin(origin);\n    pointerEvent.eventable = target.eventable;\n    pointerEvent.currentTarget = target.element;\n\n    target.eventable.fire(pointerEvent);\n\n    pointerEvent.addOrigin(origin);\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire({\n        interaction, pointer, event, eventTarget,\n        type: 'doubletap',\n      })\n      : pointerEvent;\n\n    interaction.prevTap = prevTap;\n    interaction.tapTime = prevTap.timeStamp;\n  }\n\n  return pointerEvent;\n}\n\nfunction collectEventTargets ({ interaction, pointer, event, eventTarget, type }) {\n  const pointerIndex = interaction.getPointerIndex(pointer);\n  const pointerInfo = interaction.pointers[pointerIndex];\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (type === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(pointerInfo && pointerInfo.downTarget === eventTarget))) {\n    return [];\n  }\n\n  const path = utils.dom.getPath(eventTarget);\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [],\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(target =>\n      target.eventable.options.holdDuration === interaction.holdTimers[pointerIndex].duration);\n  }\n\n  return signalArg.targets;\n}\n\nfunction init (scope) {\n  const {\n    interactions,\n  } = scope;\n\n  scope.pointerEvents = pointerEvents;\n  scope.defaults.pointerEvents = pointerEvents.defaults;\n\n  interactions.signals.on('new', interaction => {\n    interaction.prevTap    = null;  // the most recent tap event on this interaction\n    interaction.tapTime    = 0;     // time of the most recent tap event\n    interaction.holdTimers = [];    // [{ duration, timeout }]\n  });\n\n  interactions.signals.on('update-pointer', function ({ interaction, down, pointerIndex }) {\n    if (!down) {\n      return;\n    }\n\n    interaction.holdTimers[pointerIndex] = { duration: Infinity, timeout: null };\n  });\n\n  interactions.signals.on('remove-pointer', function ({ interaction, pointerIndex }) {\n    interaction.holdTimers.splice(pointerIndex, 1);\n  });\n\n  interactions.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n    const pointerIndex = interaction.getPointerIndex(pointer);\n\n    if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n      if (interaction.pointerIsDown) {\n        clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n      }\n\n      fire({\n        interaction, pointer, event, eventTarget,\n        type: 'move',\n      });\n    }\n  });\n\n  interactions.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n    const timer = interaction.holdTimers[pointerIndex];\n    const path = utils.dom.getPath(eventTarget);\n    const signalArg = {\n      interaction,\n      pointer,\n      event,\n      eventTarget,\n      type: 'hold',\n      targets: [],\n      path,\n      element: null,\n    };\n\n    for (const element of path) {\n      signalArg.element = element;\n\n      signals.fire('collect-targets', signalArg);\n    }\n\n    if (!signalArg.targets.length) { return; }\n\n    let minDuration = Infinity;\n\n    for (const target of signalArg.targets) {\n      const holdDuration = target.eventable.options.holdDuration;\n\n      if (holdDuration < minDuration) {\n        minDuration = holdDuration;\n      }\n    }\n\n    timer.duration = minDuration;\n    timer.timeout = setTimeout(function () {\n      fire({\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      });\n    }, minDuration);\n  });\n\n  interactions.signals.on('up', ({ interaction, pointer, event, eventTarget }) => {\n    if (!interaction.pointerWasMoved) {\n      fire({ interaction, eventTarget, pointer, event, type: 'tap' });\n    }\n  });\n\n  for (const signalName of ['up', 'cancel']) {\n    interactions.signals.on(signalName, function ({ interaction, pointerIndex }) {\n      if (interaction.holdTimers[pointerIndex]) {\n        clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n      }\n    });\n  }\n\n  for (let i = 0; i < simpleSignals.length; i++) {\n    interactions.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n  }\n}\n\nfunction createSignalListener (type) {\n  return function ({ interaction, pointer, event, eventTarget }) {\n    fire({ interaction, eventTarget, pointer, event, type });\n  };\n}\n\nexport default pointerEvents;\n","function init (scope) {\n  const {\n    pointerEvents,\n    interactions,\n  } = scope;\n\n  pointerEvents.signals.on('new', onNew);\n  pointerEvents.signals.on('fired', arg => onFired(arg, pointerEvents));\n\n  for (const signal of ['move', 'up', 'cancel', 'endall']) {\n    interactions.signals.on(signal, endHoldRepeat);\n  }\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0;\n  pointerEvents.types.push('holdrepeat');\n}\n\nfunction onNew ({ pointerEvent }) {\n  if (pointerEvent.type !== 'hold') { return; }\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1;\n}\n\nfunction onFired ({ interaction, pointerEvent, eventTarget, targets }, pointerEvents) {\n  if (pointerEvent.type !== 'hold' || !targets.length) { return; }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval;\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return; }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(function () {\n    pointerEvents.fire({\n      interaction,\n      eventTarget,\n      type: 'hold',\n      pointer: pointerEvent,\n      event: pointerEvent,\n    });\n  }, interval);\n}\n\nfunction endHoldRepeat ({ interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle);\n    interaction.holdIntervalHandle = null;\n  }\n}\n\nexport default {\n  init,\n};\n","import * as is       from '@interactjs/utils/is';\nimport extend        from '@interactjs/utils/extend';\nimport { merge }     from '@interactjs/utils/arr';\n\nfunction init (scope) {\n  const {\n    pointerEvents,\n    actions,\n    Interactable,\n    interactables,\n  } = scope;\n\n  pointerEvents.signals.on('collect-targets', function ({ targets, element, type, eventTarget }) {\n    scope.interactables.forEachMatch(element, interactable => {\n      const eventable = interactable.events;\n      const options = eventable.options;\n\n      if (\n        eventable.types[type] &&\n        eventable.types[type].length &&\n        is.element(element) &&\n        interactable.testIgnoreAllow(options, element, eventTarget)) {\n\n        targets.push({\n          element,\n          eventable,\n          props: { interactable },\n        });\n      }\n    });\n  });\n\n  interactables.signals.on('new', function ({ interactable }) {\n    interactable.events.getRect = function (element) {\n      return interactable.getRect(element);\n    };\n  });\n\n  interactables.signals.on('set', function ({ interactable, options }) {\n    extend(interactable.events.options, pointerEvents.defaults);\n    extend(interactable.events.options, options.pointerEvents || {});\n  });\n\n  merge(actions.eventTypes, pointerEvents.types);\n\n  Interactable.prototype.pointerEvents = function (options) {\n    extend(this.events.options, options);\n\n    return this;\n  };\n\n  const __backCompatOption = Interactable.prototype._backCompatOption;\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue);\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue;\n    }\n\n    return ret;\n  };\n}\n\nexport default {\n  init,\n};\n","import pointerEvents from './base';\nimport holdRepeat from './holdRepeat';\nimport interactableTargets from './interactableTargets';\n\nfunction init (scope) {\n  pointerEvents.init(scope);\n  holdRepeat.init(scope);\n  interactableTargets.init(scope);\n}\n\nexport {\n  pointerEvents,\n  holdRepeat,\n  interactableTargets,\n  init,\n};\n","import { newInteraction } from '@interactjs/core/interactions';\nimport {\n  arr,\n  is,\n  extend,\n  rect as rectUtils,\n  pointer as pointerUtils,\n  win,\n} from '@interactjs/utils';\n\nexport function init (scope) {\n  const {\n    actions,\n    interactions,\n    /** @lends Interactable */\n    Interactable,\n  } = scope;\n\n  // add action reflow event types\n  for (const actionName of actions.names) {\n    actions.eventTypes.push(`${actionName}reflow`);\n  }\n\n  // remove completed reflow interactions\n  interactions.signals.on('stop', ({ interaction }) => {\n    if (interaction.pointerType === 'reflow') {\n      interaction._reflowResolve();\n      arr.remove(scope.interactions.list, interaction);\n    }\n  });\n\n  /**\n   * ```js\n   * const interactable = interact(target);\n   * const drag = { name: drag, axis: 'x' };\n   * const resize = { name: resize, edges: { left: true, bottom: true };\n   *\n   * interactable.reflow(drag);\n   * interactable.reflow(resize);\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise<Interactable> }\n   */\n  Interactable.prototype.reflow = function (action) {\n    return reflow(this, action, scope);\n  };\n}\n\nfunction reflow (interactable, action, scope) {\n  const elements = is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target];\n\n  const Promise = win.window.Promise;\n  const promises = Promise ? [] : null;\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element);\n\n    if (!rect) { break; }\n\n    const runningInteraction = arr.find(\n      scope.interactions.list,\n      interaction => {\n        return interaction.interacting() &&\n          interaction.target === interactable &&\n          interaction.element === element &&\n          interaction.prepared.name === action.name;\n      });\n    let reflowPromise;\n\n    if (runningInteraction) {\n      runningInteraction.move();\n\n      reflowPromise = runningInteraction._reflowPromise || new Promise(resolve => {\n        runningInteraction._reflowResolve = resolve;\n      });\n    }\n    else {\n      const xywh = rectUtils.tlbrToXywh(rect);\n      const coords = {\n        page     : { x: xywh.x, y: xywh.y },\n        client   : { x: xywh.x, y: xywh.y },\n        timeStamp: Date.now(),\n      };\n\n      const event = pointerUtils.coordsToEvent(coords);\n      reflowPromise = startReflow(scope, interactable, element, action, event);\n    }\n\n    if (promises) {\n      promises.push(reflowPromise);\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable);\n}\n\nfunction startReflow (scope, interactable, element, action, event) {\n  const interaction = newInteraction({ pointerType: 'reflow' }, scope);\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  };\n\n  interaction.target = interactable;\n  interaction.element = element;\n  interaction.prepared = extend({}, action);\n  interaction.prevEvent = event;\n  interaction.updatePointer(event, event, element, true);\n\n  interaction._doPhase(signalArg);\n\n  const reflowPromise = win.window.Promise\n    ? new win.window.Promise((resolve) => {\n      interaction._reflowResolve = resolve;\n    })\n    : null;\n\n  interaction._reflowPromise = reflowPromise;\n  interaction.start(action, interactable, element);\n\n  if (interaction._interacting) {\n    interaction.move(signalArg);\n    interaction.end(event);\n  }\n  else {\n    interaction.stop();\n  }\n\n  interaction.removePointer(event, event);\n  interaction.pointerIsDown = false;\n\n  return reflowPromise;\n}\n\nexport default { init };\n","export default (grid) => {\n  const coordFields = [\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ].filter(([xField, yField]) => xField in grid || yField in grid);\n\n  return function (x, y) {\n    const {\n      range,\n      limits = {\n        left  : -Infinity,\n        right :  Infinity,\n        top   : -Infinity,\n        bottom:  Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid;\n\n    const result = { range };\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / grid[xField]);\n      const gridy = Math.round((y - offset.y) / grid[yField]);\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right , gridx * grid[xField] + offset.x));\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom , gridy * grid[yField] + offset.y));\n    }\n\n    return result;\n  };\n};\n","import grid from './grid';\n\nexport {\n  grid,\n};\n","/* browser entry point */\n\nimport { default as interact, scope } from './interact';\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault';\nimport inertia from '@interactjs/inertia';\nimport * as pointerEvents from '@interactjs/pointerEvents';\nimport * as autoStart from '@interactjs/autoStart';\nimport * as actions from '@interactjs/actions';\nimport modifiersBase from '@interactjs/modifiers/base';\nimport * as modifiers from '@interactjs/modifiers';\nimport * as snappers from '@interactjs/utils/snappers';\nimport autoScroll from '@interactjs/autoScroll';\nimport reflow from '@interactjs/reflow';\n\nexport function init (window) {\n  scope.init(window);\n\n  interact.use(interactablePreventDefault);\n\n  // inertia\n  interact.use(inertia);\n\n  // pointerEvents\n  interact.use(pointerEvents);\n\n  // autoStart, hold\n  interact.use(autoStart);\n\n  // drag and drop, resize, gesture\n  interact.use(actions);\n\n  // snap, resize, etc.\n  interact.use(modifiersBase);\n  interact.modifiers = modifiers;\n  interact.snappers = snappers;\n  interact.createSnapGrid = interact.snappers.grid;\n\n  // for backwrads compatibility\n  for (const type in modifiers) {\n    const { _defaults, _methods } = modifiers[type];\n\n    _defaults._methods = _methods;\n    scope.defaults.perAction[type] = _defaults;\n  }\n\n  // autoScroll\n  interact.use(autoScroll);\n\n  // reflow\n  interact.use(reflow);\n\n  return interact;\n}\n\nif (typeof window === 'object') {\n  init(window);\n}\n\nexport default interact;\nexport { interact };\n","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\n\nimport { interact, init } from '@interactjs/interact';\n\nconst exported = typeof window === 'object'\n  ? interact\n  : init;\n\nexport default exported;\n\nif (typeof module === 'object' && !!module) {\n  module.exports = exported;\n}\n","\nreturn _$interactJs_1;\n\n});\n"]}