{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","interact.js","src/InteractEvent.js","src/Interactable.js","src/Interaction.js","src/actions/drag.js","src/actions/drop.js","src/actions/gesture.js","src/actions/index.js","src/actions/resize.js","src/autoScroll.js","src/autoStart/delay.js","src/autoStart/drag.js","src/autoStart/index.js","src/defaultOptions.js","src/index.js","src/inertia.js","src/interact.js","src/legacyBrowsers.js","src/modifiers/index.js","src/modifiers/restrict.js","src/modifiers/snap.js","src/pointerEvents.js","src/scope.js","src/utils/Signals.js","src/utils/arr.js","src/utils/browser.js","src/utils/domObjects.js","src/utils/domUtils.js","src/utils/events.js","src/utils/extend.js","src/utils/getOriginXY.js","src/utils/hypot.js","src/utils/index.js","src/utils/interactionFinder.js","src/utils/isType.js","src/utils/isWindow.js","src/utils/pointerUtils.js","src/utils/raf.js","src/utils/window.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","interact","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","./src/index","./src/utils/window",2,"_classCallCheck","instance","Constructor","TypeError","extend","getOriginXY","scope","signals","InteractEvent","interaction","event","action","phase","element","related","target","deltaSource","options","defaultOptions","origin","starting","ending","coords","startCoords","curCoords","page","client","x","y","ctrlKey","altKey","shiftKey","metaKey","button","buttons","currentTarget","relatedTarget","t0","downTimes","type","interactable","signalArg","iEvent","fire","prevEvent","pageX","pageY","clientX","clientY","x0","y0","clientX0","clientY0","timeStamp","dt","pointerDelta","duration","speed","velocityX","vx","velocityY","vy","swipe","getSwipe","prototype","angle","Math","atan2","PI","overlap","left","up","right","down","velocity","preventDefault","stopImmediatePropagation","immediatePropagationStopped","propagationStopped","stopPropagation","on","_ref","dx","dy","./scope","./utils/Signals","./utils/extend","./utils/getOriginXY",3,"isType","events","actions","_require","getElementRect","_require2","indexOf","contains","interactables","Interactable","_context","document","_iEvents","_window","undefined","trySelector","context","getWindow","Node","isElement","_doc","win","addDocument","push","set","setOnEvents","phases","onAction","isFunction","onstart","onmove","onend","oninertiastart","setPerAction","option","isObject","perAction","enabled","isBool","getRect","isString","querySelector","rectChecker","checker","newValue","test","eventTypes","listeners","onEvent","len","globalEvents","eventType","listener","useCapture","search","trim","split","isArray","prop","wheelEvent","addDelegate","add","off","eventList","index","splice","removeDelegate","remove","base","perActions","actionName","methodDict","methodName","_iterator","settingsMethods","_isArray","Array","_i","Symbol","iterator","next","done","value","setting","unset","delegatedEvents","delegated","selectors","contexts","delegateListener","delegateUseCapture","./actions","./utils/arr","./utils/domUtils","./utils/events","./utils/isType",4,"validateAction","utils","name","doOnInteractions","method","eventTarget","getActualElement","path","curEventTarget","matches","browser","supportsTouch","prevTouchTime","Date","getTime","changedTouches","pointer","finder","Interaction","invalidPointer","supportsPointerEvent","interactions","mouse","pointerIsDown","pointerType","_updateEventTargets","preventNativeDrag","_iterator2","_isArray2","_i2","_ref2","nodeContains","checkAndPreventDefault","onDocSignal","_ref4","signalName","doc","eventMethod","docEvents","methodNames","prepared","axis","edges","pointers","pointerIds","downTargets","holdTimers","prevCoords","downEvent","downPointer","_eventTarget","_curEventTarget","pointerWasMoved","_interacting","pointerDown","pointerIndex","updatePointer","interacting","setCoords","copyCoords","pointerExtend","start","copyAction","pointerMove","simulation","duplicateMove","hypot","pointerMoveTolerance","setCoordDeltas","duplicate","interactingBeforeMove","doMove","_dontFireMove","pointerUp","getPointerId","clearTimeout","end","removePointer","stop","currentAction","id","nodeName","pEventTypes","PointerEvent","move","cancel","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","touchcancel","blur","endAllInteractions","dragstart","_ref5","_iterator3","_isArray3","_i3","_ref3","withinLimit","withinInteractionLimit","./Interactable","./utils","./utils/browser","./utils/interactionFinder",5,"drag","defaults","manualStart","max","Infinity","maxPerElement","snap","restrict","inertia","autoScroll","startAxis","lockAxis","dragOptions","getCursor","dragEvent","abs","draggable","names","merge","../InteractEvent","../Interactable","../Interaction","../defaultOptions","../scope","../utils","./index",6,"collectDrops","drops","elements","current","drop","accept","matchesSelector","dropElements","querySelectorAll","currentElement","dropzones","fireActiveDrops","prevElement","activeDrops","setActiveDrops","dragElement","possibleDrops","rects","getDrop","validDrops","dynamicDrop","j","rect","dropCheck","dropIndex","indexOfDeepestElement","dropzone","getDropEvents","pointerEvent","dropEvents","enter","leave","activate","deactivate","tmpl","dropElement","dropTarget","prevDropElement","prevDropTarget","dragLeave","prevDropzone","dragEnter","dragmove","fireDropEvents","draggableElement","dropResult","_ref6","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","isNumber","min","dropped","dropOverlap","getPageXY","horizontal","vertical","top","bottom","dragRect","cx","width","cy","height","overlapArea","overlapRatio","_ref7","_ref8",7,"gesture","gestureEvent","ds","startDistance","prevDistance","distance","startAngle","prevAngle","scale","isNaN","gesturable","arg","touches","touchDistance","box","touchBBox","touchAngle","da","prevScale",8,9,"checkResizeEdge","interactableElement","margin","matchesUpTo","resize","square","preserveAspectRatio","NaN","invert","resizeOptions","resizeEdges","edge","axes","cursors","isIe9OrOlder","xy","topleft","bottomright","topright","bottomleft","cursorKey","edgeNames","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","restricted","previous","delta","deltaRect","invertible","originalEdges","startAspectRatio","swap","resizable","resizeAxes","../utils/browser",10,"raf","isWindow","domUtils","container","isScrolling","prevTime","request","scroll","now","scrollBy","scrollLeft","scrollTop","check","onInteractionMove","innerWidth","innerHeight","getElementClientRect","./Interaction","./defaultOptions","./utils/raf","./utils/window",11,"preventImmediateMove","delay","autoStart","delayTimer","setTimeout","../actions",12,"checkStartAxis","thisAxis","parentElement","absX","absY","currentAxis","getDraggable","selector","useMatchesSelectorPolyfill","inContext","testIgnore","testAllow","getAction","elementInteractable","get","selectorInteractable","forEachSelector","../utils/domUtils","../utils/isType",13,"validateSelector","matchElements","match","matchElement","getActionInfo","pushMatches","actionInfo","prepare","styleCursor","documentElement","style","cursor","defaultActionChecker","actionChecker","ignoreFrom","allowFrom","../utils/Signals",14,"resistance","minSpeed","endSpeed","allowResume","smoothEndDuration","_holdDuration",15,"./actions/drag","./actions/drop","./actions/gesture","./actions/resize","./autoScroll","./autoStart","./autoStart/delay","./autoStart/drag","./inertia","./interact","./legacyBrowsers","./modifiers/restrict","./modifiers/snap","./pointerEvents",16,"calcInertia","status","inertiaOptions","lambda","inertiaDur","log","v0","startEvent","sx","sy","modifiedXe","xe","vx0","modifiedYe","ye","vy0","te","lambda_v0","one_ve_v0","inertiaFrame","updateInertiaCoords","inertiaStatus","progress","exp","quadPoint","getQuadraticCurvePoint","animationFrame","boundInertiaFrame","active","smoothEndFrame","easeOutQuad","boundSmoothEndFrame","smoothEnd","pageUp","upCoords","clientUp","modifiers","vys","apply","resumeEvent","resetStatuses","modifierStatuses","statuses","pointerSpeed","inertiaPossible","modifierResult","setAll","shouldMove","locked","./InteractEvent","./modifiers",17,"maxInteractions","ownerDocument","indexOfElement","callback","ret","isSet","debug","getPointerAverage","pointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","closest","removeDocument",18,"onIE8Dblclick","iFinder","prevTap","pointerEvents","collectEventTargets","toString","Object","obj","String","replace","isIE8","selectFix","onDocIE8",19,"setOffsets","startOffset","setModifierOffsets","modifierOffsets","offsets","modifierName","setOffset","coordsArg","preEnd","requireEndOnly","result","changed","currentStatus","modifier","shouldDo","reset","modifyCoords","../utils/extend",20,"endOnly","restriction","elementRect","restrictOptions","offset","pageCoords","useStatusXY","restrictedX","restrictedY","modifiedX","modifiedY",21,"range","targets","relativePoints","snapOptions","snapOffset","relativeX","relativeY","realX","realY","offsetX","offsetY","snapTarget","inRange","snapChanged","snappedX","snappedY","createSnapGrid","grid","limits","gridx","round","gridy","newX","newY","../interact",22,"preventOriginalDefault","originalEvent","firePointers","interval","createNewDoubleTap","pointerId","tapTime","doubleTap","collectSelectors","els","createSignalListener","simpleSignals","simpleEvents","eventCopy",23,"documents","maxActions","activeInteractions","targetCount","targetElementCount","otherAction","prefixedPropREs","onWindowUnload","./utils/domObjects",24,"Signals","targetListeners","./arr",25,"array","source",26,"domObjects","DocumentTouch","isOperaMobile","navigator","appName","userAgent","isIOS7","platform","appVersion","all","atob","prefixedMatchesSelector","Element","MSPointerEvent","over","out","./domObjects","./isType","./window",27,"blank","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch",28,"parent","child","parentNode","node","isDocFrag","host","matchesSelectorPolyfill","elems","nodeList","realWindow","deepestZoneParents","dropzoneParents","deepestZone","unshift","ownerSVGElement","parents","lastChild","previousSibling","limit","correspondingUseElement","getScrollXY","relevantWindow","scrollX","scrollY","clientRect","getBoundingClientRect","getClientRects","_scroll","./browser",29,"elementIndex","typeCount","attachedListeners","useAttachEvent","supplied","wrapped","useCount","_attachedListeners$elementIndex","listenerIndex","wrappedListener","srcElement","preventDef","stopProp","stopImmProp","addEvent","removeEvent","hasOwnProperty","matchFound","fn","useCap","fakeEvent","returnValue","cancelBubble","arr","_elements","_targets","_attachedListeners","./domUtils",30,"dest",31,32,"sqrt",33,"warnOnce","message","warned","console","warn","arguments","_getQBezierValue","p1","p2","p3","iT","startX","startY","cpX","cpY","endX","endY","position","b","c","d","src","./extend","./getOriginXY","./hypot","./pointerUtils","./raf",34,"methodOrder","mouseEvent","details","simulationResume","firstNonActive","_iterator4","_isArray4","_i4","hasPointer","_ref9","_iterator5","_isArray5","_i5","idle","_ref10","_iterator6","_isArray6","_i6",35,"nodeType","thing","./isWindow",36,"Window",37,"dom","pointerUtils","targetObj","prev","cur","isNativePointer","getXY","getClientXY","identifier","tmpXY","webkit","deprecated","vendor","getTouchPair","average","screenX","screenY","minX","minY","maxX","maxY","sourceX","sourceY",38,"vendors","lastTime","requestAnimationFrame","currTime","timeToCall",39,"el","createTextNode","wrap","rootNode","defaultView","parentWindow"],"mappings":"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","file":"interact.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n}\nelse {\n  module.exports = require('./src/index');\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n} else {\n  module.exports = require('./src/index');\n}\n\n},{\"./src/index\":15,\"./src/utils/window\":39}],2:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar extend = require('./utils/extend');\nvar getOriginXY = require('./utils/getOriginXY');\nvar scope = require('./scope');\nvar signals = require('./utils/Signals')['new']();\n\nvar InteractEvent = (function () {\n  function InteractEvent(interaction, event, action, phase, element, related) {\n    _classCallCheck(this, InteractEvent);\n\n    var target = interaction.target;\n    var deltaSource = (target && target.options || scope.defaultOptions).deltaSource;\n    var origin = getOriginXY(target, element);\n    var starting = phase === 'start';\n    var ending = phase === 'end';\n    var coords = starting ? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    var page = extend({}, coords.page);\n    var client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    this.shiftKey = event.shiftKey;\n    this.metaKey = event.metaKey;\n    this.button = event.button;\n    this.buttons = event.buttons;\n    this.target = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.t0 = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type = action + (phase || '');\n    this.interaction = interaction;\n    this.interactable = target;\n\n    var signalArg = {\n      interaction: interaction,\n      event: event,\n      action: action,\n      phase: phase,\n      element: element,\n      related: related,\n      page: page,\n      client: client,\n      coords: coords,\n      starting: starting,\n      ending: ending,\n      deltaSource: deltaSource,\n      iEvent: this\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      var prevEvent = interaction.prevEvent;\n\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    } else {\n      this.pageX = page.x;\n      this.pageY = page.y;\n      this.clientX = client.x;\n      this.clientY = client.y;\n    }\n\n    this.x0 = interaction.startCoords.page.x - origin.x;\n    this.y0 = interaction.startCoords.page.y - origin.y;\n    this.clientX0 = interaction.startCoords.client.x - origin.x;\n    this.clientY0 = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n    signals.fire(action, signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt = interaction.pointerDelta.timeStamp;\n    this.duration = this.timeStamp - interaction.downTimes[0];\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  InteractEvent.prototype.getSwipe = function getSwipe() {\n    var interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    var overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    var left = 135 - overlap <= angle && angle < 225 + overlap;\n    var up = 225 - overlap <= angle && angle < 315 + overlap;\n\n    var right = !left && (315 - overlap <= angle || angle < 45 + overlap);\n    var down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up: up,\n      down: down,\n      left: left,\n      right: right,\n      angle: angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY\n      }\n    };\n  };\n\n  InteractEvent.prototype.preventDefault = function preventDefault() {};\n\n  InteractEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  InteractEvent.prototype.stopPropagation = function stopPropagation() {\n    this.propagationStopped = true;\n  };\n\n  return InteractEvent;\n})();\n\nsignals.on('set-delta', function (_ref) {\n  var iEvent = _ref.iEvent;\n  var interaction = _ref.interaction;\n  var ending = _ref.ending;\n  var starting = _ref.starting;\n  var deltaSource = _ref.deltaSource;\n\n  if (starting) {\n    iEvent.dx = 0;\n    iEvent.dy = 0;\n  }\n  // end event dx, dy is difference between start and end points\n  else if (ending) {\n      if (deltaSource === 'client') {\n        iEvent.dx = iEvent.clientX - interaction.startCoords.client.x;\n        iEvent.dy = iEvent.clientY - interaction.startCoords.client.y;\n      } else {\n        iEvent.dx = iEvent.pageX - interaction.startCoords.page.x;\n        iEvent.dy = iEvent.pageY - interaction.startCoords.page.y;\n      }\n    } else {\n      if (deltaSource === 'client') {\n        iEvent.dx = iEvent.clientX - interaction.prevEvent.clientX;\n        iEvent.dy = iEvent.clientY - interaction.prevEvent.clientY;\n      } else {\n        iEvent.dx = iEvent.pageX - interaction.prevEvent.pageX;\n        iEvent.dy = iEvent.pageY - interaction.prevEvent.pageY;\n      }\n    }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n\n},{\"./scope\":23,\"./utils/Signals\":24,\"./utils/extend\":30,\"./utils/getOriginXY\":31}],3:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar isType = require('./utils/isType');\nvar events = require('./utils/events');\nvar extend = require('./utils/extend');\nvar actions = require('./actions');\nvar scope = require('./scope');\nvar signals = require('./utils/Signals')['new']();\n\nvar _require = require('./utils/domUtils');\n\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./utils/arr');\n\nvar indexOf = _require2.indexOf;\nvar contains = _require2.contains;\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\n\nvar Interactable = (function () {\n  function Interactable(target, options) {\n    _classCallCheck(this, Interactable);\n\n    this.target = target;\n    this._context = scope.document;\n    this._iEvents = this._iEvents || {};\n\n    var _window = undefined;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      var context = options && options.context;\n\n      _window = context ? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node ? context instanceof _window.Node : isType.isElement(context) || context === _window.document)) {\n\n        this._context = context;\n      }\n    } else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target: target,\n      options: options,\n      interactable: this,\n      win: _window\n    });\n\n    scope.addDocument(this._doc, _window);\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  Interactable.prototype.setOnEvents = function setOnEvents(action, phases) {\n    var onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)) {\n      this[onAction + 'start'] = phases.onstart;\n    }\n    if (isType.isFunction(phases.onmove)) {\n      this[onAction + 'move'] = phases.onmove;\n    }\n    if (isType.isFunction(phases.onend)) {\n      this[onAction + 'end'] = phases.onend;\n    }\n    if (isType.isFunction(phases.oninertiastart)) {\n      this[onAction + 'inertiastart'] = phases.oninertiastart;\n    }\n\n    return this;\n  };\n\n  Interactable.prototype.setPerAction = function setPerAction(action, options) {\n    // for all the default per-action options\n    for (var option in options) {\n      // if this option exists for this action\n      if (option in scope.defaultOptions[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(scope.defaultOptions.perAction[option]) && 'enabled' in scope.defaultOptions.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false ? false : true;\n          }\n        } else if (isType.isBool(options[option]) && isType.isObject(scope.defaultOptions.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        } else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  };\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n\n  Interactable.prototype.getRect = function getRect(element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !isType.isElement(element)) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  };\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n\n  Interactable.prototype.rectChecker = function rectChecker(checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  };\n\n  /*\\\n   * Interactable.preventDefault\n   [ method ]\n   *\n   * Returns or sets whether to prevent the browser's default behaviour\n   * in response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   - newValue (string) #optional `true`, `false` or `'auto'`\n   = (string | Interactable) The current setting or this Interactable\n  \\*/\n\n  Interactable.prototype.preventDefault = function preventDefault(newValue) {\n    if (/^(always|never|auto)$/.test(newValue)) {\n      this.options.preventDefault = newValue;\n      return this;\n    }\n\n    if (isType.isBool(newValue)) {\n      this.options.preventDefault = newValue ? 'always' : 'never';\n      return this;\n    }\n\n    return this.options.preventDefault;\n  };\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n\n  Interactable.prototype.origin = function origin(newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    } else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  };\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n\n  Interactable.prototype.deltaSource = function deltaSource(newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  };\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n\n  Interactable.prototype.context = function context() {\n    return this._context;\n  };\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n\n  Interactable.prototype.fire = function fire(iEvent) {\n    if (!(iEvent && iEvent.type) || !contains(scope.eventTypes, iEvent.type)) {\n      return this;\n    }\n\n    var listeners = undefined;\n    var onEvent = 'on' + iEvent.type;\n\n    // Interactable#on() listeners\n    if (iEvent.type in this._iEvents) {\n      listeners = this._iEvents[iEvent.type];\n\n      for (var i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    // interactable.onevent listener\n    if (isType.isFunction(this[onEvent])) {\n      this[onEvent](iEvent);\n    }\n\n    // interact.on() listeners\n    if (iEvent.type in scope.globalEvents && (listeners = scope.globalEvents[iEvent.type])) {\n\n      for (var i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.on = function on(eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this.on(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this.on(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // convert to boolean\n    useCapture = useCapture ? true : false;\n\n    if (contains(scope.eventTypes, eventType)) {\n      // if this type of event was never bound to this Interactable\n      if (!(eventType in this._iEvents)) {\n        this._iEvents[eventType] = [listener];\n      } else {\n        this._iEvents[eventType].push(listener);\n      }\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n        events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n      } else {\n        events.add(this.target, eventType, listener, useCapture);\n      }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.off = function off(eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this.off(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this.off(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n    // convert to boolean\n    useCapture = useCapture ? true : false;\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(scope.eventTypes, eventType)) {\n      var eventList = this._iEvents[eventType];\n      var index = eventList ? indexOf(eventList, listener) : -1;\n\n      if (index !== -1) {\n        this._iEvents[eventType].splice(index, 1);\n      }\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n        events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n      }\n      // remove listener from this Interatable's element\n      else {\n          events.remove(this.target, eventType, listener, useCapture);\n        }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.set = function set(options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, scope.defaultOptions.base);\n\n    var perActions = extend({}, scope.defaultOptions.perAction);\n\n    for (var actionName in actions.methodDict) {\n      var methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, scope.defaultOptions[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (var _iterator = Interactable.settingsMethods, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var setting = _ref;\n\n      this.options[setting] = scope.defaultOptions.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n\n  Interactable.prototype.unset = function unset() {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (var type in events.delegatedEvents) {\n        var delegated = events.delegatedEvents[type];\n\n        for (var i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts.splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    } else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    return scope.interact;\n  };\n\n  return Interactable;\n})();\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = ['deltaSource', 'origin', 'preventDefault', 'rectChecker'];\n\nmodule.exports = Interactable;\n\n},{\"./actions\":8,\"./scope\":23,\"./utils/Signals\":24,\"./utils/arr\":25,\"./utils/domUtils\":28,\"./utils/events\":29,\"./utils/extend\":30,\"./utils/isType\":35}],4:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar scope = require('./scope');\nvar utils = require('./utils');\nvar Interactable = require('./Interactable');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar finder = require('./utils/interactionFinder');\nvar signals = require('./utils/Signals')['new']();\n\nvar listeners = {};\nvar methodNames = ['pointerDown', 'pointerMove', 'pointerUp', 'updatePointer', 'removePointer'];\n\n// for ignoring browser's simulated mouse events\nvar prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nvar Interaction = (function () {\n  function Interaction() {\n    _classCallCheck(this, Interaction);\n\n    this.target = null; // current interactable being interacted with\n    this.element = null; // the target element of the interactable\n\n    this.prepared = { // action that's ready to be fired on next move event\n      name: null,\n      axis: null,\n      edges: null\n    };\n\n    // keep track of added pointers\n    this.pointers = [];\n    this.pointerIds = [];\n    this.downTargets = [];\n    this.downTimes = [];\n    this.holdTimers = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0\n    };\n\n    this.downEvent = null; // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null; // previous action event\n\n    this.pointerIsDown = false;\n    this.pointerWasMoved = false;\n    this._interacting = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  // Check if the current target supports the action.\n  // If so, return the validated action. Otherwise, return null\n\n  Interaction.prototype.pointerDown = function pointerDown(pointer, event, eventTarget) {\n    var pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords, this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n    }\n\n    signals.fire('down', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      pointerIndex: pointerIndex,\n      interaction: this\n    });\n\n    if (!this.interacting()) {\n      this.pointerIsDown = true;\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = new Date().getTime();\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n      utils.copyCoords(this.prevCoords, this.curCoords);\n    }\n\n    this.checkAndPreventDefault(event);\n  };\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action       (object)  The action to be performed - drag, resize, etc.\n   - interactable (Interactable) The Interactable to target\n   - element      (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n\n  Interaction.prototype.start = function start(action, interactable, element) {\n    if (this.interacting() || !this.pointerIsDown || this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    // set the startCoords if there was no prepared action\n    if (!this.prepared.name) {\n      utils.setCoords(this.startCoords, this.pointers);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target = interactable;\n    this.element = element;\n\n    signals.fire('start', { interaction: this });\n\n    signals.fire('start-' + this.prepared.name, {\n      interaction: this,\n      event: this.downEvent\n    });\n  };\n\n  Interaction.prototype.pointerMove = function pointerMove(pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    var duplicateMove = this.curCoords.page.x === this.prevCoords.page.x && this.curCoords.page.y === this.prevCoords.page.y && this.curCoords.client.x === this.prevCoords.client.x && this.curCoords.client.y === this.prevCoords.client.y;\n\n    var dx = undefined;\n    var dy = undefined;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > scope.pointerMoveTolerance;\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n      var signalArg = {\n        pointer: pointer,\n        event: event,\n        eventTarget: eventTarget,\n        dx: dx,\n        dy: dy,\n        duplicate: duplicateMove,\n        interaction: this,\n        interactingBeforeMove: this.interacting()\n      };\n\n      signals.fire('move', signalArg);\n\n      // if interacting, fire a 'move-{action}' signal\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n\n      signals.fire('move-done', signalArg);\n    }\n\n    this.checkAndPreventDefault(event);\n  };\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.doMove = function doMove(signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('move-' + this.prepared.name, signalArg);\n    }\n\n    this._dontFireMove = false;\n  };\n\n  // End interact move events and stop auto-scroll unless simulation is running\n\n  Interaction.prototype.pointerUp = function pointerUp(pointer, event, eventTarget, curEventTarget) {\n    this.checkAndPreventDefault(event);\n\n    var pointerIndex = this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire(/cancel$/i.test(event.type) ? 'cancel' : 'up', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      curEventTarget: curEventTarget,\n      interaction: this\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n      this.removePointer(pointer);\n    }\n  };\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.end = function end(event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event: event,\n        interaction: this\n      });\n    }\n\n    this.stop();\n  };\n\n  Interaction.prototype.currentAction = function currentAction() {\n    return this._interacting ? this.prepared.name : null;\n  };\n\n  Interaction.prototype.interacting = function interacting() {\n    return this._interacting;\n  };\n\n  Interaction.prototype.stop = function stop() {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  };\n\n  Interaction.prototype.updatePointer = function updatePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  };\n\n  Interaction.prototype.removePointer = function removePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.pointers.splice(index, 1);\n    this.pointerIds.splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes.splice(index, 1);\n    this.holdTimers.splice(index, 1);\n  };\n\n  Interaction.prototype.checkAndPreventDefault = function checkAndPreventDefault(event) {\n    var setting = this.target ? this.target.options.preventDefault : 'never';\n\n    if (setting === 'never') {\n      return;\n    }\n\n    if (setting === 'always') {\n      event.preventDefault();\n      return;\n    }\n\n    // setting === 'auto'\n\n    // don't preventDefault of pointerdown events\n    if (/down|start/i.test(event.type)) {\n      return;\n    }\n\n    // don't preventDefault on input elements\n    if (/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n      return;\n    }\n\n    event.preventDefault();\n  };\n\n  Interaction.prototype._updateEventTargets = function _updateEventTargets(target, currentTarget) {\n    this._eventTarget = target;\n    this._curEventTarget = currentTarget;\n  };\n\n  return Interaction;\n})();\n\nfunction validateAction(action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfor (var i = 0, len = methodNames.length; i < len; i++) {\n  var method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions(method) {\n  return function (event) {\n    var eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    var curEventTarget = utils.getActualElement(event.currentTarget);\n    var matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (var i = 0; i < event.changedTouches.length; i++) {\n        var pointer = event.changedTouches[i];\n        var interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    } else {\n      var invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (var i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || new Date().getTime() - prevTouchTime < 500;\n      }\n\n      if (!invalidPointer) {\n        var interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = /mouse/i.test(event.pointerType || event.type)\n          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n           || event.pointerType === 4;\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (var _iterator = matches, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref[0];\n      var interaction = _ref[1];\n\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  };\n}\n\n// prevent native HTML5 drag on interact.js target elements\nfunction preventNativeDrag(event) {\n  for (var _iterator2 = scope.interactions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var interaction = _ref2;\n\n    if (interaction.element && (interaction.element === event.target || utils.nodeContains(interaction.element, event.target))) {\n\n      interaction.checkAndPreventDefault(event);\n      return;\n    }\n  }\n}\n\nvar docEvents = {/* 'eventType': listenerFunc */};\nvar pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down] = listeners.pointerDown;\n  docEvents[pEventTypes.move] = listeners.pointerMove;\n  docEvents[pEventTypes.up] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n} else {\n  docEvents.mousedown = listeners.pointerDown;\n  docEvents.mousemove = listeners.pointerMove;\n  docEvents.mouseup = listeners.pointerUp;\n\n  docEvents.touchstart = listeners.pointerDown;\n  docEvents.touchmove = listeners.pointerMove;\n  docEvents.touchend = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = scope.endAllInteractions;\ndocEvents.dragstart = preventNativeDrag;\n\nfunction onDocSignal(_ref4, signalName) {\n  var doc = _ref4.doc;\n\n  var eventMethod = signalName.indexOf('add') === 0 ? events.add : events.remove;\n\n  // delegate event listener\n  for (var eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (var eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document', onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\n// Stop related interactions when an Interactable is unset\nInteractable.signals.on('unset', function (_ref5) {\n  var interactable = _ref5.interactable;\n\n  for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var interaction = _ref3;\n\n    if (interaction.target === interactable && interaction.interacting()) {\n      interaction.end();\n    }\n  }\n});\n\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.withinLimit = scope.withinInteractionLimit;\nInteraction.validateAction = validateAction;\nInteraction.signals = signals;\n\nmodule.exports = Interaction;\n\n},{\"./Interactable\":3,\"./scope\":23,\"./utils\":33,\"./utils/Signals\":24,\"./utils/browser\":26,\"./utils/events\":29,\"./utils/interactionFinder\":34}],5:[function(require,module,exports){\nvar actions = require('./index');\nvar scope = require('../scope');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drag = {\n  defaults: {\n    enabled: false,\n    manualStart: true,\n    max: Infinity,\n    maxPerElement: 1,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    startAxis: 'xy',\n    lockAxis: 'xy'\n  },\n\n  checker: function (pointer, event, interactable) {\n    var dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled ? { name: 'drag', axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis } : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  }\n};\n\nInteraction.signals.on('start-drag', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy = 0;\n  } else if (axis === 'y') {\n    interaction.curCoords.page.x = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx = 0;\n  }\n});\n\nInteraction.signals.on('move-drag', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  } else if (axis === 'y') {\n    dragEvent.pageX = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var event = _ref4.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false ? false : true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(scope.eventTypes, ['dragstart', 'dragmove', 'draginertiastart', 'draginertiaresume', 'dragend']);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":14,\"../scope\":23,\"../utils\":33,\"./index\":8}],6:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar scope = require('../scope');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drop = {\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer'\n  }\n};\n\nInteraction.signals.on('start-drag', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements = [];\n  interaction.activeDrops.rects = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  var dragEvent = interaction.prevEvent;\n  var dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var iEvent = _ref3.iEvent;\n  var event = _ref3.event;\n\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return;\n  }\n\n  var draggableElement = interaction.element;\n  var dragEvent = iEvent;\n  var dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('move-drag', function (_ref4) {\n  var interaction = _ref4.interaction;\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function (_ref6) {\n  var interaction = _ref6.interaction;\n\n  interaction.activeDrops.dropzones = interaction.activeDrops.elements = interaction.activeDrops.rects = interaction.dropEvents = null;\n});\n\nfunction collectDrops(interaction, element) {\n  var drops = [];\n  var elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var _iterator = scope.interactables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var current = _ref;\n\n    if (!current.options.drop.enabled) {\n      continue;\n    }\n\n    var accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if (utils.isElement(accept) && accept !== element || utils.isString(accept) && !utils.matchesSelector(element, accept)) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    var dropElements = utils.isString(current.target) ? current._context.querySelectorAll(current.target) : [current.target];\n\n    for (var i = 0; i < dropElements.length; i++) {\n      var currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements: elements,\n    dropzones: drops\n  };\n}\n\nfunction fireActiveDrops(interaction, event) {\n  var prevElement = undefined;\n\n  // loop through all active dropzones and trigger event\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    var current = interaction.activeDrops.dropzones[i];\n    var currentElement = interaction.activeDrops.elements[i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops(interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  var possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements = possibleDrops.elements;\n  interaction.activeDrops.rects = [];\n\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] = interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop(dragEvent, event, dragElement) {\n  var interaction = dragEvent.interaction;\n  var validDrops = [];\n\n  if (scope.dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    var current = interaction.activeDrops.dropzones[j];\n    var currentElement = interaction.activeDrops.elements[j];\n    var rect = interaction.activeDrops.rects[j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect) ? currentElement : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  var dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element: interaction.activeDrops.elements[dropIndex] || null\n  };\n}\n\nfunction getDropEvents(interaction, pointerEvent, dragEvent) {\n  var dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null\n  };\n\n  var tmpl = {\n    dragEvent: dragEvent,\n    interaction: interaction,\n    target: interaction.dropElement,\n    dropzone: interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable: dragEvent.interactable,\n    timeStamp: dragEvent.timeStamp\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave = dropEvents.leave.target = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent: dragEvent,\n        interaction: interaction,\n        target: interaction.dropElement,\n        dropzone: interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable: dragEvent.interactable,\n        timeStamp: dragEvent.timeStamp,\n        type: 'dragenter'\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove: dragEvent,\n      type: 'dropmove'\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents(interaction, dropEvents) {\n  if (dropEvents.leave) {\n    interaction.prevDropTarget.fire(dropEvents.leave);\n  }\n  if (dropEvents.enter) {\n    interaction.dropTarget.fire(dropEvents.enter);\n  }\n  if (dropEvents.drop) {\n    interaction.dropTarget.fire(dropEvents.drop);\n  }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false ? false : true;\n\n    if (utils.isFunction(options.ondrop)) {\n      this.ondrop = options.ondrop;\n    }\n    if (utils.isFunction(options.ondropactivate)) {\n      this.ondropactivate = options.ondropactivate;\n    }\n    if (utils.isFunction(options.ondropdeactivate)) {\n      this.ondropdeactivate = options.ondropdeactivate;\n    }\n    if (utils.isFunction(options.ondragenter)) {\n      this.ondragenter = options.ondragenter;\n    }\n    if (utils.isFunction(options.ondragleave)) {\n      this.ondragleave = options.ondragleave;\n    }\n    if (utils.isFunction(options.ondropmove)) {\n      this.ondropmove = options.ondropmove;\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    } else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  var dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return this.options.drop.checker ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement) : false;\n  }\n\n  var dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    var origin = utils.getOriginXY(draggable, draggableElement);\n    var page = utils.getPageXY(dragEvent);\n    var horizontal = undefined;\n    var vertical = undefined;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = page.x > rect.left && page.x < rect.right;\n    vertical = page.y > rect.top && page.y < rect.bottom;\n\n    dropped = horizontal && vertical;\n  }\n\n  var dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    var cx = dragRect.left + dragRect.width / 2;\n    var cy = dragRect.top + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    var overlapArea = Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top));\n\n    var overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function (_ref7) {\n  var interactable = _ref7.interactable;\n\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement = null; // the element at the time of checking\n  interaction.prevDropTarget = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [], // the dropzones that are mentioned below\n    elements: [], // elements of dropzones that accept the target draggable\n    rects: [] };\n});\n\n// the rects of the elements mentioned above\nInteraction.signals.on('stop', function (_ref8) {\n  var interaction = _ref8.interaction;\n\n  interaction.dropTarget = interaction.dropElement = interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\nutils.merge(scope.eventTypes, ['dragenter', 'dragleave', 'dropactivate', 'dropdeactivate', 'dropmove', 'drop']);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":14,\"../scope\":23,\"../utils\":33,\"./index\":8}],7:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar scope = require('../scope');\nvar defaultOptions = require('../defaultOptions');\n\nvar gesture = {\n  defaults: {\n    manualStart: false,\n    enabled: false,\n    max: Infinity,\n    maxPerElement: 1,\n\n    restrict: null\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  }\n};\n\nInteraction.signals.on('start-gesture', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('move-gesture', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (!interaction.pointerIds.length) {\n    return interaction.prevEvent;\n  }\n\n  var gestureEvent = undefined;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity && gestureEvent.scale !== null && gestureEvent.scale !== undefined && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false ? false : true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('gesture', function (arg) {\n  if (arg.action !== 'gesture') {\n    return;\n  }\n\n  var interaction = arg.interaction;\n  var iEvent = arg.iEvent;\n  var event = arg.event;\n  var starting = arg.starting;\n  var ending = arg.ending;\n  var deltaSource = arg.deltaSource;\n\n  var pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = 1;\n    iEvent.ds = 0;\n    iEvent.angle = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da = 0;\n  } else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box = interaction.prevEvent.box;\n    iEvent.scale = interaction.prevEvent.scale;\n    iEvent.ds = iEvent.scale - 1;\n    iEvent.angle = interaction.prevEvent.angle;\n    iEvent.da = iEvent.angle - interaction.gesture.startAngle;\n  } else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0, // distance between two touches of touchStart\n    prevDistance: 0,\n    distance: 0,\n\n    scale: 1, // gesture.distance / gesture.startDistance\n\n    startAngle: 0, // angle of line joining two touches\n    prevAngle: 0 };\n});\n\n// angle of the previous gesture event\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(scope.eventTypes, ['gesturestart', 'gesturemove', 'gestureend']);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":14,\"../scope\":23,\"../utils\":33,\"./index\":8}],8:[function(require,module,exports){\nvar actions = {\n  names: [],\n  methodDict: {}\n};\n\nmodule.exports = actions;\n\n},{}],9:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar scope = require('../scope');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar resize = {\n  defaults: {\n    enabled: false,\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none'\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) {\n      return null;\n    }\n\n    var page = utils.extend({}, interaction.curCoords.page);\n    var options = interactable.options;\n\n    if (options.resize.enabled) {\n      var resizeOptions = options.resize;\n      var resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (var edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge, resizeOptions.edges[edge], page, interaction._eventTarget, element, rect, resizeOptions.margin || scope.margin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges\n          };\n        }\n      } else {\n        var right = options.resize.axis !== 'y' && page.x > rect.right - scope.margin;\n        var bottom = options.resize.axis !== 'x' && page.y > rect.bottom - scope.margin;\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : '')\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: browser.isIe9OrOlder ? {\n    x: 'e-resize',\n    y: 's-resize',\n    xy: 'se-resize',\n\n    top: 'n-resize',\n    left: 'w-resize',\n    bottom: 's-resize',\n    right: 'e-resize',\n    topleft: 'se-resize',\n    bottomright: 'se-resize',\n    topright: 'ne-resize',\n    bottomleft: 'ne-resize'\n  } : {\n    x: 'ew-resize',\n    y: 'ns-resize',\n    xy: 'nwse-resize',\n\n    top: 'ns-resize',\n    left: 'ew-resize',\n    bottom: 'ns-resize',\n    right: 'ew-resize',\n    topleft: 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright: 'nesw-resize',\n    bottomleft: 'nesw-resize'\n  },\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    } else if (action.edges) {\n      var cursorKey = '';\n      var edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (var i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  }\n};\n\nInteraction.signals.on('start-resize', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    var startRect = interaction.target.getRect(interaction.element);\n    var resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      var linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top = linkedEdges.top || linkedEdges.left && !linkedEdges.bottom;\n      linkedEdges.left = linkedEdges.left || linkedEdges.top && !linkedEdges.right;\n      linkedEdges.bottom = linkedEdges.bottom || linkedEdges.right && !linkedEdges.top;\n      linkedEdges.right = linkedEdges.right || linkedEdges.bottom && !linkedEdges.left;\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    } else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start: startRect,\n      current: utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous: utils.extend({}, startRect),\n      delta: {\n        left: 0, right: 0, width: 0,\n        top: 0, bottom: 0, height: 0\n      }\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('move-resize', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  var resizeOptions = interaction.target.options.resize;\n  var invert = resizeOptions.invert;\n  var invertible = invert === 'reposition' || invert === 'negate';\n\n  var edges = interaction.prepared.edges;\n\n  if (edges) {\n    var start = interaction.resizeRects.start;\n    var current = interaction.resizeRects.current;\n    var restricted = interaction.resizeRects.restricted;\n    var delta = interaction.resizeRects.delta;\n    var previous = utils.extend(interaction.resizeRects.previous, restricted);\n    var originalEdges = edges;\n\n    var dx = resizeEvent.dx;\n    var dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      var startAspectRatio = resizeOptions.preserveAspectRatio ? interaction.resizeStartAspectRatio : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n        dy = -dx / startAspectRatio;\n      } else if (originalEdges.left || originalEdges.right) {\n        dy = dx / startAspectRatio;\n      } else if (originalEdges.top || originalEdges.bottom) {\n        dx = dy * startAspectRatio;\n      }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top) {\n      current.top += dy;\n    }\n    if (edges.bottom) {\n      current.bottom += dy;\n    }\n    if (edges.left) {\n      current.left += dx;\n    }\n    if (edges.right) {\n      current.right += dx;\n    }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        var swap = undefined;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    } else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left = Math.min(current.left, start.right);\n      restricted.right = Math.max(current.right, start.left);\n    }\n\n    restricted.width = restricted.right - restricted.left;\n    restricted.height = restricted.bottom - restricted.top;\n\n    for (var edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false ? false : true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    } else if (options.axis === null) {\n      this.options.resize.axis = scope.defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    } else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge(name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) {\n    return false;\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    var width = utils.isNumber(rect.width) ? rect.width : rect.right - rect.left;\n    var height = utils.isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right';\n      } else if (name === 'right') {\n        name = 'left';\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom';\n      } else if (name === 'bottom') {\n        name = 'top';\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n    }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n  ? value === element\n  // otherwise check if element matches value as selector\n  : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('resize', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n\n  if (!interaction.resizeAxes) {\n    return;\n  }\n\n  var options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    } else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  } else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    } else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(scope.eventTypes, ['resizestart', 'resizemove', 'resizeinertiastart', 'resizeinertiaresume', 'resizeend']);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":14,\"../scope\":23,\"../utils\":33,\"../utils/browser\":26,\"./index\":8}],10:[function(require,module,exports){\nvar raf = require('./utils/raf');\nvar getWindow = require('./utils/window').getWindow;\nvar isWindow = require('./utils/isType').isWindow;\nvar domUtils = require('./utils/domUtils');\nvar Interaction = require('./Interaction');\nvar defaultOptions = require('./defaultOptions');\n\nvar autoScroll = {\n  defaults: {\n    enabled: false,\n    container: null, // the item that is scrolled (Window or HTMLElement)\n    margin: 60,\n    speed: 300 },\n\n  // the scroll speed in pixels per second\n  interaction: null,\n  i: null, // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(autoScroll.interaction.element);\n    var now = new Date().getTime();\n    // change in time in seconds\n    var dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    var s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      } else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    var options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function (_ref) {\n    var interaction = _ref.interaction;\n    var pointer = _ref.pointer;\n\n    if (!(interaction.interacting() && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    var top = undefined;\n    var right = undefined;\n    var bottom = undefined;\n    var left = undefined;\n\n    var options = interaction.target.options[interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left = pointer.clientX < autoScroll.margin;\n      top = pointer.clientY < autoScroll.margin;\n      right = pointer.clientX > container.innerWidth - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    } else {\n      var rect = domUtils.getElementClientRect(container);\n\n      left = pointer.clientX < rect.left + autoScroll.margin;\n      top = pointer.clientY < rect.top + autoScroll.margin;\n      right = pointer.clientX > rect.right - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0;\n    autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  }\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('move-done', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n\n},{\"./Interaction\":4,\"./defaultOptions\":14,\"./utils/domUtils\":28,\"./utils/isType\":35,\"./utils/raf\":38,\"./utils/window\":39}],11:[function(require,module,exports){\nvar autoStart = require('./index');\nvar Interaction = require('../Interaction');\nvar actions = require('../actions');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(function () {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nfor (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  var _ref;\n\n  if (_isArray) {\n    if (_i >= _iterator.length) break;\n    _ref = _iterator[_i++];\n  } else {\n    _i = _iterator.next();\n    if (_i.done) break;\n    _ref = _i.value;\n  }\n\n  var action = _ref;\n\n  autoStart.signals.on('before-start-' + action, preventImmediateMove);\n}\n\nInteraction.signals.on('move-done', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  if (interaction.pointerWasMoved) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\nfunction preventImmediateMove(_ref4) {\n  var interaction = _ref4.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n}\n\n},{\"../Interaction\":4,\"../actions\":8,\"./index\":13}],12:[function(require,module,exports){\nvar autoStart = require('./index');\nvar scope = require('../scope');\nvar browser = require('../utils/browser');\n\nvar _require = require('../utils/isType');\n\nvar isElement = _require.isElement;\n\nvar _require2 = require('../utils/domUtils');\n\nvar matchesSelector = _require2.matchesSelector;\nvar parentElement = _require2.parentElement;\n\nautoStart.signals.on('before-start-drag', function (_ref) {\n  var interaction = _ref.interaction;\n  var eventTarget = _ref.eventTarget;\n  var dx = _ref.dx;\n  var dy = _ref.dy;\n\n  // check if a drag is in the correct axis\n  var absX = Math.abs(dx);\n  var absY = Math.abs(dy);\n  var dragOptions = interaction.target.options.drag;\n  var startAxis = dragOptions.startAxis;\n  var currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start' ? currentAxis : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n      (function () {\n\n        var element = eventTarget;\n\n        var getDraggable = function (interactable, selector, context) {\n          var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n          if (interactable === interaction.target) {\n            return;\n          }\n\n          var action = null;\n\n          if (scope.inContext(interactable, eventTarget) && !interactable.options.drag.manualStart && !scope.testIgnore(interactable, element, eventTarget) && scope.testAllow(interactable, element, eventTarget) && matchesSelector(element, selector, elements)) {\n\n            action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, interactable) && scope.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n            return interactable;\n          }\n        };\n\n        var action = null;\n\n        // check all interactables\n        while (isElement(element)) {\n          var elementInteractable = scope.interactables.get(element);\n\n          if (elementInteractable && elementInteractable !== interaction.target && !elementInteractable.options.drag.manualStart) {\n\n            action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, elementInteractable)) {\n\n            interaction.prepared.name = 'drag';\n            interaction.target = elementInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          var selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n          if (selectorInteractable) {\n            interaction.prepared.name = 'drag';\n            interaction.target = selectorInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          element = parentElement(element);\n        }\n      })();\n    }\n  }\n});\n\nfunction checkStartAxis(startAxis, interactable) {\n  if (!interactable) {\n    return false;\n  }\n\n  var thisAxis = interactable.options.drag.startAxis;\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis;\n}\n\n},{\"../scope\":23,\"../utils/browser\":26,\"../utils/domUtils\":28,\"../utils/isType\":35,\"./index\":13}],13:[function(require,module,exports){\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar actions = require('../actions');\nvar defaultOptions = require('../defaultOptions');\nvar browser = require('../utils/browser');\nvar scope = require('../scope');\nvar utils = require('../utils');\nvar signals = require('../utils/Signals')['new']();\n\n// mouse move cursor style\nInteraction.signals.on('move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n\n  if (!interaction.mouse || interaction.pointerIsDown) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('down', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n\n  if (interaction.interacting()) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  var interaction = arg.interaction;\n  var event = arg.event;\n\n  if (!(interaction.pointerIsDown && interaction.pointerWasMoved && interaction.prepared.name)) {\n    return;\n  }\n\n  // ignore movement while simulation is active\n  if (!interaction.simulation) {\n\n    if (!interaction.interacting()) {\n      signals.fire('before-start-' + interaction.prepared.name, arg);\n    }\n\n    var starting = !!interaction.prepared.name && !interaction.interacting();\n\n    if (starting && (interaction.target.options[interaction.prepared.name].manualStart || !scope.withinInteractionLimit(interaction.target, interaction.element, interaction.prepared))) {\n      interaction.stop(event);\n      return;\n    }\n\n    if (interaction.prepared.name && interaction.target) {\n      if (starting) {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }\n    }\n  }\n});\n\nfunction validateSelector(interaction, pointer, event, matches, matchElements) {\n  for (var i = 0, len = matches.length; i < len; i++) {\n    var match = matches[i];\n    var matchElement = matchElements[i];\n    var action = Interaction.validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && scope.withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action: action,\n        target: match,\n        element: matchElement\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo(interaction, pointer, event, eventTarget) {\n  var matches = [];\n  var matchElements = [];\n\n  var element = eventTarget;\n  var action = null;\n\n  function pushMatches(interactable, selector, context) {\n    var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    if (scope.inContext(interactable, element) && !scope.testIgnore(interactable, element, eventTarget) && scope.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    var elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable && (action = Interaction.validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable)) && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element: element,\n        action: action,\n        target: elementInteractable\n      };\n    } else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      var actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentElement(element);\n  }\n\n  return {};\n}\n\nfunction prepare(interaction, _ref4) {\n  var action = _ref4.action;\n  var target = _ref4.target;\n  var element = _ref4.element;\n\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    var cursor = action ? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  var action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\n/*\\\n * Interactable.ignoreFrom\n [ method ]\n *\n * If the target of the `mousedown`, `pointerdown` or `touchstart`\n * event or any of it's parents match the given CSS selector or\n * Element, no drag/resize/gesture is started.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n = (string | Element | object) The current ignoreFrom value or this Interactable\n **\n | interact(element, { ignoreFrom: document.getElementById('no-action') });\n | // or\n | interact(element).ignoreFrom('input, textarea, a');\n\\*/\nInteractable.prototype.ignoreFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {\n    // CSS selector to match event.target\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {\n    // specific element\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  return this.options.ignoreFrom;\n};\n\n/*\\\n * Interactable.allowFrom\n [ method ]\n *\n * A drag/resize/gesture is started only If the target of the\n * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n * parents match the given CSS selector or Element.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n = (string | Element | object) The current allowFrom value or this Interactable\n **\n | interact(element, { allowFrom: document.getElementById('drag-handle') });\n | // or\n | interact(element).allowFrom('.handle');\n\\*/\nInteractable.prototype.allowFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {\n    // CSS selector to match event.target\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {\n    // specific element\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  return this.options.allowFrom;\n};\n\nInteraction.signals.on('stop-active', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  var target = interaction.target;\n\n  if (target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  var rect = this.getRect(element);\n  var action = null;\n\n  for (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var actionName = _ref;\n\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\ndefaultOptions.perAction.manualStart = false;\n\nmodule.exports = { signals: signals };\n\n},{\"../Interactable\":3,\"../Interaction\":4,\"../actions\":8,\"../defaultOptions\":14,\"../scope\":23,\"../utils\":33,\"../utils/Signals\":24,\"../utils/browser\":26}],14:[function(require,module,exports){\nmodule.exports = {\n  base: {\n    accept: null,\n    preventDefault: 'auto',\n    origin: { x: 0, y: 0 },\n    deltaSource: 'page',\n    allowFrom: null\n  },\n\n  perAction: {\n    max: Infinity,\n    maxPerElement: 1,\n\n    inertia: {\n      enabled: false,\n      resistance: 10, // the lambda in exponential decay\n      minSpeed: 100, // target speed must be above this for inertia to start\n      endSpeed: 10, // the speed at which inertia is slow enough to stop\n      allowResume: true, // allow resuming an action in inertia phase\n      smoothEndDuration: 300 }\n  },\n\n  // animate to snap/restrict endOnly if there's no inertia\n  _holdDuration: 600\n};\n\n},{}],15:[function(require,module,exports){\n/* browser entry point */\n\n// Interaction\nrequire('./Interaction');\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// autoScroll\nrequire('./autoScroll');\n\n// autoStart\nrequire('./autoStart');\nrequire('./autoStart/drag');\nrequire('./autoStart/delay');\n\n// export interact\nmodule.exports = require('./interact');\n\n},{\"./Interaction\":4,\"./actions/drag\":5,\"./actions/drop\":6,\"./actions/gesture\":7,\"./actions/resize\":9,\"./autoScroll\":10,\"./autoStart\":13,\"./autoStart/delay\":11,\"./autoStart/drag\":12,\"./inertia\":16,\"./interact\":17,\"./legacyBrowsers\":18,\"./modifiers/restrict\":20,\"./modifiers/snap\":21,\"./pointerEvents\":22}],16:[function(require,module,exports){\nvar InteractEvent = require('./InteractEvent');\nvar Interaction = require('./Interaction');\nvar modifiers = require('./modifiers');\nvar utils = require('./utils');\nvar animationFrame = utils.raf;\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active: false,\n    smoothEnd: false,\n    allowResume: false,\n    ending: false,\n\n    startEvent: null,\n    upCoords: {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i: null\n  };\n\n  interaction.boundInertiaFrame = function () {\n    return inertiaFrame.apply(interaction);\n  };\n  interaction.boundSmoothEndFrame = function () {\n    return smoothEndFrame.apply(interaction);\n  };\n});\n\nInteraction.signals.on('down', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n  var pointer = _ref.pointer;\n  var eventTarget = _ref.eventTarget;\n\n  var status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    var element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        var signalArg = { interaction: interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('resume', signalArg);\n\n        // fire a reume event\n        var resumeEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiaresume', interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentElement(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  var status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) {\n    return;\n  }\n\n  var target = interaction.target;\n  var options = target && target.options;\n  var inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  var now = new Date().getTime();\n  var statuses = {};\n  var page = utils.extend({}, interaction.curCoords.page);\n  var pointerSpeed = interaction.pointerDelta.client.speed;\n  var inertiaPossible = false;\n  var inertia = false;\n  var smoothEnd = false;\n  var modifierResult = undefined;\n\n  // check if inertia should be started\n  inertiaPossible = inertiaOptions && inertiaOptions.enabled && interaction.prepared.name !== 'gesture' && event !== status.startEvent;\n\n  inertia = inertiaPossible && now - interaction.curCoords.timeStamp < 50 && pointerSpeed > inertiaOptions.minSpeed && pointerSpeed > inertiaOptions.endSpeed;\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) {\n    return;\n  }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  } else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  var status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = status.ending = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia(interaction, status) {\n  var inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  var lambda = inertiaOptions.resistance;\n  var inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame() {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  var status = this.inertiaStatus;\n  var options = this.target.options[this.prepared.name].inertia;\n  var lambda = options.resistance;\n  var t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    var progress = 1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    } else {\n      var quadPoint = utils.getQuadraticCurvePoint(0, 0, status.xe, status.ye, status.modifiedXe, status.modifiedYe, progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  } else {\n    status.ending = true;\n\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = status.ending = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame() {\n  updateInertiaCoords(this);\n\n  var status = this.inertiaStatus;\n  var t = new Date().getTime() - status.t0;\n  var duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  } else {\n    status.ending = true;\n\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd = status.active = status.ending = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords(interaction) {\n  var status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) {\n    return;\n  }\n\n  var pageUp = status.upCoords.page;\n  var clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [{\n    pageX: pageUp.x + status.sx,\n    pageY: pageUp.y + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy\n  }]);\n}\n\n},{\"./InteractEvent\":2,\"./Interaction\":4,\"./modifiers\":19,\"./utils\":33}],17:[function(require,module,exports){\n/**\n * interact.js v1.2.5\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n\nvar browser = require('./utils/browser');\nvar events = require('./utils/events');\nvar utils = require('./utils');\nvar scope = require('./scope');\nvar Interactable = require('./Interactable');\n\nscope.dynamicDrop = false;\n\n// Less Precision with touch input\nscope.margin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10;\n\nscope.pointerMoveTolerance = 1;\n\n// Allow this many interactions to happen simultaneously\nscope.maxInteractions = Infinity;\n\n// because Webkit and Opera still use 'mousewheel' event type\nscope.wheelEvent = 'onmousewheel' in scope.document ? 'mousewheel' : 'wheel';\n\nscope.globalEvents = {};\n\nscope.inContext = function (interactable, element) {\n  return interactable._context === element.ownerDocument || utils.nodeContains(interactable._context, element);\n};\n\nscope.testIgnore = function (interactable, interactableElement, element) {\n  var ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  } else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n};\n\nscope.testAllow = function (interactable, interactableElement, element) {\n  var allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) {\n    return true;\n  }\n\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  } else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n};\n\nscope.interactables.indexOfElement = function indexOfElement(target, context) {\n  context = context || scope.document;\n\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    if (interactable.target === target && (!utils.isString(target) || interactable._context === context)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet(element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!utils.isString(interactable.target)) {\n      continue;\n    }\n\n    var ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact(document.getElementById('draggable')).draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // something cool...\n |     })\n |     .autoScroll(true);\n\\*/\nfunction interact(element, options) {\n  return scope.interactables.get(element, options) || new Interactable(element, options);\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator = type, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var eventType = _ref;\n\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(scope.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!scope.globalEvents[type]) {\n      scope.globalEvents[type] = [listener];\n    } else {\n      scope.globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n      events.add(scope.document, type, listener, useCapture);\n    }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator2 = type, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var eventType = _ref2;\n\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(scope.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  } else {\n    var index = undefined;\n\n    if (type in scope.globalEvents && (index = utils.indexOf(scope.globalEvents[type], listener)) !== -1) {\n      scope.globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage = utils.pointerAverage;\ninteract.getTouchBBox = utils.touchBBox;\ninteract.getTouchDistance = utils.touchDistance;\ninteract.getTouchAngle = utils.touchAngle;\n\ninteract.getElementRect = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector = utils.matchesSelector;\ninteract.closest = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (var i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n    //calcRects(dropzones);\n    //}\n\n    scope.dynamicDrop = newValue;\n\n    return interact;\n  }\n  return scope.dynamicDrop;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return scope.pointerMoveTolerance;\n};\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return scope.maxInteractions;\n};\n\ninteract.addDocument = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n\n},{\"./Interactable\":3,\"./scope\":23,\"./utils\":33,\"./utils/browser\":26,\"./utils/events\":29}],18:[function(require,module,exports){\nvar scope = require('./scope');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar iFinder = require('./utils/interactionFinder');\n\nvar toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick(event) {\n  var interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) {\n    return;\n  }\n\n  if (interaction.prevTap && event.clientX === interaction.prevTap.clientX && event.clientY === interaction.prevTap.clientY && event.target === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes[0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  (function () {\n    var selectFix = function (event) {\n      for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var interaction = _ref;\n\n        if (interaction.interacting()) {\n          interaction.checkAndPreventDefault(event);\n        }\n      }\n    };\n\n    var onDocIE8 = function onDocIE8(_ref2, signalName) {\n      var doc = _ref2.doc;\n      var win = _ref2.win;\n\n      var eventMethod = signalName.indexOf('listen') === 0 ? events.add : events.remove;\n\n      // For IE's lack of Event#preventDefault\n      eventMethod(doc, 'selectstart', selectFix);\n\n      if (scope.pointerEvents) {\n        eventMethod(doc, 'dblclick', onIE8Dblclick);\n      }\n    };\n\n    scope.signals.on('add-document', onDocIE8);\n    scope.signals.on('remove-document', onDocIE8);\n  })();\n}\n\nmodule.exports = null;\n\n},{\"./scope\":23,\"./utils/browser\":26,\"./utils/events\":29,\"./utils/interactionFinder\":34}],19:[function(require,module,exports){\nvar InteractEvent = require('../InteractEvent');\nvar Interaction = require('../Interaction');\nvar extend = require('../utils/extend');\n\nvar modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    var target = interaction.target;\n    var element = interaction.element;\n\n    var rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top = coords.page.y - rect.top;\n\n      interaction.startOffset.right = rect.right - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width' in rect)) {\n        rect.width = rect.right - rect.left;\n      }\n      if (!('height' in rect)) {\n        rect.height = rect.bottom - rect.top;\n      }\n    } else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (var i = 0; i < modifiers.names.length; i++) {\n      var modifierName = modifiers.names[i];\n\n      offsets[modifierName] = modifiers[modifiers.names[i]].setOffset(interaction, interactable, element, rect, interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    var result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true\n    };\n    var target = interaction.target;\n    var coords = extend({}, coordsArg);\n\n    var currentStatus = undefined;\n\n    for (var _iterator = modifiers.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var modifierName = _ref;\n\n      var modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) {\n        continue;\n      }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (var _iterator2 = modifiers.names, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var modifierName = _ref2;\n\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function (_ref3, signalName) {\n    var interaction = _ref3.interaction;\n\n    modifiers.setOffsets(interaction, signalName === 'resume' ? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  }\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('start', modifiers.start);\nInteraction.signals.on('resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var preEnd = _ref4.preEnd;\n  var interactingBeforeMove = _ref4.interactingBeforeMove;\n\n  var modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n  var event = _ref5.event;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    // if the endOnly option is true for any modifier\n    if (modifiers[modifiers.names[i]].shouldDo(interaction.target, interaction.prepared.name, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event: event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function (_ref6) {\n  var iEvent = _ref6.iEvent;\n  var interaction = _ref6.interaction;\n  var page = _ref6.page;\n  var client = _ref6.client;\n  var phase = _ref6.phase;\n  var actionName = _ref6.action;\n\n  var target = interaction.target;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    var modifierName = modifiers.names[i];\n    var modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nmodule.exports = modifiers;\n\n},{\"../InteractEvent\":2,\"../Interaction\":4,\"../utils/extend\":30}],20:[function(require,module,exports){\nvar modifiers = require('./index');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar restrict = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    restriction: null,\n    elementRect: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var restrictOptions = interactable.options[actionName].restrict;\n\n    return restrictOptions && restrictOptions.enabled && (preEnd || !restrictOptions.endOnly) && (!requireEndOnly || restrictOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    var offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - rect.width * elementRect.left;\n      offset.top = startOffset.top - rect.height * elementRect.top;\n\n      offset.right = startOffset.right - rect.width * (1 - elementRect.right);\n      offset.bottom = startOffset.bottom - rect.height * (1 - elementRect.bottom);\n    } else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var target = interaction.target;\n    var restrictOptions = target && target.options[interaction.prepared.name].restrict;\n    var restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    var page = status.useStatusXY ? { x: status.x, y: status.y } : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    var rect = undefined;\n    var restrictedX = undefined;\n    var restrictedY = undefined;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentElement(interaction.element);\n      } else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      } else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) {\n        return status;\n      }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    var offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n        restrictedX = Math.max(Math.min(rect.x + rect.width - offset.right, page.x), rect.x + offset.left);\n        restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top);\n      } else {\n        restrictedX = Math.max(Math.min(rect.right - offset.right, page.x), rect.left + offset.left);\n        restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top + offset.top);\n      }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var options = interactable.options[actionName].restrict;\n    var elementRect = options && options.elementRect;\n\n    if (options && options.enabled && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy\n        };\n      }\n    }\n  }\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n\n},{\"../defaultOptions\":14,\"../utils\":33,\"./index\":19}],21:[function(require,module,exports){\nvar modifiers = require('./index');\nvar interact = require('../interact');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range: Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var snapOptions = interactable.options[actionName].snap;\n\n    return snapOptions && snapOptions.enabled && (preEnd || !snapOptions.endOnly) && (!requireEndOnly || snapOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var offsets = [];\n    var origin = utils.getOriginXY(interactable, element);\n    var snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    var snapOffset = undefined;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y\n      };\n    } else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y\n      };\n    } else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (var _iterator = snapOptions.relativePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var relativeX = _ref.x;\n        var relativeY = _ref.y;\n\n        offsets.push({\n          x: startOffset.left - rect.width * relativeX + snapOffset.x,\n          y: startOffset.top - rect.height * relativeY + snapOffset.y\n        });\n      }\n    } else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    var targets = [];\n    var target = undefined;\n    var page = undefined;\n    var i = undefined;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    } else {\n      var origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    var offsets = interaction.modifierOffsets.snap;\n    var len = snapOptions.targets ? snapOptions.targets.length : 0;\n\n    for (var _iterator2 = offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var offsetX = _ref2.x;\n      var offsetY = _ref2.y;\n\n      var relativeX = page.x - offsetX;\n      var relativeY = page.y - offsetY;\n\n      for (var _iterator3 = snapOptions.targets, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var snapTarget = _ref3;\n\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        } else {\n          target = snapTarget;\n        }\n\n        if (!target) {\n          continue;\n        }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? target.x + offsetX : relativeX,\n          y: utils.isNumber(target.y) ? target.y + offsetY : relativeY,\n\n          range: utils.isNumber(target.range) ? target.range : snapOptions.range\n        });\n      }\n    }\n\n    var closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      var range = target.range;\n      var dx = target.x - page.x;\n      var dy = target.y - page.y;\n      var distance = utils.hypot(dx, dy);\n      var inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n      // is the closest target in range?\n      ? closest.inRange && range !== Infinity\n      // the pointer is relatively deeper in this target\n      ? distance / range < closest.distance / closest.range\n      // this target has Infinite range and the closest doesn't\n      : range === Infinity && closest.range !== Infinity ||\n      // OR this target is closer that the previous closest\n      distance < closest.distance :\n      // The other is not in range and the pointer is closer to this target\n      !closest.inRange && distance < closest.distance)) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    var snapChanged = undefined;\n\n    if (closest.target) {\n      snapChanged = status.snappedX !== closest.target.x || status.snappedY !== closest.target.y;\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    } else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = snapChanged || closest.inRange && !status.locked;\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var snapOptions = interactable.options[actionName].snap;\n    var relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range: status.range,\n        locked: status.locked,\n        x: status.snappedX,\n        y: status.snappedY,\n        realX: status.realX,\n        realY: status.realY,\n        dx: status.dx,\n        dy: status.dy\n      };\n    }\n  }\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    var limits = grid.limits || {\n      left: -Infinity,\n      right: Infinity,\n      top: -Infinity,\n      bottom: Infinity\n    };\n    var offsetX = 0;\n    var offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    var gridx = Math.round((x - offsetX) / grid.x);\n    var gridy = Math.round((y - offsetY) / grid.y);\n\n    var newX = Math.max(limits.left, Math.min(limits.right, gridx * grid.x + offsetX));\n    var newY = Math.max(limits.top, Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n\n},{\"../defaultOptions\":14,\"../interact\":17,\"../utils\":33,\"./index\":19}],22:[function(require,module,exports){\nvar scope = require('./scope');\nvar InteractEvent = require('./InteractEvent');\nvar Interaction = require('./Interaction');\nvar utils = require('./utils');\nvar browser = require('./utils/browser');\n\nvar simpleSignals = ['down', 'up', 'up', 'cancel'];\nvar simpleEvents = ['down', 'up', 'tap', 'cancel'];\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction firePointers(interaction, pointer, event, eventTarget, targets, elements, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  var pointerEvent = {};\n  var i = undefined;\n  // for tap events\n  var interval = undefined;\n  var createNewDoubleTap = undefined;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  } else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault = preventOriginalDefault;\n    pointerEvent.stopPropagation = InteractEvent.prototype.stopPropagation;\n    pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n    pointerEvent.interaction = interaction;\n\n    pointerEvent.timeStamp = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type = eventType;\n    pointerEvent.pointerId = utils.getPointerId(pointer);\n    pointerEvent.pointerType = interaction.mouse ? 'mouse' : !browser.supportsPointerEvent ? 'touch' : utils.isString(pointer.pointerType) ? pointer.pointerType : [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap' && interaction.prevTap.target === pointerEvent.target && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  for (i = 0; i < targets.length; i++) {\n    pointerEvent.currentTarget = elements[i];\n    pointerEvent.interactable = targets[i];\n    targets[i].fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped || pointerEvent.propagationStopped && elements[i + 1] !== pointerEvent.currentTarget) {\n      break;\n    }\n  }\n\n  if (createNewDoubleTap) {\n    var doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  } else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets(interaction, pointer, event, eventTarget, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n  // or if the pointerup target is different to the pointerdown target\n   || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  var targets = [];\n  var elements = [];\n  var element = eventTarget;\n\n  function collectSelectors(interactable, selector, context) {\n    var els = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    if (interactable._iEvents[eventType] && utils.isElement(element) && scope.inContext(interactable, element) && !scope.testIgnore(interactable, element, eventTarget) && scope.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, els)) {\n\n      targets.push(interactable);\n      elements.push(element);\n    }\n  }\n\n  var interact = scope.interact;\n\n  while (element) {\n    if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n      targets.push(interact(element));\n      elements.push(element);\n    }\n\n    scope.interactables.forEachSelector(collectSelectors);\n\n    element = utils.parentElement(element);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, elements, eventType);\n  }\n}\n\nInteraction.signals.on('move', function (_ref) {\n  var interaction = _ref.interaction;\n  var pointer = _ref.pointer;\n  var event = _ref.event;\n  var eventTarget = _ref.eventTarget;\n  var duplicateMove = _ref.duplicateMove;\n\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n  var pointerIndex = _ref2.pointerIndex;\n\n  // copy event to be used in timeout for IE8\n  var eventCopy = browser.isIE8 ? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction, browser.isIE8 ? eventCopy : pointer, eventCopy, eventTarget, 'hold');\n  }, scope.defaultOptions._holdDuration);\n});\n\nfunction createSignalListener(event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction, arg.pointer, arg.event, arg.eventTarget, event);\n  };\n}\n\nfor (var i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null; // the most recent tap event on this interaction\n  interaction.tapTime = 0; // time of the most recent tap event\n});\n\nutils.merge(scope.eventTypes, ['down', 'move', 'up', 'cancel', 'tap', 'doubletap', 'hold']);\n\nmodule.exports = scope.pointerEvents = {\n  firePointers: firePointers,\n  collectEventTargets: collectEventTargets,\n  preventOriginalDefault: preventOriginalDefault\n};\n\n},{\"./InteractEvent\":2,\"./Interaction\":4,\"./scope\":23,\"./utils\":33,\"./utils/browser\":26}],23:[function(require,module,exports){\nvar scope = {};\nvar utils = require('./utils');\nvar events = require('./utils/events');\nvar signals = require('./utils/Signals')['new']();\n\nscope.defaultOptions = require('./defaultOptions');\nscope.signals = signals;\nscope.events = events;\n\nutils.extend(scope, require('./utils/window'));\nutils.extend(scope, require('./utils/domObjects'));\n\nscope.documents = []; // all documents being listened to\nscope.eventTypes = []; // all event types specific to interact.js\n\nscope.withinInteractionLimit = function (interactable, element, action) {\n  var options = interactable.options;\n  var maxActions = options[action.name].max;\n  var maxPerElement = options[action.name].maxPerElement;\n  var activeInteractions = 0;\n  var targetCount = 0;\n  var targetElementCount = 0;\n\n  for (var i = 0, len = scope.interactions.length; i < len; i++) {\n    var interaction = scope.interactions[i];\n    var otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) {\n      continue;\n    }\n\n    activeInteractions++;\n\n    if (activeInteractions >= scope.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) {\n      continue;\n    }\n\n    targetCount += otherAction === action.name | 0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return scope.maxInteractions > 0;\n};\n\nscope.endAllInteractions = function (event) {\n  for (var i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].end(event);\n  }\n};\n\nscope.prefixedPropREs = utils.prefixedPropREs;\n\nscope.addDocument = function (doc, win) {\n  // do nothing if document is already known\n  if (utils.contains(scope.documents, doc)) {\n    return false;\n  }\n\n  win = win || scope.getWindow(doc);\n\n  scope.documents.push(doc);\n  events.documents.push(doc);\n\n  // don't add an unload event for the main document\n  // so that the page may be cached in browser history\n  if (doc !== scope.document) {\n    events.add(win, 'unload', scope.onWindowUnload);\n  }\n\n  signals.fire('add-document', { doc: doc, win: win });\n};\n\nscope.removeDocument = function (doc, win) {\n  var index = utils.indexOf(scope.documents, doc);\n\n  if (index === -1) {\n    return false;\n  }\n\n  win = win || scope.getWindow(doc);\n\n  events.remove(win, 'unload', scope.onWindowUnload);\n\n  scope.documents.splice(index, 1);\n  events.documents.splice(index, 1);\n\n  signals.fire('remove-document', { win: win, doc: doc });\n};\n\nscope.onWindowUnload = function () {\n  scope.removeDocument(this.document, this);\n};\n\nmodule.exports = scope;\n\n},{\"./defaultOptions\":14,\"./utils\":33,\"./utils/Signals\":24,\"./utils/domObjects\":27,\"./utils/events\":29,\"./utils/window\":39}],24:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./arr');\n\nvar indexOf = _require.indexOf;\n\nvar Signals = (function () {\n  function Signals() {\n    _classCallCheck(this, Signals);\n\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  Signals.prototype.on = function on(name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  };\n\n  Signals.prototype.off = function off(name, listener) {\n    if (!this.listeners[name]) {\n      return;\n    }\n\n    var index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  };\n\n  Signals.prototype.fire = function fire(name, arg) {\n    var targetListeners = this.listeners[name];\n\n    if (!targetListeners) {\n      return;\n    }\n\n    for (var i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  };\n\n  return Signals;\n})();\n\nSignals['new'] = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n\n},{\"./arr\":25}],25:[function(require,module,exports){\nfunction indexOf(array, target) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains(array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge(target, source) {\n  for (var i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf: indexOf,\n  contains: contains,\n  merge: merge\n};\n\n},{}],26:[function(require,module,exports){\nvar win = require('./window');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar browser = {\n    // Does the browser support touch input?\n    supportsTouch: !!('ontouchstart' in win.window || isType.isFunction(win.window.DocumentTouch) && domObjects.document instanceof win.DocumentTouch),\n\n    // Does the browser support PointerEvents\n    supportsPointerEvent: !!domObjects.PointerEvent,\n\n    isIE8: 'attachEvent' in win.window && !('addEventListener' in win.window),\n\n    // Opera Mobile must be handled differently\n    isOperaMobile: navigator.appName === 'Opera' && browser.supportsTouch && navigator.userAgent.match('Presto'),\n\n    // scrolling doesn't change the result of getClientRects on iOS 7\n    isIOS7: /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion),\n\n    isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n    // prefix matchesSelector\n    prefixedMatchesSelector: 'matches' in Element.prototype ? 'matches' : 'webkitMatchesSelector' in Element.prototype ? 'webkitMatchesSelector' : 'mozMatchesSelector' in Element.prototype ? 'mozMatchesSelector' : 'oMatchesSelector' in Element.prototype ? 'oMatchesSelector' : 'msMatchesSelector',\n\n    useMatchesSelectorPolyfill: false,\n\n    pEventTypes: domObjects.PointerEvent ? domObjects.PointerEvent === win.window.MSPointerEvent ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n        out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' } : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n        out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' } : null\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n\n},{\"./domObjects\":27,\"./isType\":35,\"./window\":39}],27:[function(require,module,exports){\nvar domObjects = {};\nvar win = require('./window').window;\n\nfunction blank() {}\n\ndomObjects.document = win.document;\ndomObjects.DocumentFragment = win.DocumentFragment || blank;\ndomObjects.SVGElement = win.SVGElement || blank;\ndomObjects.SVGSVGElement = win.SVGSVGElement || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement = win.HTMLElement || win.Element;\n\ndomObjects.Event = win.Event;\ndomObjects.Touch = win.Touch || blank;\ndomObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent;\n\nmodule.exports = domObjects;\n\n},{\"./window\":39}],28:[function(require,module,exports){\nvar win = require('./window');\nvar browser = require('./browser');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (child, selector) {\n    var parent = domUtils.parentElement(child);\n\n    while (isType.isElement(parent)) {\n      if (domUtils.matchesSelector(parent, selector)) {\n        return parent;\n      }\n\n      parent = domUtils.parentElement(parent);\n    }\n\n    return null;\n  },\n\n  parentElement: function (node) {\n    var parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill ? function (element, selector, elems) {\n    elems = elems || element.parentNode.querySelectorAll(selector);\n\n    for (var i = 0, len = elems.length; i < len; i++) {\n      if (elems[i] === element) {\n        return true;\n      }\n    }\n\n    return false;\n  } : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    var deepestZoneParents = [];\n    var dropzoneParents = [];\n    var dropzone = undefined;\n    var deepestZone = elements[0];\n    var index = deepestZone ? 0 : -1;\n    var parent = undefined;\n    var child = undefined;\n    var i = undefined;\n    var n = undefined;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n          deepestZone = dropzone;\n          index = i;\n          continue;\n        }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement && dropzone instanceof domObjects.SVGElement && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      } else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      var parents = [dropzoneParents[n - 1], dropzoneParents[n], deepestZoneParents[n]];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        } else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentElement(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return element instanceof domObjects.SVGElementInstance ? element.correspondingUseElement : element;\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop\n    };\n  },\n\n  getElementClientRect: function (element) {\n    var clientRect = element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0];\n\n    return clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top\n    };\n  },\n\n  getElementRect: function (element) {\n    var clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      var _scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left += _scroll.x;\n      clientRect.right += _scroll.x;\n      clientRect.top += _scroll.y;\n      clientRect.bottom += _scroll.y;\n    }\n\n    return clientRect;\n  }\n};\n\nmodule.exports = domUtils;\n\n},{\"./browser\":26,\"./domObjects\":27,\"./isType\":35,\"./window\":39}],29:[function(require,module,exports){\nvar arr = require('./arr');\nvar isType = require('./isType');\nvar domUtils = require('./domUtils');\nvar indexOf = arr.indexOf;\nvar contains = arr.contains;\nvar getWindow = require('./window').getWindow;\n\nvar useAttachEvent = 'attachEvent' in window && !('addEventListener' in window);\nvar addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener';\nvar removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener';\nvar on = useAttachEvent ? 'on' : '';\n\nvar elements = [];\nvar targets = [];\nvar attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nvar delegatedEvents = {};\n\nvar documents = [];\n\nfunction add(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push(useAttachEvent ? {\n      supplied: [],\n      wrapped: [],\n      useCount: []\n    } : null);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    var ret = undefined;\n\n    if (useAttachEvent) {\n      var _attachedListeners$elementIndex = attachedListeners[elementIndex];\n      var supplied = _attachedListeners$elementIndex.supplied;\n      var wrapped = _attachedListeners$elementIndex.wrapped;\n      var useCount = _attachedListeners$elementIndex.useCount;\n\n      var listenerIndex = indexOf(supplied, listener);\n\n      var wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault = event.preventDefault || preventDef;\n          event.stopPropagation = event.stopPropagation || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      } else {\n        useCount[listenerIndex]++;\n      }\n    } else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  var wrappedListener = listener;\n  var listeners = undefined;\n  var listenerIndex = undefined;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    var len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (var i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    } else {\n      for (var i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate(selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts: [],\n      listeners: []\n    };\n\n    // add delegate listener functions\n    for (var i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  var delegated = delegatedEvents[type];\n  var index = undefined;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts.push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate(selector, context, type, listener, useCapture) {\n  var delegated = delegatedEvents[type];\n  var matchFound = false;\n  var index = undefined;\n\n  if (!delegated) {\n    return;\n  }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n\n      var listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (var i = listeners.length - 1; i >= 0; i--) {\n        var fn = listeners[i][0];\n        var useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts.splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) {\n        break;\n      }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener(event, useCapture) {\n  var fakeEvent = {};\n  var delegated = delegatedEvents[event.type];\n  var eventTarget = domUtils.getActualElement(event.path ? event.path[0] : event.target);\n  var element = eventTarget;\n\n  useCapture = useCapture ? true : false;\n\n  // duplicate the event so that currentTarget can be changed\n  for (var prop in event) {\n    fakeEvent[prop] = event[prop];\n  }\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (var i = 0; i < delegated.selectors.length; i++) {\n      var selector = delegated.selectors[i];\n      var context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector) && domUtils.nodeContains(context, eventTarget) && domUtils.nodeContains(context, element)) {\n\n        var listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (var j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentElement(element);\n  }\n}\n\nfunction delegateUseCapture(event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef() {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp() {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp() {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove,\n\n  addDelegate: addDelegate,\n  removeDelegate: removeDelegate,\n\n  delegateListener: delegateListener,\n  delegateUseCapture: delegateUseCapture,\n  delegatedEvents: delegatedEvents,\n  documents: documents,\n\n  useAttachEvent: useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners\n};\n\n},{\"./arr\":25,\"./domUtils\":28,\"./isType\":35,\"./window\":39}],30:[function(require,module,exports){\nmodule.exports = function extend(dest, source) {\n  for (var prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n\n},{}],31:[function(require,module,exports){\nvar _require = require('./domUtils');\n\nvar closest = _require.closest;\nvar parentElement = _require.parentElement;\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./isType');\n\nvar isElement = _require2.isElement;\nvar isFunction = _require2.isFunction;\nvar trySelector = _require2.trySelector;\n\nmodule.exports = function (interactable, element) {\n  var origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentElement(element);\n  } else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  } else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin)) {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = 'x' in origin ? origin.x : origin.left;\n  origin.y = 'y' in origin ? origin.y : origin.top;\n\n  return origin;\n};\n\n},{\"./domUtils\":28,\"./isType\":35}],32:[function(require,module,exports){\nmodule.exports = function (x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n\n},{}],33:[function(require,module,exports){\nvar utils = module.exports;\nvar extend = require('./extend');\nvar win = require('./window');\n\nutils.blank = function () {};\n\nutils.warnOnce = function (method, message) {\n  var warned = false;\n\n  return function () {\n    if (!warned) {\n      win.window.console.warn(message);\n      warned = true;\n    }\n\n    return method.apply(this, arguments);\n  };\n};\n\n// http://stackoverflow.com/a/5634528/2280888\nutils._getQBezierValue = function (t, p1, p2, p3) {\n  var iT = 1 - t;\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n};\n\nutils.getQuadraticCurvePoint = function (startX, startY, cpX, cpY, endX, endY, position) {\n  return {\n    x: utils._getQBezierValue(position, startX, cpX, endX),\n    y: utils._getQBezierValue(position, startY, cpY, endY)\n  };\n};\n\n// http://gizma.com/easing/\nutils.easeOutQuad = function (t, b, c, d) {\n  t /= d;\n  return -c * t * (t - 2) + b;\n};\n\nutils.copyAction = function (dest, src) {\n  dest.name = src.name;\n  dest.axis = src.axis;\n  dest.edges = src.edges;\n\n  return dest;\n};\n\nutils.extend = extend;\nutils.hypot = require('./hypot');\nutils.raf = require('./raf');\nutils.browser = require('./browser');\nutils.getOriginXY = require('./getOriginXY');\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\n},{\"./arr\":25,\"./browser\":26,\"./domUtils\":28,\"./extend\":30,\"./getOriginXY\":31,\"./hypot\":32,\"./isType\":35,\"./pointerUtils\":37,\"./raf\":38,\"./window\":39}],34:[function(require,module,exports){\nvar scope = require('../scope');\nvar utils = require('./index');\nvar browser = require('./browser');\n\nvar finder = {\n  methodOrder: ['simulationResume', 'mouse', 'hasPointer', 'idle'],\n\n  search: function (pointer, eventType, eventTarget) {\n    var mouseEvent = /mouse/i.test(pointer.pointerType || eventType)\n    // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n     || pointer.pointerType === 4;\n    var pointerId = utils.getPointerId(pointer);\n    var details = { pointer: pointer, pointerId: pointerId, mouseEvent: mouseEvent, eventType: eventType, eventTarget: eventTarget };\n\n    for (var _iterator = finder.methodOrder, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var method = _ref;\n\n      var interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function (_ref7) {\n    var mouseEvent = _ref7.mouseEvent;\n    var eventType = _ref7.eventType;\n    var eventTarget = _ref7.eventTarget;\n\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (var _iterator2 = scope.interactions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      var element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume && interaction.mouse === mouseEvent) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentElement(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function (_ref8) {\n    var mouseEvent = _ref8.mouseEvent;\n    var eventType = _ref8.eventType;\n\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    var firstNonActive = undefined;\n\n    for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (/down/i.test(eventType) && interaction.simulation) {\n          continue;\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n            firstNonActive = interaction;\n          }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (var _iterator4 = scope.interactions, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var interaction = _ref4;\n\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function (_ref9) {\n    var pointerId = _ref9.pointerId;\n\n    for (var _iterator5 = scope.interactions, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var interaction = _ref5;\n\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function (_ref10) {\n    var mouseEvent = _ref10.mouseEvent;\n\n    for (var _iterator6 = scope.interactions, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var interaction = _ref6;\n\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        var target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n          continue;\n        }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  }\n};\n\nmodule.exports = finder;\n\n},{\"../scope\":23,\"./browser\":26,\"./index\":33}],35:[function(require,module,exports){\nvar win = require('./window');\nvar isWindow = require('./isWindow');\nvar domObjects = require('./domObjects');\n\nvar isType = {\n  isElement: function (o) {\n    if (!o || typeof o !== 'object') {\n      return false;\n    }\n\n    var _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element) ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  },\n\n  isArray: null,\n\n  isWindow: function (thing) {\n    return thing === win.window || isWindow(thing);\n  },\n\n  isDocFrag: function (thing) {\n    return isType.isObject(thing) && thing.nodeType === 11;\n  },\n\n  isObject: function (thing) {\n    return !!thing && typeof thing === 'object';\n  },\n\n  isFunction: function (thing) {\n    return typeof thing === 'function';\n  },\n\n  isNumber: function (thing) {\n    return typeof thing === 'number';\n  },\n\n  isBool: function (thing) {\n    return typeof thing === 'boolean';\n  },\n\n  isString: function (thing) {\n    return typeof thing === 'string';\n  },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) {\n      return false;\n    }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  }\n};\n\nisType.isArray = function (thing) {\n  return isType.isObject(thing) && typeof thing.length !== 'undefined' && isType.isFunction(thing.splice);\n};\n\nmodule.exports = isType;\n\n},{\"./domObjects\":27,\"./isWindow\":36,\"./window\":39}],36:[function(require,module,exports){\nmodule.exports = function (thing) {\n  return !!(thing && thing.Window) && thing instanceof thing.Window;\n};\n\n},{}],37:[function(require,module,exports){\nvar hypot = require('./hypot');\nvar browser = require('./browser');\nvar dom = require('./domObjects');\nvar isType = require('./isType');\n\nvar pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x = cur.page.x - prev.page.x;\n    targetObj.page.y = cur.page.y - prev.page.y;\n    targetObj.client.x = cur.client.x - prev.client.x;\n    targetObj.client.y = cur.client.y - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx = targetObj.page.x / dt;\n    targetObj.page.vy = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx = targetObj.client.x / dt;\n    targetObj.client.vy = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function (pointer) {\n    return pointer instanceof dom.Event || pointer instanceof dom.Touch;\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    } else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    } else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    var pointer = pointers.length > 1 ? pointerUtils.pointerAverage(pointers) : pointers[0];\n\n    var tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp : new Date().getTime();\n  },\n\n  prefixedPropREs: {\n    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n  },\n\n  pointerExtend: function (dest, source) {\n    for (var prop in source) {\n      var prefixedPropREs = pointerUtils.prefixedPropREs;\n      var deprecated = false;\n\n      // skip deprecated prefixed properties\n      for (var vendor in prefixedPropREs) {\n        if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n          deprecated = true;\n          break;\n        }\n      }\n\n      if (!deprecated) {\n        dest[prop] = source[prop];\n      }\n    }\n    return dest;\n  },\n\n  getTouchPair: function (event) {\n    var touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n        if (event.type === 'touchend') {\n          if (event.touches.length === 1) {\n            touches[0] = event.touches[0];\n            touches[1] = event.changedTouches[0];\n          } else if (event.touches.length === 0) {\n            touches[0] = event.changedTouches[0];\n            touches[1] = event.changedTouches[1];\n          }\n        } else {\n          touches[0] = event.touches[0];\n          touches[1] = event.touches[1];\n        }\n      }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    var average = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    };\n\n    for (var _iterator = pointers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref;\n\n      for (var prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (var prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    var touches = pointerUtils.getTouchPair(event);\n    var minX = Math.min(touches[0].pageX, touches[1].pageX);\n    var minY = Math.min(touches[0].pageY, touches[1].pageY);\n    var maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    var maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n\n    var dx = touches[0][sourceX] - touches[1][sourceX];\n    var dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n    var dx = touches[1][sourceX] - touches[0][sourceX];\n    var dy = touches[1][sourceY] - touches[0][sourceY];\n    var angle = 180 * Math.atan2(dy, dx) / Math.PI;\n\n    return angle;\n  }\n};\n\nmodule.exports = pointerUtils;\n\n},{\"./browser\":26,\"./domObjects\":27,\"./hypot\":32,\"./isType\":35}],38:[function(require,module,exports){\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nvar lastTime = 0;\nvar request = undefined;\nvar cancel = undefined;\n\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = setTimeout(function () {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request: request,\n  cancel: cancel\n};\n\n},{}],39:[function(require,module,exports){\nvar win = module.exports;\nvar isWindow = require('./isWindow');\n\nfunction init(window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  var el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window = undefined;\n  win.realWindow = undefined;\n} else {\n  init(window);\n}\n\nwin.getWindow = function getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var rootNode = node.ownerDocument || node;\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n\n},{\"./isWindow\":36}]},{},[1])(1)\n});\n\n","const extend      = require('./utils/extend');\nconst getOriginXY = require('./utils/getOriginXY');\nconst scope       = require('./scope');\nconst signals     = require('./utils/Signals').new();\n\nclass InteractEvent {\n  constructor (interaction, event, action, phase, element, related) {\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || scope.defaultOptions).deltaSource;\n    const origin      = getOriginXY(target, element);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const coords      = starting? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    const page   = extend({}, coords.page);\n    const client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.t0            = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type          = action + (phase || '');\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    const signalArg = {\n      interaction,\n      event,\n      action,\n      phase,\n      element,\n      related,\n      page,\n      client,\n      coords,\n      starting,\n      ending,\n      deltaSource,\n      iEvent: this,\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      const prevEvent = interaction.prevEvent;\n\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    }\n    else {\n      this.pageX     = page.x;\n      this.pageY     = page.y;\n      this.clientX   = client.x;\n      this.clientY   = client.y;\n    }\n\n    this.x0        = interaction.startCoords.page.x - origin.x;\n    this.y0        = interaction.startCoords.page.y - origin.y;\n    this.clientX0  = interaction.startCoords.client.x - origin.x;\n    this.clientY0  = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n    signals.fire(action, signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt        = interaction.pointerDelta.timeStamp;\n    this.duration  = this.timeStamp - interaction.downTimes[0];\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = (ending || phase === 'inertiastart')? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  getSwipe () {\n    const interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600\n        || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    const overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap;\n    const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    };\n  }\n\n  preventDefault () {}\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nsignals.on('set-delta', function ({ iEvent, interaction, ending, starting, deltaSource }) {\n  if (starting) {\n    iEvent.dx = 0;\n    iEvent.dy = 0;\n  }\n  // end event dx, dy is difference between start and end points\n  else if (ending) {\n    if (deltaSource === 'client') {\n      iEvent.dx = iEvent.clientX - interaction.startCoords.client.x;\n      iEvent.dy = iEvent.clientY - interaction.startCoords.client.y;\n    }\n    else {\n      iEvent.dx = iEvent.pageX - interaction.startCoords.page.x;\n      iEvent.dy = iEvent.pageY - interaction.startCoords.page.y;\n    }\n  }\n  else {\n    if (deltaSource === 'client') {\n      iEvent.dx = iEvent.clientX - interaction.prevEvent.clientX;\n      iEvent.dy = iEvent.clientY - interaction.prevEvent.clientY;\n    }\n    else {\n      iEvent.dx = iEvent.pageX - interaction.prevEvent.pageX;\n      iEvent.dy = iEvent.pageY - interaction.prevEvent.pageY;\n    }\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n","const isType  = require('./utils/isType');\nconst events  = require('./utils/events');\nconst extend  = require('./utils/extend');\nconst actions = require('./actions');\nconst scope   = require('./scope');\nconst signals = require('./utils/Signals').new();\n\nconst { getElementRect }    = require('./utils/domUtils');\nconst { indexOf, contains } = require('./utils/arr');\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\nclass Interactable {\n  constructor (target, options) {\n    this.target   = target;\n    this._context = scope.document;\n    this._iEvents = this._iEvents || {};\n\n    let _window;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      const context = options && options.context;\n\n      _window = context? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node\n        ? context instanceof _window.Node\n        : (isType.isElement(context) || context === _window.document))) {\n\n        this._context = context;\n      }\n    }\n    else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target,\n      options,\n      interactable: this,\n      win: _window,\n    });\n\n    scope.addDocument( this._doc, _window );\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  setOnEvents (action, phases) {\n    const onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)       ) { this[onAction + 'start'        ] = phases.onstart         ; }\n    if (isType.isFunction(phases.onmove)        ) { this[onAction + 'move'         ] = phases.onmove          ; }\n    if (isType.isFunction(phases.onend)         ) { this[onAction + 'end'          ] = phases.onend           ; }\n    if (isType.isFunction(phases.oninertiastart)) { this[onAction + 'inertiastart' ] = phases.oninertiastart  ; }\n\n    return this;\n  }\n\n  setPerAction (action, options) {\n    // for all the default per-action options\n    for (const option in options) {\n      // if this option exists for this action\n      if (option in scope.defaultOptions[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(scope.defaultOptions.perAction[option]) && 'enabled' in scope.defaultOptions.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false? false : true;\n          }\n        }\n        else if (isType.isBool(options[option]) && isType.isObject(scope.defaultOptions.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        }\n        else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  }\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n  getRect (element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !(isType.isElement(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n  rectChecker (checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  /*\\\n   * Interactable.preventDefault\n   [ method ]\n   *\n   * Returns or sets whether to prevent the browser's default behaviour\n   * in response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   - newValue (string) #optional `true`, `false` or `'auto'`\n   = (string | Interactable) The current setting or this Interactable\n  \\*/\n  preventDefault (newValue) {\n    if (/^(always|never|auto)$/.test(newValue)) {\n      this.options.preventDefault = newValue;\n      return this;\n    }\n\n    if (isType.isBool(newValue)) {\n      this.options.preventDefault = newValue? 'always' : 'never';\n      return this;\n    }\n\n    return this.options.preventDefault;\n  }\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n  origin (newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n    else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  }\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n  context () {\n    return this._context;\n  }\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n  fire (iEvent) {\n    if (!(iEvent && iEvent.type) || !contains(scope.eventTypes, iEvent.type)) {\n      return this;\n    }\n\n    let listeners;\n    const onEvent = 'on' + iEvent.type;\n\n    // Interactable#on() listeners\n    if (iEvent.type in this._iEvents) {\n      listeners = this._iEvents[iEvent.type];\n\n      for (let i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    // interactable.onevent listener\n    if (isType.isFunction(this[onEvent])) {\n      this[onEvent](iEvent);\n    }\n\n    // interact.on() listeners\n    if (iEvent.type in scope.globalEvents && (listeners = scope.globalEvents[iEvent.type]))  {\n\n      for (let i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n  on (eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this.on(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this.on(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // convert to boolean\n    useCapture = useCapture? true: false;\n\n    if (contains(scope.eventTypes, eventType)) {\n      // if this type of event was never bound to this Interactable\n      if (!(eventType in this._iEvents)) {\n        this._iEvents[eventType] = [listener];\n      }\n      else {\n        this._iEvents[eventType].push(listener);\n      }\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n      events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    else {\n      events.add(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n  off (eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this.off(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this.off(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n\n    // convert to boolean\n    useCapture = useCapture? true: false;\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(scope.eventTypes, eventType)) {\n      const eventList = this._iEvents[eventType];\n      const index     = eventList? indexOf(eventList, listener) : -1;\n\n      if (index !== -1) {\n        this._iEvents[eventType].splice(index, 1);\n      }\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n      events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    // remove listener from this Interatable's element\n    else {\n      events.remove(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n  set (options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, scope.defaultOptions.base);\n\n    const perActions = extend({}, scope.defaultOptions.perAction);\n\n    for (const actionName in actions.methodDict) {\n      const methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, scope.defaultOptions[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (const setting of Interactable.settingsMethods) {\n      this.options[setting] = scope.defaultOptions.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        for (let i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target\n              && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts .splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    }\n    else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    return scope.interact;\n  }\n}\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = [ 'deltaSource', 'origin', 'preventDefault', 'rectChecker' ];\n\nmodule.exports = Interactable;\n","const scope          = require('./scope');\nconst utils          = require('./utils');\nconst Interactable   = require('./Interactable');\nconst events         = require('./utils/events');\nconst browser        = require('./utils/browser');\nconst finder         = require('./utils/interactionFinder');\nconst signals        = require('./utils/Signals').new();\n\nconst listeners   = {};\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer',\n];\n\n// for ignoring browser's simulated mouse events\nlet prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nclass Interaction {\n  constructor () {\n    this.target        = null; // current interactable being interacted with\n    this.element       = null; // the target element of the interactable\n\n    this.prepared      = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    // keep track of added pointers\n    this.pointers    = [];\n    this.pointerIds  = [];\n    this.downTargets = [];\n    this.downTimes   = [];\n    this.holdTimers  = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0,\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget    = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null;      // previous action event\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords , this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n    }\n\n    signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n\n    if (!this.interacting()) {\n      this.pointerIsDown = true;\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = new Date().getTime();\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n      utils.copyCoords(this.prevCoords, this.curCoords);\n    }\n\n    this.checkAndPreventDefault(event);\n  }\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action       (object)  The action to be performed - drag, resize, etc.\n   - interactable (Interactable) The Interactable to target\n   - element      (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n  start (action, interactable, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    // set the startCoords if there was no prepared action\n    if (!this.prepared.name) {\n      utils.setCoords(this.startCoords, this.pointers);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target         = interactable;\n    this.element        = element;\n\n    signals.fire('start', { interaction: this });\n\n    signals.fire('start-' + this.prepared.name, {\n      interaction: this,\n      event: this.downEvent,\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    const duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n                           && this.curCoords.page.y === this.prevCoords.page.y\n                           && this.curCoords.client.x === this.prevCoords.client.x\n                           && this.curCoords.client.y === this.prevCoords.client.y);\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > scope.pointerMoveTolerance;\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n      const signalArg = {\n        pointer,\n        event,\n        eventTarget,\n        dx,\n        dy,\n        duplicate: duplicateMove,\n        interaction: this,\n        interactingBeforeMove: this.interacting(),\n      };\n\n      signals.fire('move', signalArg);\n\n      // if interacting, fire a 'move-{action}' signal\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n\n      signals.fire('move-done', signalArg);\n    }\n\n    this.checkAndPreventDefault(event);\n  }\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n  doMove (signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this,\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('move-' + this.prepared.name, signalArg);\n    }\n\n    this._dontFireMove = false;\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    this.checkAndPreventDefault(event);\n\n    const pointerIndex = this.mouse? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire(/cancel$/i.test(event.type)? 'cancel' : 'up', {\n      pointer,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n      this.removePointer(pointer);\n    }\n  }\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n  end (event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.stop();\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  stop () {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  }\n\n  updatePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    let index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  }\n\n  removePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    const index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) { return; }\n\n    this.pointers   .splice(index, 1);\n    this.pointerIds .splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes  .splice(index, 1);\n    this.holdTimers .splice(index, 1);\n  }\n\n  checkAndPreventDefault (event) {\n    const setting = this.target? this.target.options.preventDefault : 'never';\n\n    if (setting === 'never') { return; }\n\n    if (setting === 'always') {\n      event.preventDefault();\n      return;\n    }\n\n    // setting === 'auto'\n\n    // don't preventDefault of pointerdown events\n    if (/down|start/i.test(event.type)) {\n      return;\n    }\n\n    // don't preventDefault on input elements\n    if (/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n      return;\n    }\n\n    event.preventDefault();\n  }\n\n  _updateEventTargets (target, currentTarget) {\n    this._eventTarget    = target;\n    this._curEventTarget = currentTarget;\n  }\n}\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfor (let i = 0, len = methodNames.length; i < len; i++) {\n  const method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions (method) {\n  return (function (event) {\n    const eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    const curEventTarget = utils.getActualElement(event.currentTarget);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (let i = 0; i < event.changedTouches.length; i++) {\n        const pointer = event.changedTouches[i];\n        const interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || (new Date().getTime() - prevTouchTime < 500);\n      }\n\n      if (!invalidPointer) {\n        let interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = (/mouse/i.test(event.pointerType || event.type)\n                               // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                               || event.pointerType === 4);\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (const [pointer, interaction] of matches) {\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\n// prevent native HTML5 drag on interact.js target elements\nfunction preventNativeDrag (event) {\n  for (const interaction of scope.interactions) {\n\n    if (interaction.element\n        && (interaction.element === event.target\n            || utils.nodeContains(interaction.element, event.target))) {\n\n      interaction.checkAndPreventDefault(event);\n      return;\n    }\n  }\n}\n\nconst docEvents = { /* 'eventType': listenerFunc */ };\nconst pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down  ] = listeners.pointerDown;\n  docEvents[pEventTypes.move  ] = listeners.pointerMove;\n  docEvents[pEventTypes.up    ] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n}\nelse {\n  docEvents.mousedown   = listeners.pointerDown;\n  docEvents.mousemove   = listeners.pointerMove;\n  docEvents.mouseup     = listeners.pointerUp;\n\n  docEvents.touchstart  = listeners.pointerDown;\n  docEvents.touchmove   = listeners.pointerMove;\n  docEvents.touchend    = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = scope.endAllInteractions;\ndocEvents.dragstart = preventNativeDrag;\n\nfunction onDocSignal ({ doc }, signalName) {\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove;\n\n  // delegate event listener\n  for (const eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (const eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document'   , onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\n// Stop related interactions when an Interactable is unset\nInteractable.signals.on('unset', function ( {interactable} ) {\n  for (const interaction of scope.interactions) {\n    if (interaction.target === interactable && interaction.interacting()) {\n      interaction.end();\n    }\n  }\n});\n\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.withinLimit = scope.withinInteractionLimit;\nInteraction.validateAction = validateAction;\nInteraction.signals = signals;\n\nmodule.exports = Interaction;\n","const actions = require('./index');\nconst scope = require('../scope');\nconst utils = require('../utils');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drag = {\n  defaults: {\n    enabled      : false,\n    manualStart  : true,\n    max          : Infinity,\n    maxPerElement: 1,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    startAxis: 'xy',\n    lockAxis : 'xy',\n  },\n\n  checker: function (pointer, event, interactable) {\n    const dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled\n      ? { name: 'drag', axis: (dragOptions.lockAxis === 'start'\n                               ? dragOptions.startAxis\n                               : dragOptions.lockAxis)}\n      : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  },\n};\n\nInteraction.signals.on('start-drag', function ({ interaction, event }) {\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y   = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy   = 0;\n  }\n  else if (axis === 'y') {\n    interaction.curCoords.page.x   = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx   = 0;\n  }\n});\n\nInteraction.signals.on('move-drag', function ({ interaction, event }) {\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY   = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  }\n  else if (axis === 'y') {\n    dragEvent.pageX   = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(scope.eventTypes, [\n  'dragstart',\n  'dragmove',\n  'draginertiastart',\n  'draginertiaresume',\n  'dragend',\n]);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n","const actions = require('./index');\nconst utils = require('../utils');\nconst scope = require('../scope');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drop = {\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nInteraction.signals.on('start-drag', function ({ interaction, event }) {\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements  = [];\n  interaction.activeDrops.rects     = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  const dragEvent = interaction.prevEvent;\n  const dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function ({ interaction, iEvent, event }) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const draggableElement = interaction.element;\n  const dragEvent = iEvent;\n  const dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget  = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('move-drag', function ({ interaction }) {\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function ({ interaction }) {\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function ({ interaction }) {\n  interaction.activeDrops.dropzones =\n    interaction.activeDrops.elements =\n    interaction.activeDrops.rects =\n    interaction.dropEvents = null;\n});\n\nfunction collectDrops (interaction, element) {\n  const drops = [];\n  const elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const current of scope.interactables) {\n    if (!current.options.drop.enabled) { continue; }\n\n    const accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if ((utils.isElement(accept) && accept !== element)\n        || (utils.isString(accept)\n        && !utils.matchesSelector(element, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.isString(current.target)\n      ? current._context.querySelectorAll(current.target)\n      : [current.target];\n\n    for (let i = 0; i < dropElements.length; i++) {\n      const currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements,\n    dropzones: drops,\n  };\n}\n\nfunction fireActiveDrops (interaction, event) {\n  let prevElement;\n\n  // loop through all active dropzones and trigger event\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    const current = interaction.activeDrops.dropzones[i];\n    const currentElement = interaction.activeDrops.elements [i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops (interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements  = possibleDrops.elements;\n  interaction.activeDrops.rects     = [];\n\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] =\n      interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop (dragEvent, event, dragElement) {\n  const interaction = dragEvent.interaction;\n  const validDrops = [];\n\n  if (scope.dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (let j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    const current        = interaction.activeDrops.dropzones[j];\n    const currentElement = interaction.activeDrops.elements [j];\n    const rect           = interaction.activeDrops.rects    [j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect)\n      ? currentElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element : interaction.activeDrops.elements [dropIndex] || null,\n  };\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  const tmpl = {\n    dragEvent,\n    interaction,\n    target       : interaction.dropElement,\n    dropzone     : interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable    : dragEvent.interactable,\n    timeStamp    : dragEvent.timeStamp,\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent,\n        interaction,\n        target       : interaction.dropElement,\n        dropzone     : interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragenter',\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target   = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target   = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove     : dragEvent,\n      type         : 'dropmove',\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, dropEvents) {\n  if (dropEvents.leave) { interaction.prevDropTarget.fire(dropEvents.leave); }\n  if (dropEvents.enter) {     interaction.dropTarget.fire(dropEvents.enter); }\n  if (dropEvents.drop ) {     interaction.dropTarget.fire(dropEvents.drop ); }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget  = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.isFunction(options.ondrop)          ) { this.ondrop           = options.ondrop          ; }\n    if (utils.isFunction(options.ondropactivate)  ) { this.ondropactivate   = options.ondropactivate  ; }\n    if (utils.isFunction(options.ondropdeactivate)) { this.ondropdeactivate = options.ondropdeactivate; }\n    if (utils.isFunction(options.ondragenter)     ) { this.ondragenter      = options.ondragenter     ; }\n    if (utils.isFunction(options.ondragleave)     ) { this.ondragleave      = options.ondragleave     ; }\n    if (utils.isFunction(options.ondropmove)      ) { this.ondropmove       = options.ondropmove      ; }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    }\n    else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return (this.options.drop.checker\n      ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement);\n    const page = utils.getPageXY(dragEvent);\n    let horizontal;\n    let vertical;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = (page.x > rect.left) && (page.x < rect.right);\n    vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function ({ interactable }) {\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget      = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement     = null; // the element at the time of checking\n  interaction.prevDropTarget  = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents      = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [],      // the dropzones that are mentioned below\n    elements : [],      // elements of dropzones that accept the target draggable\n    rects    : [],      // the rects of the elements mentioned above\n  };\n\n});\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  interaction.dropTarget = interaction.dropElement =\n    interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\nutils.merge(scope.eventTypes, [\n  'dragenter',\n  'dragleave',\n  'dropactivate',\n  'dropdeactivate',\n  'dropmove',\n  'drop',\n]);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n","const actions = require('./index');\nconst utils = require('../utils');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst scope = require('../scope');\nconst defaultOptions = require('../defaultOptions');\n\nconst gesture = {\n  defaults: {\n    manualStart  : false,\n    enabled      : false,\n    max          : Infinity,\n    maxPerElement: 1,\n\n    restrict: null,\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  },\n};\n\nInteraction.signals.on('start-gesture', function ({ interaction, event }) {\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('move-gesture', function ({ interaction, event }) {\n  if (!interaction.pointerIds.length) {\n    return interaction.prevEvent;\n  }\n\n  let gestureEvent;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity\n      && gestureEvent.scale !== null\n      && gestureEvent.scale !== undefined\n      && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false? false: true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('gesture', function (arg) {\n  if (arg.action !== 'gesture') { return; }\n\n  const { interaction, iEvent, event, starting, ending, deltaSource } = arg;\n  const pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0,   // distance between two touches of touchStart\n    prevDistance : 0,\n    distance     : 0,\n\n    scale: 1,           // gesture.distance / gesture.startDistance\n\n    startAngle: 0,      // angle of line joining two touches\n    prevAngle : 0,      // angle of the previous gesture event\n  };\n});\n\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(scope.eventTypes, [\n  'gesturestart',\n  'gesturemove',\n  'gestureend',\n]);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n","const actions = {\n  names: [],\n  methodDict: {},\n};\n\nmodule.exports = actions;\n","const actions = require('./index');\nconst utils = require('../utils');\nconst browser = require('../utils/browser');\nconst scope = require('../scope');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst resize = {\n  defaults: {\n    enabled      : false,\n    manualStart  : false,\n    max          : Infinity,\n    maxPerElement: 1,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) { return null; }\n\n    const page = utils.extend({}, interaction.curCoords.page);\n    const options = interactable.options;\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize;\n      const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n                                              resizeOptions.edges[edge],\n                                              page,\n                                              interaction._eventTarget,\n                                              element,\n                                              rect,\n                                              resizeOptions.margin || scope.margin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          };\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - scope.margin);\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - scope.margin);\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right? 'x' : '') + (bottom? 'y' : ''),\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: (browser.isIe9OrOlder ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  }),\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    }\n    else if (action.edges) {\n      let cursorKey = '';\n      const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  },\n};\n\nInteraction.signals.on('start-resize', function ({ interaction, event }) {\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    const startRect = interaction.target.getRect(interaction.element);\n    const resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n      linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n      linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n      linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    }\n    else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start     : startRect,\n      current   : utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous  : utils.extend({}, startRect),\n      delta     : {\n        left: 0, right : 0, width : 0,\n        top : 0, bottom: 0, height: 0,\n      },\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('move-resize', function ({ interaction, event }) {\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  if (edges) {\n    const start      = interaction.resizeRects.start;\n    const current    = interaction.resizeRects.current;\n    const restricted = interaction.resizeRects.restricted;\n    const delta      = interaction.resizeRects.delta;\n    const previous   = utils.extend(interaction.resizeRects.previous, restricted);\n    const originalEdges = edges;\n\n    let dx = resizeEvent.dx;\n    let dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      const startAspectRatio = resizeOptions.preserveAspectRatio\n        ? interaction.resizeStartAspectRatio\n        : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if ((originalEdges.left && originalEdges.bottom)\n          || (originalEdges.right && originalEdges.top)) {\n        dy = -dx / startAspectRatio;\n      }\n      else if (originalEdges.left || originalEdges.right ) { dy = dx / startAspectRatio; }\n      else if (originalEdges.top  || originalEdges.bottom) { dx = dy * startAspectRatio; }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top   ) { current.top    += dy; }\n    if (edges.bottom) { current.bottom += dy; }\n    if (edges.left  ) { current.left   += dx; }\n    if (edges.right ) { current.right  += dx; }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        let swap;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    }\n    else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top    = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left   = Math.min(current.left, start.right);\n      restricted.right  = Math.max(current.right, start.left);\n    }\n\n    restricted.width  = restricted.right  - restricted.left;\n    restricted.height = restricted.bottom - restricted.top ;\n\n    for (const edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false? false: true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      this.options.resize.axis = scope.defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    }\n    else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.isNumber(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.isNumber(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) { return false; }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('resize', function ({ interaction, iEvent }) {\n  if (!interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    }\n    else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(scope.eventTypes, [\n  'resizestart',\n  'resizemove',\n  'resizeinertiastart',\n  'resizeinertiaresume',\n  'resizeend',\n]);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n","const raf            = require('./utils/raf');\nconst getWindow      = require('./utils/window').getWindow;\nconst isWindow       = require('./utils/isType').isWindow;\nconst domUtils       = require('./utils/domUtils');\nconst Interaction    = require('./Interaction');\nconst defaultOptions = require('./defaultOptions');\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    container: null,     // the item that is scrolled (Window or HTMLElement)\n    margin   : 60,\n    speed    : 300,      // the scroll speed in pixels per second\n  },\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(autoScroll.interaction.element);\n    const now = new Date().getTime();\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    const s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      }\n      else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop  += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    const options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function ({ interaction, pointer }) {\n    if (!(interaction.interacting()\n          && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const options = interaction.target.options[interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left   = pointer.clientX < autoScroll.margin;\n      top    = pointer.clientY < autoScroll.margin;\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container);\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin;\n      top    = pointer.clientY < rect.top    + autoScroll.margin;\n      right  = pointer.clientX > rect.right  - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = (right ? 1: left? -1: 0);\n    autoScroll.y = (bottom? 1:  top? -1: 0);\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed  = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  },\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('move-done', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n","const autoStart   = require('./index');\nconst Interaction = require('../Interaction');\nconst actions     = require('../actions');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(() => {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nfor (const action of actions.names) {\n  autoStart.signals.on('before-start-' + action, preventImmediateMove);\n}\n\nInteraction.signals.on('move-done', function ({ interaction }) {\n  if (interaction.pointerWasMoved) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\nfunction preventImmediateMove ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n}\n","const autoStart = require('./index');\nconst scope     = require('../scope');\nconst browser   = require('../utils/browser');\n\nconst { isElement } = require('../utils/isType');\nconst { matchesSelector, parentElement } = require('../utils/domUtils');\n\nautoStart.signals.on('before-start-drag',  function ({ interaction, eventTarget, dx, dy }) {\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx);\n  const absY = Math.abs(dy);\n  const dragOptions = interaction.target.options.drag;\n  const startAxis = dragOptions.startAxis;\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start'\n    ? currentAxis\n    : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n\n      let element = eventTarget;\n\n      const getDraggable = function (interactable, selector, context) {\n        const elements = browser.useMatchesSelectorPolyfill\n            ? context.querySelectorAll(selector)\n            : undefined;\n\n        if (interactable === interaction.target) { return; }\n\n        let action = null;\n\n        if (scope.inContext(interactable, eventTarget)\n            && !interactable.options.drag.manualStart\n            && !scope.testIgnore(interactable, element, eventTarget)\n            && scope.testAllow(interactable, element, eventTarget)\n            && matchesSelector(element, selector, elements)) {\n\n          action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, interactable)\n            && scope.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n          return interactable;\n        }\n      };\n\n      let action = null;\n\n      // check all interactables\n      while (isElement(element)) {\n        const elementInteractable = scope.interactables.get(element);\n\n        if (elementInteractable\n            && elementInteractable !== interaction.target\n            && !elementInteractable.options.drag.manualStart) {\n\n          action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, elementInteractable)) {\n\n          interaction.prepared.name = 'drag';\n          interaction.target = elementInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        const selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n        if (selectorInteractable) {\n          interaction.prepared.name = 'drag';\n          interaction.target = selectorInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        element = parentElement(element);\n      }\n    }\n  }\n});\n\nfunction checkStartAxis (startAxis, interactable) {\n  if (!interactable) { return false; }\n\n  const thisAxis = interactable.options.drag.startAxis;\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis);\n}\n\n","const Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst actions        = require('../actions');\nconst defaultOptions = require('../defaultOptions');\nconst browser        = require('../utils/browser');\nconst scope          = require('../scope');\nconst utils          = require('../utils');\nconst signals        = require('../utils/Signals').new();\n\n// mouse move cursor style\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n  if (!interaction.mouse || interaction.pointerIsDown) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n  if (interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  const { interaction, event } = arg;\n\n  if (!(interaction.pointerIsDown && interaction.pointerWasMoved && interaction.prepared.name)) {\n    return;\n  }\n\n  // ignore movement while simulation is active\n  if (!interaction.simulation) {\n\n    if (!interaction.interacting()) {\n      signals.fire('before-start-' + interaction.prepared.name, arg);\n    }\n\n    const starting = !!interaction.prepared.name && !interaction.interacting();\n\n    if (starting\n        && (interaction.target.options[interaction.prepared.name].manualStart\n        || !scope.withinInteractionLimit(interaction.target, interaction.element, interaction.prepared))) {\n      interaction.stop(event);\n      return;\n    }\n\n    if (interaction.prepared.name && interaction.target) {\n      if (starting) {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }\n    }\n  }\n});\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = Interaction.validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && scope.withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n  let action = null;\n\n  function pushMatches (interactable, selector, context) {\n    const elements = (browser.useMatchesSelectorPolyfill\n      ? context.querySelectorAll(selector)\n      : undefined);\n\n    if (scope.inContext(interactable, element)\n        && !scope.testIgnore(interactable, element, eventTarget)\n      && scope.testAllow(interactable, element, eventTarget)\n      && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    const elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable\n        && (action = Interaction.validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable))\n        && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element,\n        action,\n        target: elementInteractable,\n      };\n    }\n    else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action\n          && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentElement(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\n/*\\\n * Interactable.ignoreFrom\n [ method ]\n *\n * If the target of the `mousedown`, `pointerdown` or `touchstart`\n * event or any of it's parents match the given CSS selector or\n * Element, no drag/resize/gesture is started.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n = (string | Element | object) The current ignoreFrom value or this Interactable\n **\n | interact(element, { ignoreFrom: document.getElementById('no-action') });\n | // or\n | interact(element).ignoreFrom('input, textarea, a');\n\\*/\nInteractable.prototype.ignoreFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {            // CSS selector to match event.target\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {              // specific element\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  return this.options.ignoreFrom;\n};\n\n/*\\\n * Interactable.allowFrom\n [ method ]\n *\n * A drag/resize/gesture is started only If the target of the\n * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n * parents match the given CSS selector or Element.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n = (string | Element | object) The current allowFrom value or this Interactable\n **\n | interact(element, { allowFrom: document.getElementById('drag-handle') });\n | // or\n | interact(element).allowFrom('.handle');\n\\*/\nInteractable.prototype.allowFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {            // CSS selector to match event.target\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {              // specific element\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  return this.options.allowFrom;\n};\n\nInteraction.signals.on('stop-active', function ({ interaction }) {\n  const target = interaction.target;\n\n  if (target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  const rect = this.getRect(element);\n  let action = null;\n\n  for (const actionName of actions.names) {\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\ndefaultOptions.perAction.manualStart = false;\n\nmodule.exports = { signals };\n","module.exports = {\n  base: {\n    accept        : null,\n    preventDefault: 'auto',\n    origin        : { x: 0, y: 0 },\n    deltaSource   : 'page',\n    allowFrom     : null,\n  },\n\n  perAction: {\n    max: Infinity,\n    maxPerElement: 1,\n\n    inertia: {\n      enabled          : false,\n      resistance       : 10,    // the lambda in exponential decay\n      minSpeed         : 100,   // target speed must be above this for inertia to start\n      endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n      allowResume      : true,  // allow resuming an action in inertia phase\n      smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n    },\n  },\n\n  _holdDuration: 600,\n};\n","/* browser entry point */\n\n// Interaction\nrequire('./Interaction');\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// autoScroll\nrequire('./autoScroll');\n\n// autoStart\nrequire('./autoStart');\nrequire('./autoStart/drag');\nrequire('./autoStart/delay');\n\n// export interact\nmodule.exports = require('./interact');\n","const InteractEvent  = require('./InteractEvent');\nconst Interaction    = require('./Interaction');\nconst modifiers      = require('./modifiers');\nconst utils          = require('./utils');\nconst animationFrame = utils.raf;\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active     : false,\n    smoothEnd  : false,\n    allowResume: false,\n    ending     : false,\n\n    startEvent: null,\n    upCoords  : {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i  : null,\n  };\n\n  interaction.boundInertiaFrame   = () => inertiaFrame  .apply(interaction);\n  interaction.boundSmoothEndFrame = () => smoothEndFrame.apply(interaction);\n});\n\nInteraction.signals.on('down', function ({ interaction, event, pointer, eventTarget }) {\n  const status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    let element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        const signalArg = { interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('resume'            , signalArg);\n\n        // fire a reume event\n        const resumeEvent = new InteractEvent(interaction,\n                                              event,\n                                              interaction.prepared.name,\n                                              'inertiaresume',\n                                              interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentElement(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function ({ interaction, event }) {\n  const status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) { return; }\n\n  const target = interaction.target;\n  const options = target && target.options;\n  const inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  const now = new Date().getTime();\n  const statuses = {};\n  const page = utils.extend({}, interaction.curCoords.page);\n  const pointerSpeed = interaction.pointerDelta.client.speed;\n  let inertiaPossible = false;\n  let inertia = false;\n  let smoothEnd = false;\n  let modifierResult;\n\n  // check if inertia should be started\n  inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                     && interaction.prepared.name !== 'gesture'\n                     && event !== status.startEvent);\n\n  inertia = (inertiaPossible\n            && (now - interaction.curCoords.timeStamp) < 50\n            && pointerSpeed > inertiaOptions.minSpeed\n            && pointerSpeed > inertiaOptions.endSpeed);\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return; }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent =\n    new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  }\n  else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function ({ interaction }) {\n  const status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = status.ending = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia (interaction, status) {\n  const inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  const lambda = inertiaOptions.resistance;\n  const inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame () {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  const status = this.inertiaStatus;\n  const options = this.target.options[this.prepared.name].inertia;\n  const lambda = options.resistance;\n  const t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    const progress =  1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(0, 0,\n                                                     status.xe,\n                                                     status.ye,\n                                                     status.modifiedXe,\n                                                     status.modifiedYe,\n                                                     progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  }\n  else {\n    status.ending = true;\n\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = status.ending = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame () {\n  updateInertiaCoords(this);\n\n  const status = this.inertiaStatus;\n  const t = new Date().getTime() - status.t0;\n  const duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  }\n  else {\n    status.ending = true;\n\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd =\n      status.active = status.ending = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords (interaction) {\n  const status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) { return; }\n\n  const pageUp   = status.upCoords.page;\n  const clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [ {\n    pageX  : pageUp.x   + status.sx,\n    pageY  : pageUp.y   + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy,\n  } ]);\n}\n","/**\n * interact.js v1.2.5\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n\nconst browser      = require('./utils/browser');\nconst events       = require('./utils/events');\nconst utils        = require('./utils');\nconst scope        = require('./scope');\nconst Interactable = require('./Interactable');\n\nscope.dynamicDrop = false;\n\n// Less Precision with touch input\nscope.margin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\nscope.pointerMoveTolerance = 1;\n\n// Allow this many interactions to happen simultaneously\nscope.maxInteractions = Infinity;\n\n// because Webkit and Opera still use 'mousewheel' event type\nscope.wheelEvent = 'onmousewheel' in scope.document? 'mousewheel': 'wheel';\n\nscope.globalEvents = {};\n\nscope.inContext = function (interactable, element) {\n  return (interactable._context === element.ownerDocument\n          || utils.nodeContains(interactable._context, element));\n};\n\nscope.testIgnore = function (interactable, interactableElement, element) {\n  const ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) { return false; }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  }\n  else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n};\n\nscope.testAllow = function (interactable, interactableElement, element) {\n  const allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) { return true; }\n\n  if (!utils.isElement(element)) { return false; }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  }\n  else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n};\n\nscope.interactables.indexOfElement = function indexOfElement (target, context) {\n  context = context || scope.document;\n\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    if (interactable.target === target\n        && (!utils.isString(target) || (interactable._context === context))) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet (element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!utils.isString(interactable.target)) {\n      continue;\n    }\n\n    const ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact(document.getElementById('draggable')).draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // something cool...\n |     })\n |     .autoScroll(true);\n\\*/\nfunction interact (element, options) {\n  return scope.interactables.get(element, options) || new Interactable(element, options);\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(scope.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!scope.globalEvents[type]) {\n      scope.globalEvents[type] = [listener];\n    }\n    else {\n      scope.globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, useCapture);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(scope.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  }\n  else {\n    let index;\n\n    if (type in scope.globalEvents\n        && (index = utils.indexOf(scope.globalEvents[type], listener)) !== -1) {\n      scope.globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointerAverage;\ninteract.getTouchBBox       = utils.touchBBox;\ninteract.getTouchDistance   = utils.touchDistance;\ninteract.getTouchAngle      = utils.touchAngle;\n\ninteract.getElementRect       = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector      = utils.matchesSelector;\ninteract.closest              = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (let i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n    //}\n\n    scope.dynamicDrop = newValue;\n\n    return interact;\n  }\n  return scope.dynamicDrop;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return scope.pointerMoveTolerance;\n};\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return scope.maxInteractions;\n};\n\ninteract.addDocument    = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n","const scope   = require('./scope');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst iFinder = require('./utils/interactionFinder');\n\nconst toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick (event) {\n  const interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) { return; }\n\n  if (interaction.prevTap\n      && event.clientX === interaction.prevTap.clientX\n      && event.clientY === interaction.prevTap.clientY\n      && event.target  === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes  [0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  const selectFix = function (event) {\n    for (const interaction of scope.interactions) {\n      if (interaction.interacting()) {\n        interaction.checkAndPreventDefault(event);\n      }\n    }\n  };\n\n  const onDocIE8 = function onDocIE8 ({ doc, win }, signalName) {\n    const eventMethod = signalName.indexOf('listen') === 0\n      ? events.add : events.remove;\n\n    // For IE's lack of Event#preventDefault\n    eventMethod(doc, 'selectstart', selectFix);\n\n    if (scope.pointerEvents) {\n      eventMethod(doc, 'dblclick', onIE8Dblclick);\n    }\n  };\n\n  scope.signals.on('add-document'   , onDocIE8);\n  scope.signals.on('remove-document', onDocIE8);\n}\n\nmodule.exports = null;\n","const InteractEvent = require('../InteractEvent');\nconst Interaction   = require('../Interaction');\nconst extend        = require('../utils/extend');\n\nconst modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    const { target, element } = interaction;\n    const rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top  = coords.page.y - rect.top;\n\n      interaction.startOffset.right  = rect.right  - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n      if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n    }\n    else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n\n      offsets[modifierName] =\n        modifiers[modifiers.names[i]].setOffset(interaction,\n                                                interactable, element, rect,\n                                                interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    const result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true,\n    };\n    const target = interaction.target;\n    const coords = extend({}, coordsArg);\n\n    let currentStatus;\n\n    for (const modifierName of modifiers.names) {\n      const modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) { continue; }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (const modifierName of modifiers.names) {\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function ({ interaction }, signalName) {\n    modifiers.setOffsets(interaction, signalName === 'resume'? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  },\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset      = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets  = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('start' , modifiers.start);\nInteraction.signals.on('resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function ({ interaction, preEnd, interactingBeforeMove }) {\n  const modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  for (let i = 0; i < modifiers.names.length; i++) {\n    // if the endOnly option is true for any modifier\n    if (modifiers[modifiers.names[i]].shouldDo(interaction.target, interaction.prepared.name, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function ({ iEvent, interaction, page, client, phase, action: actionName }) {\n  const target = interaction.target;\n\n  for (let i = 0; i < modifiers.names.length; i++) {\n    const modifierName = modifiers.names[i];\n    const modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nmodule.exports = modifiers;\n","const modifiers = require('./index');\nconst utils = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst restrict = {\n  defaults: {\n    enabled    : false,\n    endOnly    : false,\n    restriction: null,\n    elementRect: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const restrictOptions = interactable.options[actionName].restrict;\n\n    return (restrictOptions && restrictOptions.enabled\n            && (preEnd || !restrictOptions.endOnly)\n            && (!requireEndOnly || restrictOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    const offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - (rect.width  * elementRect.left);\n      offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n      offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n      offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n    }\n    else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const target    = interaction.target;\n    const restrictOptions  = target && target.options[interaction.prepared.name].restrict;\n    let restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    let rect;\n    let restrictedX;\n    let restrictedY;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentElement(interaction.element);\n      }\n      else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      }\n      else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) { return status; }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    const offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n      restrictedX = Math.max(Math.min(rect.x + rect.width  - offset.right , page.x), rect.x + offset.left);\n      restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top );\n    }\n    else {\n      restrictedX = Math.max(Math.min(rect.right  - offset.right , page.x), rect.left + offset.left);\n      restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top  + offset.top );\n    }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const options = interactable.options[actionName].restrict;\n    const elementRect = options && options.elementRect;\n\n    if (options && options.enabled\n        && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n","const modifiers = require('./index');\nconst interact = require('../interact');\nconst utils = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const snapOptions = interactable.options[actionName].snap;\n\n    return (snapOptions && snapOptions.enabled\n            && (preEnd || !snapOptions.endOnly)\n            && (!requireEndOnly || snapOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const offsets = [];\n    const origin = utils.getOriginXY(interactable, element);\n    const snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    let snapOffset;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y,\n      };\n    }\n    else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y,\n      };\n    }\n    else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (const { x: relativeX, y: relativeY } of snapOptions.relativePoints) {\n        offsets.push({\n          x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n          y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n        });\n      }\n    }\n    else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    const targets = [];\n    let target;\n    let page;\n    let i;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    }\n    else {\n      const origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    const offsets = interaction.modifierOffsets.snap;\n    let len = snapOptions.targets? snapOptions.targets.length : 0;\n\n    for (const { x: offsetX, y: offsetY } of offsets) {\n      const relativeX = page.x - offsetX;\n      const relativeY = page.y - offsetY;\n\n      for (const snapTarget of snapOptions.targets) {\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        }\n        else {\n          target = snapTarget;\n        }\n\n        if (!target) { continue; }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? (target.x + offsetX) : relativeX,\n          y: utils.isNumber(target.y) ? (target.y + offsetY) : relativeY,\n\n          range: utils.isNumber(target.range)? target.range: snapOptions.range,\n        });\n      }\n    }\n\n    const closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0,\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      const range = target.range;\n      const dx = target.x - page.x;\n      const dy = target.y - page.y;\n      const distance = utils.hypot(dx, dy);\n      let inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n          // is the closest target in range?\n          ? (closest.inRange && range !== Infinity\n          // the pointer is relatively deeper in this target\n          ? distance / range < closest.distance / closest.range\n          // this target has Infinite range and the closest doesn't\n          : (range === Infinity && closest.range !== Infinity)\n          // OR this target is closer that the previous closest\n        || distance < closest.distance)\n          // The other is not in range and the pointer is closer to this target\n          : (!closest.inRange && distance < closest.distance))) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    let snapChanged;\n\n    if (closest.target) {\n      snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    }\n    else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = (snapChanged || (closest.inRange && !status.locked));\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const snapOptions = interactable.options[actionName].snap;\n    const relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled\n        && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range  : status.range,\n        locked : status.locked,\n        x      : status.snappedX,\n        y      : status.snappedY,\n        realX  : status.realX,\n        realY  : status.realY,\n        dx     : status.dx,\n        dy     : status.dy,\n      };\n    }\n  },\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    const limits = grid.limits || {\n      left  : -Infinity,\n      right :  Infinity,\n      top   : -Infinity,\n      bottom:  Infinity,\n    };\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    const gridx = Math.round((x - offsetX) / grid.x);\n    const gridy = Math.round((y - offsetY) / grid.y);\n\n    const newX = Math.max(limits.left, Math.min(limits.right , gridx * grid.x + offsetX));\n    const newY = Math.max(limits.top , Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range,\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n","const scope = require('./scope');\nconst InteractEvent = require('./InteractEvent');\nconst Interaction = require('./Interaction');\nconst utils = require('./utils');\nconst browser = require('./utils/browser');\n\nconst simpleSignals = [ 'down', 'up', 'up', 'cancel' ];\nconst simpleEvents = [ 'down', 'up', 'tap', 'cancel' ];\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction firePointers (interaction, pointer, event, eventTarget, targets, elements, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  let pointerEvent = {};\n  let i;\n  // for tap events\n  let interval;\n  let createNewDoubleTap;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  }\n  else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault           = preventOriginalDefault;\n    pointerEvent.stopPropagation          = InteractEvent.prototype.stopPropagation;\n    pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n    pointerEvent.interaction              = interaction;\n\n    pointerEvent.timeStamp     = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type          = eventType;\n    pointerEvent.pointerId     = utils.getPointerId(pointer);\n    pointerEvent.pointerType   = interaction.mouse? 'mouse' : !browser.supportsPointerEvent? 'touch'\n      : utils.isString(pointer.pointerType)\n        ? pointer.pointerType\n        : [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap'\n                            && interaction.prevTap.target === pointerEvent.target\n                            && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  for (i = 0; i < targets.length; i++) {\n    pointerEvent.currentTarget = elements[i];\n    pointerEvent.interactable = targets[i];\n    targets[i].fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && elements[i + 1] !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  if (createNewDoubleTap) {\n    const doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt   = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  }\n  else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets (interaction, pointer, event, eventTarget, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  const targets = [];\n  const elements = [];\n  let element = eventTarget;\n\n  function collectSelectors (interactable, selector, context) {\n    const els = browser.useMatchesSelectorPolyfill\n        ? context.querySelectorAll(selector)\n        : undefined;\n\n    if (interactable._iEvents[eventType]\n        && utils.isElement(element)\n        && scope.inContext(interactable, element)\n        && !scope.testIgnore(interactable, element, eventTarget)\n        && scope.testAllow(interactable, element, eventTarget)\n        && utils.matchesSelector(element, selector, els)) {\n\n      targets.push(interactable);\n      elements.push(element);\n    }\n  }\n\n  const interact = scope.interact;\n\n  while (element) {\n    if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n      targets.push(interact(element));\n      elements.push(element);\n    }\n\n    scope.interactables.forEachSelector(collectSelectors);\n\n    element = utils.parentElement(element);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, elements, eventType);\n  }\n}\n\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n  const pointerIndex = (interaction.mouse\n    ? 0\n    : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer)));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n  // copy event to be used in timeout for IE8\n  const eventCopy = browser.isIE8? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction,\n                        browser.isIE8? eventCopy : pointer,\n                        eventCopy,\n                        eventTarget,\n                        'hold');\n\n  }, scope.defaultOptions._holdDuration);\n});\n\nfunction createSignalListener (event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction,\n                        arg.pointer,\n                        arg.event,\n                        arg.eventTarget,\n                        event);\n  };\n}\n\nfor (let i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null;  // the most recent tap event on this interaction\n  interaction.tapTime = 0;     // time of the most recent tap event\n});\n\nutils.merge(scope.eventTypes, [\n  'down',\n  'move',\n  'up',\n  'cancel',\n  'tap',\n  'doubletap',\n  'hold',\n]);\n\nmodule.exports = scope.pointerEvents = {\n  firePointers,\n  collectEventTargets,\n  preventOriginalDefault,\n};\n","const scope   = {};\nconst utils   = require('./utils');\nconst events  = require('./utils/events');\nconst signals = require('./utils/Signals').new();\n\nscope.defaultOptions = require('./defaultOptions');\nscope.signals        = signals;\nscope.events         = events;\n\nutils.extend(scope, require('./utils/window'));\nutils.extend(scope, require('./utils/domObjects'));\n\nscope.documents  = [];  // all documents being listened to\nscope.eventTypes = [];  // all event types specific to interact.js\n\nscope.withinInteractionLimit = function (interactable, element, action) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  for (let i = 0, len = scope.interactions.length; i < len; i++) {\n    const interaction = scope.interactions[i];\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= scope.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return scope.maxInteractions > 0;\n};\n\nscope.endAllInteractions = function (event) {\n  for (let i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].end(event);\n  }\n};\n\nscope.prefixedPropREs = utils.prefixedPropREs;\n\nscope.addDocument = function (doc, win) {\n  // do nothing if document is already known\n  if (utils.contains(scope.documents, doc)) { return false; }\n\n  win = win || scope.getWindow(doc);\n\n  scope.documents.push(doc);\n  events.documents.push(doc);\n\n  // don't add an unload event for the main document\n  // so that the page may be cached in browser history\n  if (doc !== scope.document) {\n    events.add(win, 'unload', scope.onWindowUnload);\n  }\n\n  signals.fire('add-document', { doc, win });\n};\n\nscope.removeDocument = function (doc, win) {\n  const index = utils.indexOf(scope.documents, doc);\n\n  if (index === -1) { return false; }\n\n  win = win || scope.getWindow(doc);\n\n  events.remove(win, 'unload', scope.onWindowUnload);\n\n  scope.documents.splice(index, 1);\n  events.documents.splice(index, 1);\n\n  signals.fire('remove-document', { win, doc });\n};\n\nscope.onWindowUnload = function () {\n  scope.removeDocument(this.document, this);\n};\n\nmodule.exports = scope;\n","const { indexOf } = require('./arr');\n\nclass Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (let i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  }\n}\n\nSignals.new = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n","function indexOf (array, target) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains (array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge (target, source) {\n  for (let i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf,\n  contains,\n  merge,\n};\n","const win        = require('./window');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!(('ontouchstart' in win.window) || isType.isFunction(win.window.DocumentTouch)\n                     && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: ('attachEvent' in win.window) && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: (navigator.appName === 'Opera'\n      && browser.supportsTouch\n      && navigator.userAgent.match('Presto')),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n  isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype\n    ? 'matches': 'webkitMatchesSelector' in Element.prototype\n    ? 'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype\n    ? 'mozMatchesSelector': 'oMatchesSelector' in Element.prototype\n    ? 'oMatchesSelector': 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === win.window.MSPointerEvent\n      ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n          out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' }\n      : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n          out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' })\n    : null),\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n","const domObjects = {};\nconst win = require('./window').window;\n\nfunction blank () {}\n\ndomObjects.document           = win.document;\ndomObjects.DocumentFragment   = win.DocumentFragment   || blank;\ndomObjects.SVGElement         = win.SVGElement         || blank;\ndomObjects.SVGSVGElement      = win.SVGSVGElement      || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement        = win.HTMLElement        || win.Element;\n\ndomObjects.Event        = win.Event;\ndomObjects.Touch        = win.Touch || blank;\ndomObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent);\n\nmodule.exports = domObjects;\n","const win        = require('./window');\nconst browser    = require('./browser');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (child, selector) {\n    let parent = domUtils.parentElement(child);\n\n    while (isType.isElement(parent)) {\n      if (domUtils.matchesSelector(parent, selector)) { return parent; }\n\n      parent = domUtils.parentElement(parent);\n    }\n\n    return null;\n  },\n\n  parentElement: function (node) {\n    let parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill\n    ? function (element, selector, elems) {\n      elems = elems || element.parentNode.querySelectorAll(selector);\n\n      for (let i = 0, len = elems.length; i < len; i++) {\n        if (elems[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    let deepestZoneParents = [];\n    let dropzoneParents = [];\n    let dropzone;\n    let deepestZone = elements[0];\n    let index = deepestZone? 0: -1;\n    let parent;\n    let child;\n    let i;\n    let n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement\n          && dropzone instanceof domObjects.SVGElement\n          && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      }\n      else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      const parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n],\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        }\n        else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentElement(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return (element instanceof domObjects.SVGElementInstance\n      ? element.correspondingUseElement\n      : element);\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n    };\n  },\n\n  getElementClientRect: function (element) {\n    const clientRect = (element instanceof domObjects.SVGElement\n      ? element.getBoundingClientRect()\n      : element.getClientRects()[0]);\n\n    return clientRect && {\n      left  : clientRect.left,\n      right : clientRect.right,\n      top   : clientRect.top,\n      bottom: clientRect.bottom,\n      width : clientRect.width  || clientRect.right  - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    };\n  },\n\n  getElementRect: function (element) {\n    const clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      const scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left   += scroll.x;\n      clientRect.right  += scroll.x;\n      clientRect.top    += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  },\n};\n\nmodule.exports = domUtils;\n","const arr       = require('./arr');\nconst isType    = require('./isType');\nconst domUtils  = require('./domUtils');\nconst indexOf   = arr.indexOf;\nconst contains  = arr.contains;\nconst getWindow = require('./window').getWindow;\n\nconst useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window);\nconst addEvent       = useAttachEvent?  'attachEvent': 'addEventListener';\nconst removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener';\nconst on             = useAttachEvent? 'on': '';\n\nconst elements          = [];\nconst targets           = [];\nconst attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nconst delegatedEvents = {};\n\nconst documents = [];\n\nfunction add (element, type, listener, useCapture) {\n  let elementIndex = indexOf(elements, element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push((useAttachEvent ? {\n      supplied: [],\n      wrapped : [],\n      useCount: [],\n    } : null));\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    let ret;\n\n    if (useAttachEvent) {\n      const { supplied, wrapped, useCount } = attachedListeners[elementIndex];\n      const listenerIndex = indexOf(supplied, listener);\n\n      const wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault           = event.preventDefault           || preventDef;\n          event.stopPropagation          = event.stopPropagation          || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      }\n      else {\n        useCount[listenerIndex]++;\n      }\n    }\n    else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove (element, type, listener, useCapture) {\n  const elementIndex = indexOf(elements, element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  let wrappedListener = listener;\n  let listeners;\n  let listenerIndex;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (let i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate (selector, context, type, listener, useCapture) {\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const fn = listeners[i][0];\n        const useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, useCapture) {\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const eventTarget = (domUtils.getActualElement(event.path\n    ? event.path[0]\n    : event.target));\n  let element = eventTarget;\n\n  useCapture = useCapture? true: false;\n\n  // duplicate the event so that currentTarget can be changed\n  for (const prop in event) {\n    fakeEvent[prop] = event[prop];\n  }\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentElement(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef () {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp () {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp () {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners,\n};\n","module.exports = function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n","const { closest, parentElement, getElementRect } = require('./domUtils');\nconst { isElement, isFunction, trySelector }     = require('./isType');\n\nmodule.exports = function (interactable, element) {\n  let origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentElement(element);\n  }\n  else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  }\n  else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin))  {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = ('x' in origin)? origin.x : origin.left;\n  origin.y = ('y' in origin)? origin.y : origin.top;\n\n  return origin;\n};\n","module.exports = (x, y) =>  Math.sqrt(x * x + y * y);\n","const utils = module.exports;\nconst extend = require('./extend');\nconst win = require('./window');\n\nutils.blank = function () {};\n\nutils.warnOnce = function (method, message) {\n  let warned = false;\n\n  return function () {\n    if (!warned) {\n      win.window.console.warn(message);\n      warned = true;\n    }\n\n    return method.apply(this, arguments);\n  };\n};\n\n// http://stackoverflow.com/a/5634528/2280888\nutils._getQBezierValue = function (t, p1, p2, p3) {\n  const iT = 1 - t;\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n};\n\nutils.getQuadraticCurvePoint = function (startX, startY, cpX, cpY, endX, endY, position) {\n  return {\n    x:  utils._getQBezierValue(position, startX, cpX, endX),\n    y:  utils._getQBezierValue(position, startY, cpY, endY),\n  };\n};\n\n// http://gizma.com/easing/\nutils.easeOutQuad = function (t, b, c, d) {\n  t /= d;\n  return -c * t*(t-2) + b;\n};\n\nutils.copyAction = function (dest, src) {\n  dest.name  = src.name;\n  dest.axis  = src.axis;\n  dest.edges = src.edges;\n\n  return dest;\n};\n\nutils.extend      = extend;\nutils.hypot       = require('./hypot');\nutils.raf         = require('./raf');\nutils.browser     = require('./browser');\nutils.getOriginXY = require('./getOriginXY');\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n","const scope = require('../scope');\nconst utils = require('./index');\nconst browser = require('./browser');\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouse', 'hasPointer', 'idle' ],\n\n  search: function (pointer, eventType, eventTarget) {\n    const mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n                        // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                        || pointer.pointerType === 4);\n    const pointerId = utils.getPointerId(pointer);\n    const details = { pointer, pointerId, mouseEvent, eventType, eventTarget };\n\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function ({ mouseEvent, eventType, eventTarget }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions) {\n      let element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume\n          && (interaction.mouse === mouseEvent)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentElement(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function ({ mouseEvent, eventType }) {\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    let firstNonActive;\n\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (/down/i.test(eventType) && interaction.simulation) { continue; }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction;\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId }) {\n    for (const interaction of scope.interactions) {\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function ({ mouseEvent }) {\n    for (const interaction of scope.interactions) {\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        const target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n        continue;\n      }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nmodule.exports = finder;\n","const win        = require('./window');\nconst isWindow   = require('./isWindow');\nconst domObjects = require('./domObjects');\n\nconst isType = {\n  isElement  : function (o) {\n    if (!o || (typeof o !== 'object')) { return false; }\n\n    const _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element)\n      ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string');\n  },\n\n  isArray    : null,\n\n  isWindow   : function (thing) { return thing === win.window || isWindow(thing); },\n\n  isDocFrag  : function (thing) { return isType.isObject(thing) && thing.nodeType === 11; },\n\n  isObject   : function (thing) { return !!thing && (typeof thing === 'object'); },\n\n  isFunction : function (thing) { return typeof thing === 'function'; },\n\n  isNumber   : function (thing) { return typeof thing === 'number'  ; },\n\n  isBool     : function (thing) { return typeof thing === 'boolean' ; },\n\n  isString   : function (thing) { return typeof thing === 'string'  ; },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) { return false; }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  },\n};\n\nisType.isArray = function (thing) {\n  return (isType.isObject(thing)\n      && (typeof thing.length !== 'undefined')\n      && isType.isFunction(thing.splice));\n};\n\nmodule.exports = isType;\n","module.exports = (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","const hypot   = require('./hypot');\nconst browser = require('./browser');\nconst dom     = require('./domObjects');\nconst isType  = require('./isType');\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x;\n    targetObj.page.y    = cur.page.y    - prev.page.y;\n    targetObj.client.x  = cur.client.x  - prev.client.x;\n    targetObj.client.y  = cur.client.y  - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    const dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx      = targetObj.page.x / dt;\n    targetObj.page.vy      = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx    = targetObj.client.x / dt;\n    targetObj.client.vy    = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    const pointer = (pointers.length > 1\n                     ? pointerUtils.pointerAverage(pointers)\n                     : pointers[0]);\n\n    const tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp :new Date().getTime();\n  },\n\n  prefixedPropREs: {\n    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n  },\n\n  pointerExtend: function (dest, source) {\n    for (const prop in source) {\n      const prefixedPropREs = pointerUtils.prefixedPropREs;\n      let deprecated = false;\n\n      // skip deprecated prefixed properties\n      for (const vendor in prefixedPropREs) {\n        if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n          deprecated = true;\n          break;\n        }\n      }\n\n      if (!deprecated) {\n        dest[prop] = source[prop];\n      }\n    }\n    return dest;\n  },\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[1][sourceX] - touches[0][sourceX];\n    const dy = touches[1][sourceY] - touches[0][sourceY];\n    let angle = 180 * Math.atan2(dy , dx) / Math.PI;\n\n    return  angle;\n  },\n};\n\nmodule.exports = pointerUtils;\n","const vendors = ['ms', 'moz', 'webkit', 'o'];\nlet lastTime = 0;\nlet request;\nlet cancel;\n\nfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] +'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = setTimeout(function () { callback(currTime + timeToCall); },\n                          timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request,\n  cancel,\n};\n","const win = module.exports;\nconst isWindow = require('./isWindow');\n\nfunction init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nwin.getWindow = function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n"],"sourceRoot":"/source/"}