{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","interact.js","src/InteractEvent.js","src/Interactable.js","src/Interaction.js","src/actions/base.js","src/actions/drag.js","src/actions/drop.js","src/actions/gesture.js","src/actions/resize.js","src/autoScroll.js","src/autoStart.js","src/defaultOptions.js","src/delay.js","src/index.js","src/interact.js","src/legacyBrowsers.js","src/modifiers/base.js","src/modifiers/restrict.js","src/modifiers/snap.js","src/pointerEvents.js","src/scope.js","src/utils/Signals.js","src/utils/arr.js","src/utils/browser.js","src/utils/domObjects.js","src/utils/domUtils.js","src/utils/events.js","src/utils/extend.js","src/utils/getOriginXY.js","src/utils/hypot.js","src/utils/index.js","src/utils/interactionFinder.js","src/utils/isType.js","src/utils/isWindow.js","src/utils/pointerUtils.js","src/utils/raf.js","src/utils/window.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","interact","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","./src/index","./src/utils/window",2,"_classCallCheck","instance","Constructor","TypeError","hypot","extend","getOriginXY","modifiers","scope","signals","InteractEvent","interaction","event","action","phase","element","related","target","deltaSource","options","defaultOptions","sourceX","sourceY","origin","starting","ending","coords","startCoords","curCoords","page","client","x","y","ctrlKey","altKey","shiftKey","metaKey","button","buttons","relatedTarget","t0","downTimes","type","interactable","names","modifierName","modifier","modifyCoords","modifierStatuses","pageX","pageY","clientX","clientY","x0","y0","clientX0","clientY0","signalArg","iEvent","inertiaStatus","active","detail","fire","timeStamp","dt","duration","speed","velocityX","velocityY","prevEvent","Date","getTime","dx","dy","pointerDelta","vx","vy","angle","Math","atan2","PI","overlap","left","up","right","down","swipe","velocity","prototype","preventDefault","stopImmediatePropagation","immediatePropagationStopped","propagationStopped","stopPropagation","on","_ref","inertia","zeroResumeDelta","resumeDx","resumeDy","./modifiers/base","./scope","./utils/Signals","./utils/extend","./utils/getOriginXY","./utils/hypot",3,"isType","events","actions","_require","getElementRect","_require2","indexOf","contains","interactables","Interactable","_context","document","_iEvents","_window","undefined","trySelector","context","getWindow","Node","isElement","_doc","win","doc","push","set","setOnEvents","phases","onAction","isFunction","onstart","onmove","onend","oninertiastart","setPerAction","option","isObject","perAction","enabled","isBool","getAction","pointer","defaultActionChecker","actionChecker","checker","getRect","isString","querySelector","rectChecker","styleCursor","newValue","test","ignoreFrom","allowFrom","eventTypes","listeners","onEvent","len","globalEvents","eventType","listener","useCapture","search","trim","split","isArray","prop","wheelEvent","addDelegate","add","off","eventList","index","splice","removeDelegate","remove","base","perActions","actionName","methodDict","methodName","settings","setting","unset","delegatedEvents","delegated","selectors","contexts","delegateListener","delegateUseCapture","style","cursor","defaultChecker","./actions/base","./utils/arr","./utils/domUtils","./utils/events","./utils/isType",4,"validateAction","utils","name","doOnInteractions","method","eventTarget","getActualElement","path","curEventTarget","currentTarget","matches","browser","supportsTouch","prevTouchTime","_iterator","changedTouches","_isArray","Array","_i","Symbol","iterator","next","done","value","finder","Interaction","invalidPointer","supportsPointerEvent","interactions","mouse","pointerIsDown","pointerType","_iterator2","_isArray2","_i2","_ref2","_updateEventTargets","animationFrame","raf","methodNames","_this","prepared","axis","edges","smoothEnd","startEvent","upCoords","xe","ye","sx","sy","vx0","vys","lambda_v0","one_ve_v0","boundInertiaFrame","inertiaFrame","boundSmoothEndFrame","smoothEndFrame","pointers","pointerIds","downTargets","holdTimers","prevCoords","downEvent","downPointer","_eventTarget","_curEventTarget","startOffset","top","bottom","modifierOffsets","resetStatuses","pointerWasMoved","_interacting","allowIfDuplicateMove","setEventXY","targetObj","pointerAverage","tmpXY","getPageXY","getClientXY","pointerDown","pointerIndex","addPointer","cancel","checkAndPreventDefault","parentElement","interacting","pointerExtend","copyCoords","setStartOffsets","rect","width","height","setOffsets","start","copyAction","setAll","pointerMove","preEnd","pageUp","clientUp","recordPointer","duplicateMove","pointerMoveTolerance","duplicate","setEventDeltas","pointerUp","getPointerId","clearTimeout","pointerEnd","removePointer","pointerCancel","inertiaOptions","now","statuses","pointerSpeed","inertiaPossible","modifierResult","dragging","drag","abs","minSpeed","endSpeed","shouldMove","locked","vy0","v0","calcInertia","modifiedXe","modifiedYe","request","shouldDo","stop","currentAction","documentElement","lambda","resistance","te","progress","exp","quadPoint","getQuadraticCurvePoint","smoothEndDuration","easeOutQuad","id","prevent","nodeName","actionOptions","delay","manualStart","status","inertiaDur","log","_ref4","pEventTypes","PointerEvent","move","pointerHover","out","pointerOut","endAllInteractions","frameElement","parentDoc","ownerDocument","parentWindow","defaultView","error","windowParentError","_iterator3","_isArray3","_i3","_ref3","nodeContains","documents","withinLimit","withinInteractionLimit","./InteractEvent","./utils","./utils/browser","./utils/interactionFinder",5,6,"checkAxis","thisAxis","defaults","max","Infinity","maxPerElement","snap","restrict","autoScroll","getCursor","absX","absY","targetAxis","getDraggable","selector","elements","useMatchesSelectorPolyfill","querySelectorAll","inContext","testIgnore","testAllow","matchesSelector","elementInteractable","get","selectorInteractable","forEachSelector","dragEvent","draggable","merge","../InteractEvent","../Interactable","../Interaction","../defaultOptions","../scope","../utils","../utils/browser","./base",7,"collectDrops","drops","current","drop","accept","dropElements","currentElement","dropzones","fireActiveDrops","prevElement","activeDrops","setActiveDrops","dragElement","possibleDrops","rects","getDrop","validDrops","dynamicDrop","j","dropCheck","dropIndex","indexOfDeepestElement","dropzone","getDropEvents","pointerEvent","dropEvents","enter","leave","activate","deactivate","dropElement","prevDropElement","prevDropTarget","dragLeave","prevDropzone","dropTarget","dragEnter","dragmove","fireDropEvents","draggableElement","dropResult","_ref5","_ref6","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","isNumber","min","dropped","dropOverlap","horizontal","vertical","dragRect","cx","cy","overlapArea","overlapRatio","_ref7","_ref8",8,"gesture","gestureEvent","ds","startDistance","prevDistance","distance","startAngle","prevAngle","scale","isNaN","gesturable","arg","touches","touchDistance","box","touchBBox","touchAngle","da","prevScale",9,"checkResizeEdge","interactableElement","margin","matchesUpTo","resize","square","preserveAspectRatio","NaN","invert","resizeOptions","resizeEdges","edge","axes","cursors","isIe9OrOlder","xy","topleft","bottomright","topright","bottomleft","cursorKey","edgeNames","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","restricted","previous","delta","deltaRect","invertible","originalEdges","swap","resizable","resizeAxes",10,"isWindow","domUtils","container","isScrolling","prevTime","scroll","scrollBy","scrollLeft","scrollTop","check","onInteractionMove","innerWidth","innerHeight","getElementClientRect","./Interaction","./defaultOptions","./utils/raf","./utils/window",11,"validateSelector","matchElements","match","matchElement","getActionInfo","pushMatches","actionInfo","prepare",12,"allowResume","_holdDuration",13,"preventImmediateMove","delayTimer","setTimeout",14,"./actions/drag","./actions/drop","./actions/gesture","./actions/resize","./autoScroll","./autoStart","./delay.js","./interact","./legacyBrowsers","./modifiers/restrict","./modifiers/snap","./pointerEvents",15,"maxInteractions","indexOfElement","callback","ret","isSet","debug","getPointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","closest","./Interactable",16,"onIE8Dblclick","iFinder","prevTap","pointerEvents","collectEventTargets","toString","Object","obj","String","replace","isIE8",17,"offsets","setOffset","coordsArg","requireEndOnly","result","changed","currentStatus","reset","../utils/extend",18,"endOnly","restriction","elementRect","restrictOptions","offset","pageCoords","useStatusXY","restrictedX","restrictedY","modifiedX","modifiedY",19,"range","targets","relativePoints","snapOptions","snapOffset","relativeX","relativeY","realX","realY","offsetX","offsetY","snapTarget","inRange","snapChanged","snappedX","snappedY","createSnapGrid","grid","gridx","round","gridy","newX","newY","../interact",20,"preventOriginalDefault","originalEvent","firePointers","interval","createNewDoubleTap","pointerId","tapTime","doubleTap","collectSelectors","els","createSignalListener","simpleSignals","simpleEvents","eventCopy",21,"maxActions","activeInteractions","targetCount","targetElementCount","otherAction","prefixedPropREs","./utils/domObjects",22,"Signals","targetListeners","./arr",23,"array","source",24,"domObjects","DocumentTouch","isOperaMobile","navigator","appName","userAgent","isIOS7","platform","appVersion","all","atob","prefixedMatchesSelector","Element","MSPointerEvent","over","./domObjects","./isType","./window",25,"blank","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch",26,"parent","child","parentNode","node","isDocFrag","host","matchesSelectorPolyfill","elems","nodeList","realWindow","deepestZoneParents","dropzoneParents","deepestZone","unshift","ownerSVGElement","parents","lastChild","previousSibling","limit","correspondingUseElement","getScrollXY","relevantWindow","scrollX","scrollY","clientRect","getBoundingClientRect","getClientRects","_scroll","./browser",27,"elementIndex","typeCount","attachedListeners","useAttachEvent","supplied","wrapped","useCount","_attachedListeners$elementIndex","listenerIndex","wrappedListener","srcElement","preventDef","stopProp","stopImmProp","addEvent","removeEvent","hasOwnProperty","matchFound","fn","useCap","fakeEvent","returnValue","cancelBubble","arr","_elements","_targets","_attachedListeners","./domUtils",28,"dest",29,30,"sqrt",31,"warnOnce","message","warned","console","warn","apply","arguments","_getQBezierValue","p1","p2","p3","iT","startX","startY","cpX","cpY","endX","endY","position","b","c","d","src","./extend","./getOriginXY","./hypot","./pointerUtils","./raf",32,"methodOrder","mouseEvent","details","inertiaResume","_iterator4","_isArray4","_i4","hasPointer","_ref9","_iterator5","_isArray5","_i5","idle","_ref10","_iterator6","_isArray6","_i6","./index",33,"nodeType","thing","./isWindow",34,"Window",35,"dom","pointerUtils","prev","cur","isNativePointer","getXY","identifier","webkit","deprecated","vendor","getTouchPair","average","screenX","screenY","minX","minY","maxX","maxY","atan","dr","drClamped",36,"vendors","lastTime","requestAnimationFrame","currTime","timeToCall",37,"el","createTextNode","wrap","rootNode"],"mappings":"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","file":"interact.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})\n","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n}\nelse {\n  module.exports = require('./src/index');\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})\n({1:[function(require,module,exports){\n/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n} else {\n  module.exports = require('./src/index');\n}\n\n},{\"./src/index\":14,\"./src/utils/window\":37}],2:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar hypot = require('./utils/hypot');\nvar extend = require('./utils/extend');\nvar getOriginXY = require('./utils/getOriginXY');\nvar modifiers = require('./modifiers/base');\nvar scope = require('./scope');\n\nvar signals = new (require('./utils/Signals'))();\n\nvar InteractEvent = (function () {\n  function InteractEvent(interaction, event, action, phase, element, related) {\n    _classCallCheck(this, InteractEvent);\n\n    var target = interaction.target;\n    var deltaSource = (target && target.options || scope.defaultOptions).deltaSource;\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var origin = getOriginXY(target, element);\n    var starting = phase === 'start';\n    var ending = phase === 'end';\n    var coords = starting ? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    var page = extend({}, coords.page);\n    var client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    this.shiftKey = event.shiftKey;\n    this.metaKey = event.metaKey;\n    this.button = event.button;\n    this.buttons = event.buttons;\n    this.target = element;\n    this.relatedTarget = related || null;\n    this.t0 = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type = action + (phase || '');\n    this.interaction = interaction;\n    this.interactable = target;\n\n    for (var i = 0; i < modifiers.names.length; i++) {\n      var modifierName = modifiers.names[i];\n      var modifier = modifiers[modifierName];\n\n      this[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], action, phase);\n    }\n\n    this.pageX = page.x;\n    this.pageY = page.y;\n    this.clientX = client.x;\n    this.clientY = client.y;\n\n    this.x0 = interaction.startCoords.page.x - origin.x;\n    this.y0 = interaction.startCoords.page.y - origin.y;\n    this.clientX0 = interaction.startCoords.client.x - origin.x;\n    this.clientY0 = interaction.startCoords.client.y - origin.y;\n\n    var signalArg = {\n      interaction: interaction,\n      event: event,\n      action: action,\n      phase: phase,\n      element: element,\n      related: related,\n      page: page,\n      client: client,\n      coords: coords,\n      starting: starting,\n      ending: ending,\n      deltaSource: deltaSource,\n      iEvent: this\n    };\n\n    var inertiaStatus = interaction.inertiaStatus;\n\n    if (inertiaStatus.active) {\n      this.detail = 'inertia';\n    }\n\n    signals.fire('set-delta', signalArg);\n    signals.fire(action, signalArg);\n\n    if (starting) {\n      this.timeStamp = interaction.downTimes[0];\n      this.dt = 0;\n      this.duration = 0;\n      this.speed = 0;\n      this.velocityX = 0;\n      this.velocityY = 0;\n    } else if (phase === 'inertiastart') {\n      this.timeStamp = interaction.prevEvent.timeStamp;\n      this.dt = interaction.prevEvent.dt;\n      this.duration = interaction.prevEvent.duration;\n      this.speed = interaction.prevEvent.speed;\n      this.velocityX = interaction.prevEvent.velocityX;\n      this.velocityY = interaction.prevEvent.velocityY;\n    } else {\n      this.timeStamp = new Date().getTime();\n      this.dt = this.timeStamp - interaction.prevEvent.timeStamp;\n      this.duration = this.timeStamp - interaction.downTimes[0];\n\n      if (event instanceof InteractEvent) {\n        var dx = this[sourceX] - interaction.prevEvent[sourceX];\n        var dy = this[sourceY] - interaction.prevEvent[sourceY];\n        var dt = this.dt / 1000;\n\n        this.speed = hypot(dx, dy) / dt;\n        this.velocityX = dx / dt;\n        this.velocityY = dy / dt;\n      }\n      // if normal move or end event, use previous user event coords\n      else {\n          // speed and velocity in pixels per second\n          this.speed = interaction.pointerDelta[deltaSource].speed;\n          this.velocityX = interaction.pointerDelta[deltaSource].vx;\n          this.velocityY = interaction.pointerDelta[deltaSource].vy;\n        }\n    }\n\n    if ((ending || phase === 'inertiastart') && interaction.prevEvent.speed > 600 && this.timeStamp - interaction.prevEvent.timeStamp < 150) {\n\n      var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n      var overlap = 22.5;\n\n      if (angle < 0) {\n        angle += 360;\n      }\n\n      var left = 135 - overlap <= angle && angle < 225 + overlap;\n      var up = 225 - overlap <= angle && angle < 315 + overlap;\n\n      var right = !left && (315 - overlap <= angle || angle < 45 + overlap);\n      var down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\n      this.swipe = {\n        up: up,\n        down: down,\n        left: left,\n        right: right,\n        angle: angle,\n        speed: interaction.prevEvent.speed,\n        velocity: {\n          x: interaction.prevEvent.velocityX,\n          y: interaction.prevEvent.velocityY\n        }\n      };\n    }\n\n    signals.fire('new', signalArg);\n    signals.fire('new-' + action, signalArg);\n  }\n\n  InteractEvent.prototype.preventDefault = function preventDefault() {};\n\n  InteractEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  InteractEvent.prototype.stopPropagation = function stopPropagation() {\n    this.propagationStopped = true;\n  };\n\n  return InteractEvent;\n})();\n\nsignals.on('set-delta', function (_ref) {\n  var iEvent = _ref.iEvent;\n  var interaction = _ref.interaction;\n  var action = _ref.action;\n  var phase = _ref.phase;\n  var ending = _ref.ending;\n  var starting = _ref.starting;\n  var page = _ref.page;\n  var client = _ref.client;\n  var deltaSource = _ref.deltaSource;\n\n  // end event dx, dy is difference between start and end points\n  if (ending) {\n    if (deltaSource === 'client') {\n      iEvent.dx = client.x - interaction.startCoords.client.x;\n      iEvent.dy = client.y - interaction.startCoords.client.y;\n    } else {\n      iEvent.dx = page.x - interaction.startCoords.page.x;\n      iEvent.dy = page.y - interaction.startCoords.page.y;\n    }\n  } else if (starting) {\n    iEvent.dx = 0;\n    iEvent.dy = 0;\n  }\n  // copy properties from previousmove if starting inertia\n  else if (phase === 'inertiastart') {\n      iEvent.dx = interaction.prevEvent.dx;\n      iEvent.dy = interaction.prevEvent.dy;\n    } else {\n      if (deltaSource === 'client') {\n        iEvent.dx = client.x - interaction.prevEvent.clientX;\n        iEvent.dy = client.y - interaction.prevEvent.clientY;\n      } else {\n        iEvent.dx = page.x - interaction.prevEvent.pageX;\n        iEvent.dy = page.y - interaction.prevEvent.pageY;\n      }\n    }\n\n  var options = interaction.target.options;\n  var inertiaStatus = interaction.inertiaStatus;\n\n  if (interaction.prevEvent && interaction.prevEvent.detail === 'inertia' && !inertiaStatus.active && options[action].inertia && options[action].inertia.zeroResumeDelta) {\n\n    inertiaStatus.resumeDx += iEvent.dx;\n    inertiaStatus.resumeDy += iEvent.dy;\n\n    iEvent.dx = iEvent.dy = 0;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n\n},{\"./modifiers/base\":17,\"./scope\":21,\"./utils/Signals\":22,\"./utils/extend\":28,\"./utils/getOriginXY\":29,\"./utils/hypot\":30}],3:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar isType = require('./utils/isType');\nvar events = require('./utils/events');\nvar extend = require('./utils/extend');\nvar actions = require('./actions/base');\nvar scope = require('./scope');\n\nvar _require = require('./utils/domUtils');\n\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./utils/arr');\n\nvar indexOf = _require2.indexOf;\nvar contains = _require2.contains;\n\nvar signals = new (require('./utils/Signals'))();\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\n\nvar Interactable = (function () {\n  function Interactable(target, options) {\n    _classCallCheck(this, Interactable);\n\n    this.target = target;\n    this._context = scope.document;\n    this._iEvents = this._iEvents || {};\n\n    var _window = undefined;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      var context = options && options.context;\n\n      _window = context ? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node ? context instanceof _window.Node : isType.isElement(context) || context === _window.document)) {\n\n        this._context = context;\n      }\n    } else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target: target,\n      options: options,\n      interactable: this,\n      win: _window\n    });\n\n    if (this._doc !== scope.document) {\n      scope.signals.fire('listen-to-document', {\n        doc: this._doc,\n        win: _window\n      });\n    }\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  Interactable.prototype.setOnEvents = function setOnEvents(action, phases) {\n    var onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)) {\n      this[onAction + 'start'] = phases.onstart;\n    }\n    if (isType.isFunction(phases.onmove)) {\n      this[onAction + 'move'] = phases.onmove;\n    }\n    if (isType.isFunction(phases.onend)) {\n      this[onAction + 'end'] = phases.onend;\n    }\n    if (isType.isFunction(phases.oninertiastart)) {\n      this[onAction + 'inertiastart'] = phases.oninertiastart;\n    }\n\n    return this;\n  };\n\n  Interactable.prototype.setPerAction = function setPerAction(action, options) {\n    // for all the default per-action options\n    for (var option in options) {\n      // if this option exists for this action\n      if (option in scope.defaultOptions[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(scope.defaultOptions.perAction[option]) && 'enabled' in scope.defaultOptions.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false ? false : true;\n          }\n        } else if (isType.isBool(options[option]) && isType.isObject(scope.defaultOptions.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        } else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  };\n\n  Interactable.prototype.getAction = function getAction(pointer, event, interaction, element) {\n    var action = this.defaultActionChecker(pointer, event, interaction, element);\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction);\n    }\n\n    return action;\n  };\n\n  /*\\\n   * Interactable.actionChecker\n   [ method ]\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n   = (Function | Interactable) The checker function or this Interactable\n   *\n   | interact('.resize-drag')\n   |   .resizable(true)\n   |   .draggable(true)\n   |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   |\n   |   if (interact.matchesSelector(event.target, '.drag-handle') {\n   |     // force drag with handle target\n   |     action.name = drag;\n   |   }\n   |   else {\n   |     // resize from the top and right edges\n   |     action.name  = 'resize';\n   |     action.edges = { top: true, right: true };\n   |   }\n   |\n   |   return action;\n   | });\n  \\*/\n\n  Interactable.prototype.actionChecker = function actionChecker(checker) {\n    if (isType.isFunction(checker)) {\n      this.options.actionChecker = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.actionChecker;\n\n      return this;\n    }\n\n    return this.options.actionChecker;\n  };\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n\n  Interactable.prototype.getRect = function getRect(element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !isType.isElement(element)) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  };\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n\n  Interactable.prototype.rectChecker = function rectChecker(checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  };\n\n  /*\\\n   * Interactable.styleCursor\n   [ method ]\n   *\n   * Returns or sets whether the action that would be performed when the\n   * mouse on the element are checked on `mousemove` so that the cursor\n   * may be styled appropriately\n   *\n   - newValue (boolean) #optional\n   = (boolean | Interactable) The current setting or this Interactable\n  \\*/\n\n  Interactable.prototype.styleCursor = function styleCursor(newValue) {\n    if (isType.isBool(newValue)) {\n      this.options.styleCursor = newValue;\n\n      return this;\n    }\n\n    if (newValue === null) {\n      delete this.options.styleCursor;\n\n      return this;\n    }\n\n    return this.options.styleCursor;\n  };\n\n  /*\\\n   * Interactable.preventDefault\n   [ method ]\n   *\n   * Returns or sets whether to prevent the browser's default behaviour\n   * in response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   - newValue (string) #optional `true`, `false` or `'auto'`\n   = (string | Interactable) The current setting or this Interactable\n  \\*/\n\n  Interactable.prototype.preventDefault = function preventDefault(newValue) {\n    if (/^(always|never|auto)$/.test(newValue)) {\n      this.options.preventDefault = newValue;\n      return this;\n    }\n\n    if (isType.isBool(newValue)) {\n      this.options.preventDefault = newValue ? 'always' : 'never';\n      return this;\n    }\n\n    return this.options.preventDefault;\n  };\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n\n  Interactable.prototype.origin = function origin(newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    } else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  };\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n\n  Interactable.prototype.deltaSource = function deltaSource(newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  };\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n\n  Interactable.prototype.context = function context() {\n    return this._context;\n  };\n\n  /*\\\n   * Interactable.ignoreFrom\n   [ method ]\n   *\n   * If the target of the `mousedown`, `pointerdown` or `touchstart`\n   * event or any of it's parents match the given CSS selector or\n   * Element, no drag/resize/gesture is started.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n   = (string | Element | object) The current ignoreFrom value or this Interactable\n   **\n   | interact(element, { ignoreFrom: document.getElementById('no-action') });\n   | // or\n   | interact(element).ignoreFrom('input, textarea, a');\n  \\*/\n\n  Interactable.prototype.ignoreFrom = function ignoreFrom(newValue) {\n    if (isType.trySelector(newValue)) {\n      // CSS selector to match event.target\n      this.options.ignoreFrom = newValue;\n      return this;\n    }\n\n    if (isType.isElement(newValue)) {\n      // specific element\n      this.options.ignoreFrom = newValue;\n      return this;\n    }\n\n    return this.options.ignoreFrom;\n  };\n\n  /*\\\n   * Interactable.allowFrom\n   [ method ]\n   *\n   * A drag/resize/gesture is started only If the target of the\n   * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n   * parents match the given CSS selector or Element.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n   = (string | Element | object) The current allowFrom value or this Interactable\n   **\n   | interact(element, { allowFrom: document.getElementById('drag-handle') });\n   | // or\n   | interact(element).allowFrom('.handle');\n  \\*/\n\n  Interactable.prototype.allowFrom = function allowFrom(newValue) {\n    if (isType.trySelector(newValue)) {\n      // CSS selector to match event.target\n      this.options.allowFrom = newValue;\n      return this;\n    }\n\n    if (isType.isElement(newValue)) {\n      // specific element\n      this.options.allowFrom = newValue;\n      return this;\n    }\n\n    return this.options.allowFrom;\n  };\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n\n  Interactable.prototype.fire = function fire(iEvent) {\n    if (!(iEvent && iEvent.type) || !contains(scope.eventTypes, iEvent.type)) {\n      return this;\n    }\n\n    var listeners = undefined;\n    var onEvent = 'on' + iEvent.type;\n\n    // Interactable#on() listeners\n    if (iEvent.type in this._iEvents) {\n      listeners = this._iEvents[iEvent.type];\n\n      for (var i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    // interactable.onevent listener\n    if (isType.isFunction(this[onEvent])) {\n      this[onEvent](iEvent);\n    }\n\n    // interact.on() listeners\n    if (iEvent.type in scope.globalEvents && (listeners = scope.globalEvents[iEvent.type])) {\n\n      for (var i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.on = function on(eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this.on(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this.on(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // convert to boolean\n    useCapture = useCapture ? true : false;\n\n    if (contains(scope.eventTypes, eventType)) {\n      // if this type of event was never bound to this Interactable\n      if (!(eventType in this._iEvents)) {\n        this._iEvents[eventType] = [listener];\n      } else {\n        this._iEvents[eventType].push(listener);\n      }\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n        events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n      } else {\n        events.add(this.target, eventType, listener, useCapture);\n      }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.off = function off(eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this.off(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this.off(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n    // convert to boolean\n    useCapture = useCapture ? true : false;\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(scope.eventTypes, eventType)) {\n      var eventList = this._iEvents[eventType];\n      var index = eventList ? indexOf(eventList, listener) : -1;\n\n      if (index !== -1) {\n        this._iEvents[eventType].splice(index, 1);\n      }\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n        events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n      }\n      // remove listener from this Interatable's element\n      else {\n          events.remove(this.target, eventType, listener, useCapture);\n        }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.set = function set(options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, scope.defaultOptions.base);\n\n    var perActions = extend({}, scope.defaultOptions.perAction);\n\n    for (var actionName in actions.methodDict) {\n      var methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, scope.defaultOptions[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    var settings = ['accept', 'actionChecker', 'allowFrom', 'deltaSource', 'dropChecker', 'ignoreFrom', 'origin', 'preventDefault', 'rectChecker', 'styleCursor'];\n\n    for (var i = 0, len = settings.length; i < len; i++) {\n      var setting = settings[i];\n\n      this.options[setting] = scope.defaultOptions.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n\n  Interactable.prototype.unset = function unset() {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (var type in events.delegatedEvents) {\n        var delegated = events.delegatedEvents[type];\n\n        for (var i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts.splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    } else {\n      events.remove(this, 'all');\n      if (isType.isElement(this.target) && this.options.styleCursor) {\n        this.target.style.cursor = '';\n      }\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    return scope.interact;\n  };\n\n  return Interactable;\n})();\n\nInteractable.prototype.defaultActionChecker = actions.defaultChecker;\n\nInteractable.signals = signals;\n\nmodule.exports = Interactable;\n\n},{\"./actions/base\":5,\"./scope\":21,\"./utils/Signals\":22,\"./utils/arr\":23,\"./utils/domUtils\":26,\"./utils/events\":27,\"./utils/extend\":28,\"./utils/isType\":33}],4:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar scope = require('./scope');\nvar utils = require('./utils');\nvar InteractEvent = require('./InteractEvent');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar finder = require('./utils/interactionFinder');\nvar modifiers = require('./modifiers/base');\nvar animationFrame = utils.raf;\n\nvar signals = new (require('./utils/Signals'))();\n\nvar listeners = {};\nvar methodNames = ['pointerDown', 'pointerMove', 'pointerUp', 'pointerCancel', 'pointerEnd', 'addPointer', 'removePointer', 'recordPointer'];\n\n// for ignoring browser's simulated mouse events\nvar prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nvar Interaction = (function () {\n  function Interaction() {\n    var _this = this;\n\n    _classCallCheck(this, Interaction);\n\n    this.target = null; // current interactable being interacted with\n    this.element = null; // the target element of the interactable\n\n    this.prepared = { // action that's ready to be fired on next move event\n      name: null,\n      axis: null,\n      edges: null\n    };\n\n    this.inertiaStatus = {\n      active: false,\n      smoothEnd: false,\n      ending: false,\n\n      startEvent: null,\n      upCoords: {},\n\n      xe: 0, ye: 0,\n      sx: 0, sy: 0,\n\n      t0: 0,\n      vx0: 0, vys: 0,\n      duration: 0,\n\n      resumeDx: 0,\n      resumeDy: 0,\n\n      lambda_v0: 0,\n      one_ve_v0: 0,\n      i: null\n    };\n\n    this.boundInertiaFrame = function () {\n      return _this.inertiaFrame();\n    };\n    this.boundSmoothEndFrame = function () {\n      return _this.smoothEndFrame();\n    };\n\n    // keep track of added pointers\n    this.pointers = [];\n    this.pointerIds = [];\n    this.downTargets = [];\n    this.downTimes = [];\n    this.holdTimers = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0\n    };\n\n    this.downEvent = null; // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null; // previous action event\n\n    this.startOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n    this.modifierOffsets = {};\n    this.modifierStatuses = modifiers.resetStatuses({});\n\n    this.pointerIsDown = false;\n    this.pointerWasMoved = false;\n    this._interacting = false;\n\n    this.allowIfDuplicateMove = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  // Check if the current target supports the action.\n  // If so, return the validated action. Otherwise, return null\n\n  Interaction.prototype.setEventXY = function setEventXY(targetObj, pointers) {\n    var pointer = pointers.length > 1 ? utils.pointerAverage(pointers) : pointers[0];\n\n    var tmpXY = {};\n\n    utils.getPageXY(pointer, tmpXY, this);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    utils.getClientXY(pointer, tmpXY, this);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = new Date().getTime();\n  };\n\n  Interaction.prototype.pointerDown = function pointerDown(pointer, event, eventTarget) {\n    var pointerIndex = this.addPointer(pointer);\n\n    this.pointerIsDown = true;\n\n    signals.fire('down', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      pointerIndex: pointerIndex,\n      interaction: this\n    });\n\n    // Check if the down event hits the current inertia target\n    if (this.inertiaStatus.active) {\n      var element = eventTarget;\n\n      // climb up the DOM tree from the event target\n      while (utils.isElement(element)) {\n\n        // if this element is the current inertia target element\n        if (element === this.element\n        // and the prospective action is the same as the ongoing one\n         && validateAction(this.target.getAction(pointer, event, this, this.element), this.target).name === this.prepared.name) {\n\n          // stop inertia so that the next move will be a normal one\n          animationFrame.cancel(this.inertiaStatus.i);\n          this.inertiaStatus.active = false;\n\n          this.checkAndPreventDefault(event, this.target, this.element);\n          return;\n        }\n        element = utils.parentElement(element);\n      }\n    }\n\n    // do nothing if interacting\n    if (this.interacting()) {\n      return;\n    }\n\n    this.pointerIsDown = true;\n    this.downEvent = event;\n\n    this.downTimes[pointerIndex] = new Date().getTime();\n    this.downTargets[pointerIndex] = eventTarget;\n    // update pointer coords for defaultActionChecker to use\n    this.setEventXY(this.curCoords, this.pointers);\n\n    this.pointerWasMoved = false;\n\n    this.checkAndPreventDefault(event, this.target, this.element);\n\n    utils.pointerExtend(this.downPointer, pointer);\n    utils.copyCoords(this.prevCoords, this.curCoords);\n  };\n\n  Interaction.prototype.setStartOffsets = function setStartOffsets(action, interactable, element) {\n    var rect = interactable.getRect(element);\n\n    if (rect) {\n      this.startOffset.left = this.startCoords.page.x - rect.left;\n      this.startOffset.top = this.startCoords.page.y - rect.top;\n\n      this.startOffset.right = rect.right - this.startCoords.page.x;\n      this.startOffset.bottom = rect.bottom - this.startCoords.page.y;\n\n      if (!('width' in rect)) {\n        rect.width = rect.right - rect.left;\n      }\n      if (!('height' in rect)) {\n        rect.height = rect.bottom - rect.top;\n      }\n    } else {\n      this.startOffset.left = this.startOffset.top = this.startOffset.right = this.startOffset.bottom = 0;\n    }\n\n    modifiers.setOffsets(this, interactable, element, rect, this.modifierOffsets);\n  };\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action       (object)  The action to be performed - drag, resize, etc.\n   - interactable (Interactable) The Interactable to target\n   - element      (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n\n  Interaction.prototype.start = function start(action, interactable, element) {\n    if (this.interacting() || !this.pointerIsDown || this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    // set the startCoords if there was no prepared action\n    if (!this.prepared.name) {\n      this.setEventXY(this.startCoords, this.pointers);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target = interactable;\n    this.element = element;\n\n    this.setStartOffsets(action.name, interactable, element, this.modifierOffsets);\n\n    modifiers.resetStatuses(this.modifierStatuses);\n    modifiers.setAll(this, this.startCoords.page, this.modifierStatuses);\n\n    signals.fire('start-' + this.prepared.name, {\n      interaction: this,\n      event: this.downEvent\n    });\n  };\n\n  Interaction.prototype.pointerMove = function pointerMove(pointer, event, eventTarget, curEventTarget, preEnd) {\n    if (this.inertiaStatus.active) {\n      var pageUp = this.inertiaStatus.upCoords.page;\n      var clientUp = this.inertiaStatus.upCoords.client;\n\n      this.setEventXY(this.curCoords, [{\n        pageX: pageUp.x + this.inertiaStatus.sx,\n        pageY: pageUp.y + this.inertiaStatus.sy,\n        clientX: clientUp.x + this.inertiaStatus.sx,\n        clientY: clientUp.y + this.inertiaStatus.sy\n      }]);\n    } else {\n      this.recordPointer(pointer);\n      this.setEventXY(this.curCoords, this.pointers);\n    }\n\n    var duplicateMove = !this.allowIfDuplicateMove && (this.curCoords.page.x === this.prevCoords.page.x && this.curCoords.page.y === this.prevCoords.page.y && this.curCoords.client.x === this.prevCoords.client.x && this.curCoords.client.y === this.prevCoords.client.y);\n\n    this.allowIfDuplicateMove = false;\n\n    var dx = undefined;\n    var dy = undefined;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > scope.pointerMoveTolerance;\n    }\n\n    var signalArg = {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      dx: dx,\n      dy: dy,\n      preEnd: preEnd,\n      duplicate: duplicateMove,\n      interaction: this\n    };\n\n    if (duplicateMove && this.pointerWasMoved && !preEnd) {\n      this.checkAndPreventDefault(event, this.target, this.element);\n    } else if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n      signals.fire('move', signalArg);\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n\n      signals.fire('move-done', signalArg);\n    }\n  };\n\n  Interaction.prototype.pointerUp = function pointerUp(pointer, event, eventTarget, curEventTarget) {\n    var pointerIndex = this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire('up', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      curEventTarget: curEventTarget,\n      interaction: this\n    });\n\n    this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n    this.removePointer(pointer);\n  };\n\n  Interaction.prototype.pointerCancel = function pointerCancel(pointer, event, eventTarget, curEventTarget) {\n    var pointerIndex = this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire('cancel', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      interaction: this\n    });\n\n    this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n    this.removePointer(pointer);\n  };\n\n  // End interact move events and stop auto-scroll unless inertia is enabled\n\n  Interaction.prototype.pointerEnd = function pointerEnd(pointer, event, eventTarget, curEventTarget) {\n    var target = this.target;\n    var options = target && target.options;\n    var inertiaOptions = options && this.prepared.name && options[this.prepared.name].inertia;\n    var inertiaStatus = this.inertiaStatus;\n\n    if (this.interacting()) {\n\n      if (inertiaStatus.active && !inertiaStatus.ending) {\n        return;\n      }\n\n      var now = new Date().getTime();\n      var statuses = {};\n      var page = utils.extend({}, this.curCoords.page);\n      var pointerSpeed = undefined;\n      var inertiaPossible = false;\n      var inertia = false;\n      var smoothEnd = false;\n      var modifierResult = undefined;\n\n      if (this.dragging) {\n        if (options.drag.axis === 'x') {\n          pointerSpeed = Math.abs(this.pointerDelta.client.vx);\n        } else if (options.drag.axis === 'y') {\n          pointerSpeed = Math.abs(this.pointerDelta.client.vy);\n        } else /*options.drag.axis === 'xy'*/{\n            pointerSpeed = this.pointerDelta.client.speed;\n          }\n      } else {\n        pointerSpeed = this.pointerDelta.client.speed;\n      }\n\n      // check if inertia should be started\n      inertiaPossible = inertiaOptions && inertiaOptions.enabled && this.prepared.name !== 'gesture' && event !== inertiaStatus.startEvent;\n\n      inertia = inertiaPossible && now - this.curCoords.timeStamp < 50 && pointerSpeed > inertiaOptions.minSpeed && pointerSpeed > inertiaOptions.endSpeed;\n\n      // smoothEnd\n      if (inertiaPossible && !inertia) {\n        modifiers.resetStatuses(statuses);\n\n        modifierResult = modifiers.setAll(this, page, statuses, true);\n\n        if (modifierResult.shouldMove && modifierResult.locked) {\n          smoothEnd = true;\n        }\n      }\n\n      if (inertia || smoothEnd) {\n        utils.copyCoords(inertiaStatus.upCoords, this.curCoords);\n\n        this.pointers[0] = inertiaStatus.startEvent = new InteractEvent(this, event, this.prepared.name, 'inertiastart', this.element);\n\n        inertiaStatus.t0 = now;\n\n        target.fire(inertiaStatus.startEvent);\n\n        if (inertia) {\n          inertiaStatus.vx0 = this.pointerDelta.client.vx;\n          inertiaStatus.vy0 = this.pointerDelta.client.vy;\n          inertiaStatus.v0 = pointerSpeed;\n\n          this.calcInertia(inertiaStatus);\n\n          utils.extend(page, this.curCoords.page);\n\n          page.x += inertiaStatus.xe;\n          page.y += inertiaStatus.ye;\n\n          modifiers.resetStatuses(statuses);\n\n          modifierResult = modifiers.setAll(this, page, statuses, true, true);\n\n          inertiaStatus.modifiedXe += modifierResult.dx;\n          inertiaStatus.modifiedYe += modifierResult.dy;\n\n          inertiaStatus.i = animationFrame.request(this.boundInertiaFrame);\n        } else {\n          inertiaStatus.smoothEnd = true;\n          inertiaStatus.xe = modifierResult.dx;\n          inertiaStatus.ye = modifierResult.dy;\n\n          inertiaStatus.sx = inertiaStatus.sy = 0;\n\n          inertiaStatus.i = animationFrame.request(this.boundSmoothEndFrame);\n        }\n\n        inertiaStatus.active = true;\n        return;\n      }\n\n      for (var i = 0; i < modifiers.names.length; i++) {\n        // if the endOnly option is true for any modifier\n        if (modifiers[modifiers.names[i]].shouldDo(target, this.prepared.name, true, true)) {\n          // fire a move event at the snapped coordinates\n          this.pointerMove(pointer, event, eventTarget, curEventTarget, true);\n          break;\n        }\n      }\n    }\n\n    if (this.interacting()) {\n      signals.fire('end-' + this.prepared.name, {\n        event: event,\n        interaction: this\n      });\n    }\n\n    this.stop(event);\n  };\n\n  Interaction.prototype.currentAction = function currentAction() {\n    return this._interacting ? this.prepared.name : null;\n  };\n\n  Interaction.prototype.interacting = function interacting() {\n    return this._interacting;\n  };\n\n  Interaction.prototype.stop = function stop(event) {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n\n      var target = this.target;\n\n      if (target.options.styleCursor) {\n        target._doc.documentElement.style.cursor = '';\n      }\n\n      // prevent Default only if were previously interacting\n      if (event && utils.isFunction(event.preventDefault)) {\n        this.checkAndPreventDefault(event, target, this.element);\n      }\n\n      signals.fire('stop-' + this.prepared.name, {\n        event: event,\n        interaction: this\n      });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n    this.inertiaStatus.resumeDx = this.inertiaStatus.resumeDy = 0;\n\n    modifiers.resetStatuses(this.modifierStatuses);\n\n    // remove pointers if their ID isn't in this.pointerIds\n    for (var i = 0; i < this.pointers.length; i++) {\n      if (utils.indexOf(this.pointerIds, utils.getPointerId(this.pointers[i])) === -1) {\n        this.pointers.splice(i, 1);\n      }\n    }\n  };\n\n  Interaction.prototype.inertiaFrame = function inertiaFrame() {\n    var inertiaStatus = this.inertiaStatus;\n    var options = this.target.options[this.prepared.name].inertia;\n    var lambda = options.resistance;\n    var t = new Date().getTime() / 1000 - inertiaStatus.t0;\n\n    if (t < inertiaStatus.te) {\n\n      var progress = 1 - (Math.exp(-lambda * t) - inertiaStatus.lambda_v0) / inertiaStatus.one_ve_v0;\n\n      if (inertiaStatus.modifiedXe === inertiaStatus.xe && inertiaStatus.modifiedYe === inertiaStatus.ye) {\n        inertiaStatus.sx = inertiaStatus.xe * progress;\n        inertiaStatus.sy = inertiaStatus.ye * progress;\n      } else {\n        var quadPoint = utils.getQuadraticCurvePoint(0, 0, inertiaStatus.xe, inertiaStatus.ye, inertiaStatus.modifiedXe, inertiaStatus.modifiedYe, progress);\n\n        inertiaStatus.sx = quadPoint.x;\n        inertiaStatus.sy = quadPoint.y;\n      }\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      inertiaStatus.i = animationFrame.request(this.boundInertiaFrame);\n    } else {\n      inertiaStatus.ending = true;\n\n      inertiaStatus.sx = inertiaStatus.modifiedXe;\n      inertiaStatus.sy = inertiaStatus.modifiedYe;\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n      inertiaStatus.active = inertiaStatus.ending = false;\n    }\n  };\n\n  Interaction.prototype.smoothEndFrame = function smoothEndFrame() {\n    var inertiaStatus = this.inertiaStatus;\n    var t = new Date().getTime() - inertiaStatus.t0;\n    var duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n    if (t < duration) {\n      inertiaStatus.sx = utils.easeOutQuad(t, 0, inertiaStatus.xe, duration);\n      inertiaStatus.sy = utils.easeOutQuad(t, 0, inertiaStatus.ye, duration);\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      inertiaStatus.i = animationFrame.request(this.boundSmoothEndFrame);\n    } else {\n      inertiaStatus.ending = true;\n\n      inertiaStatus.sx = inertiaStatus.xe;\n      inertiaStatus.sy = inertiaStatus.ye;\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n      this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      inertiaStatus.smoothEnd = inertiaStatus.active = inertiaStatus.ending = false;\n    }\n  };\n\n  Interaction.prototype.addPointer = function addPointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  };\n\n  Interaction.prototype.removePointer = function removePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.pointers.splice(index, 1);\n    this.pointerIds.splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes.splice(index, 1);\n    this.holdTimers.splice(index, 1);\n  };\n\n  Interaction.prototype.recordPointer = function recordPointer(pointer) {\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    if (index === -1) {\n      return;\n    }\n\n    this.pointers[index] = pointer;\n  };\n\n  Interaction.prototype.checkAndPreventDefault = function checkAndPreventDefault(event, interactable, element) {\n    if (!(interactable = interactable || this.target)) {\n      return;\n    }\n\n    var options = interactable.options;\n    var prevent = options.preventDefault;\n\n    if (prevent === 'auto' && element && !/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n      var actionOptions = options[this.prepared.name];\n\n      // do not preventDefault on pointerdown if the prepared action is delayed\n      // or it is a drag and dragging can only start from a certain direction -\n      // this allows a touch to pan the viewport if a drag isn't in the right\n      // direction\n      if (/down|start/i.test(event.type) && (this.prepared.name === 'drag' && options.drag.axis !== 'xy' || actionOptions && actionOptions.delay > 0)) {\n\n        return;\n      }\n\n      // with manualStart, only preventDefault while interacting\n      if (actionOptions && actionOptions.manualStart && !this.interacting()) {\n        return;\n      }\n\n      event.preventDefault();\n      return;\n    }\n\n    if (prevent === 'always') {\n      event.preventDefault();\n      return;\n    }\n  };\n\n  Interaction.prototype.calcInertia = function calcInertia(status) {\n    var inertiaOptions = this.target.options[this.prepared.name].inertia;\n    var lambda = inertiaOptions.resistance;\n    var inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n    status.x0 = this.prevEvent.pageX;\n    status.y0 = this.prevEvent.pageY;\n    status.t0 = status.startEvent.timeStamp / 1000;\n    status.sx = status.sy = 0;\n\n    status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n    status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n    status.te = inertiaDur;\n\n    status.lambda_v0 = lambda / status.v0;\n    status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n  };\n\n  Interaction.prototype._updateEventTargets = function _updateEventTargets(target, currentTarget) {\n    this._eventTarget = target;\n    this._curEventTarget = currentTarget;\n  };\n\n  return Interaction;\n})();\n\nfunction validateAction(action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfor (var i = 0, len = methodNames.length; i < len; i++) {\n  var method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions(method) {\n  return function (event) {\n    var eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    var curEventTarget = utils.getActualElement(event.currentTarget);\n    var matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (var _iterator = event.changedTouches, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var pointer = _ref;\n\n        var interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    } else {\n      var invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (var i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || new Date().getTime() - prevTouchTime < 500;\n      }\n\n      if (!invalidPointer) {\n        var interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = /mouse/i.test(event.pointerType || event.type)\n          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n           || event.pointerType === 4;\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (var _iterator2 = matches, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var pointer = _ref2[0];\n      var interaction = _ref2[1];\n\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  };\n}\n\nscope.signals.on('listen-to-document', function (_ref4) {\n  var doc = _ref4.doc;\n  var win = _ref4.win;\n\n  var pEventTypes = browser.pEventTypes;\n\n  // add delegate event listener\n  for (var eventType in scope.delegatedEvents) {\n    events.add(doc, eventType, events.delegateListener);\n    events.add(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  if (scope.PointerEvent) {\n    events.add(doc, pEventTypes.down, listeners.pointerDown);\n    events.add(doc, pEventTypes.move, listeners.pointerMove);\n    events.add(doc, pEventTypes.move, listeners.pointerHover);\n    events.add(doc, pEventTypes.out, listeners.pointerOut);\n    events.add(doc, pEventTypes.up, listeners.pointerUp);\n    events.add(doc, pEventTypes.cancel, listeners.pointerCancel);\n  } else {\n    events.add(doc, 'mousedown', listeners.pointerDown);\n    events.add(doc, 'mousemove', listeners.pointerMove);\n    events.add(doc, 'mousemove', listeners.pointerHover);\n    events.add(doc, 'mouseup', listeners.pointerUp);\n    events.add(doc, 'mouseout', listeners.pointerOut);\n\n    events.add(doc, 'touchstart', listeners.pointerDown);\n    events.add(doc, 'touchmove', listeners.pointerMove);\n    events.add(doc, 'touchend', listeners.pointerUp);\n    events.add(doc, 'touchcancel', listeners.pointerCancel);\n  }\n\n  events.add(win, 'blur', scope.endAllInteractions);\n\n  try {\n    if (win.frameElement) {\n      var parentDoc = win.frameElement.ownerDocument;\n      var parentWindow = parentDoc.defaultView;\n\n      events.add(parentDoc, 'mouseup', listeners.pointerEnd);\n      events.add(parentDoc, 'touchend', listeners.pointerEnd);\n      events.add(parentDoc, 'touchcancel', listeners.pointerEnd);\n      events.add(parentDoc, 'pointerup', listeners.pointerEnd);\n      events.add(parentDoc, 'MSPointerUp', listeners.pointerEnd);\n      events.add(parentWindow, 'blur', scope.endAllInteractions);\n    }\n  } catch (error) {\n    scope.windowParentError = error;\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  events.add(doc, 'dragstart', function (event) {\n    for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.element && (interaction.element === event.target || utils.nodeContains(interaction.element, event.target))) {\n\n        interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n        return;\n      }\n    }\n  });\n\n  scope.documents.push(doc);\n  events.documents.push(doc);\n});\n\nscope.signals.fire('listen-to-document', {\n  win: scope.window,\n  doc: scope.document\n});\n\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.withinLimit = scope.withinInteractionLimit;\nInteraction.validateAction = validateAction;\nInteraction.signals = signals;\n\nmodule.exports = Interaction;\n\n},{\"./InteractEvent\":2,\"./modifiers/base\":17,\"./scope\":21,\"./utils\":31,\"./utils/Signals\":22,\"./utils/browser\":24,\"./utils/events\":27,\"./utils/interactionFinder\":32}],5:[function(require,module,exports){\nvar actions = {\n  defaultChecker: function (pointer, event, interaction, element) {\n    var rect = this.getRect(element);\n    var action = null;\n\n    for (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var actionName = _ref;\n\n      action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n      if (action) {\n        return action;\n      }\n    }\n  },\n\n  names: [],\n  methodDict: {}\n};\n\nmodule.exports = actions;\n\n},{}],6:[function(require,module,exports){\nvar base = require('./base');\nvar scope = require('../scope');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drag = {\n  defaults: {\n    enabled: false,\n    manualStart: true,\n    max: Infinity,\n    maxPerElement: 1,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    axis: 'xy'\n  },\n\n  checker: function (pointer, event, interactable) {\n    return interactable.options.drag.enabled ? { name: 'drag' } : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  }\n};\n\nInteraction.signals.on('before-start-drag', function (_ref) {\n  var interaction = _ref.interaction;\n  var eventTarget = _ref.eventTarget;\n  var dx = _ref.dx;\n  var dy = _ref.dy;\n\n  // check if a drag is in the correct axis\n  var absX = Math.abs(dx);\n  var absY = Math.abs(dy);\n  var targetAxis = interaction.target.options.drag.axis;\n  var axis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\n  // if the movement isn't in the axis of the interactable\n  if (axis !== 'xy' && targetAxis !== 'xy' && targetAxis !== axis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n      (function () {\n\n        var getDraggable = function (interactable, selector, context) {\n          var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n          if (interactable === interaction.target) {\n            return;\n          }\n\n          if (scope.inContext(interactable, eventTarget) && !interactable.options.drag.manualStart && !scope.testIgnore(interactable, element, eventTarget) && scope.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, elements) && interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element).name === 'drag' && checkAxis(axis, interactable) && scope.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n            return interactable;\n          }\n        };\n\n        var element = eventTarget;\n\n        // check all interactables\n        while (utils.isElement(element)) {\n          var elementInteractable = scope.interactables.get(element);\n\n          if (elementInteractable && elementInteractable !== interaction.target && !elementInteractable.options.drag.manualStart && elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element).name === 'drag' && checkAxis(axis, elementInteractable)) {\n\n            interaction.prepared.name = 'drag';\n            interaction.target = elementInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          var selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n          if (selectorInteractable) {\n            interaction.prepared.name = 'drag';\n            interaction.target = selectorInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          element = utils.parentElement(element);\n        }\n      })();\n    }\n  }\n});\n\nInteraction.signals.on('start-drag', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('move-drag', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('end-drag', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var event = _ref4.event;\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nfunction checkAxis(axis, interactable) {\n  if (!interactable) {\n    return false;\n  }\n\n  var thisAxis = interactable.options.drag.axis;\n\n  return axis === 'xy' || thisAxis === 'xy' || thisAxis === axis;\n}\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     axis: 'x' || 'y' || 'xy',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false ? false : true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.drag.axis = options.axis;\n    } else if (options.axis === null) {\n      delete this.options.drag.axis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nbase.drag = drag;\nbase.names.push('drag');\nutils.merge(scope.eventTypes, ['dragstart', 'dragmove', 'draginertiastart', 'dragend']);\nbase.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":12,\"../scope\":21,\"../utils\":31,\"../utils/browser\":24,\"./base\":5}],7:[function(require,module,exports){\nvar base = require('./base');\nvar utils = require('../utils');\nvar scope = require('../scope');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drop = {\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer'\n  }\n};\n\nInteraction.signals.on('start-drag', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements = [];\n  interaction.activeDrops.rects = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  var dragEvent = interaction.prevEvent;\n  var dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new-drag', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var iEvent = _ref3.iEvent;\n  var event = _ref3.event;\n\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return;\n  }\n\n  var draggableElement = interaction.element;\n  var dragEvent = iEvent;\n  var dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('move-drag', function (_ref4) {\n  var interaction = _ref4.interaction;\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('end-drag', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('stop-drag', function (_ref6) {\n  var interaction = _ref6.interaction;\n\n  interaction.activeDrops.dropzones = interaction.activeDrops.elements = interaction.activeDrops.rects = interaction.dropEvents = null;\n});\n\nfunction collectDrops(interaction, element) {\n  var drops = [];\n  var elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var _iterator = scope.interactables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var current = _ref;\n\n    if (!current.options.drop.enabled) {\n      continue;\n    }\n\n    var accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if (utils.isElement(accept) && accept !== element || utils.isString(accept) && !utils.matchesSelector(element, accept)) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    var dropElements = utils.isString(current.target) ? current._context.querySelectorAll(current.target) : [current.target];\n\n    for (var i = 0; i < dropElements.length; i++) {\n      var currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements: elements,\n    dropzones: drops\n  };\n}\n\nfunction fireActiveDrops(interaction, event) {\n  var prevElement = undefined;\n\n  // loop through all active dropzones and trigger event\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    var current = interaction.activeDrops.dropzones[i];\n    var currentElement = interaction.activeDrops.elements[i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops(interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  var possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements = possibleDrops.elements;\n  interaction.activeDrops.rects = [];\n\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] = interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop(dragEvent, event, dragElement) {\n  var interaction = dragEvent.interaction;\n  var validDrops = [];\n\n  if (scope.dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    var current = interaction.activeDrops.dropzones[j];\n    var currentElement = interaction.activeDrops.elements[j];\n    var rect = interaction.activeDrops.rects[j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect) ? currentElement : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  var dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element: interaction.activeDrops.elements[dropIndex] || null\n  };\n}\n\nfunction getDropEvents(interaction, pointerEvent, dragEvent) {\n  var dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = {\n        dragEvent: dragEvent,\n        interaction: interaction,\n        target: interaction.prevDropElement,\n        dropzone: interaction.prevDropTarget,\n        relatedTarget: dragEvent.target,\n        draggable: dragEvent.interactable,\n        timeStamp: dragEvent.timeStamp,\n        type: 'dragleave'\n      };\n\n      dragEvent.dragLeave = interaction.prevDropElement;\n      dragEvent.prevDropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent: dragEvent,\n        interaction: interaction,\n        target: interaction.dropElement,\n        dropzone: interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable: dragEvent.interactable,\n        timeStamp: dragEvent.timeStamp,\n        type: 'dragenter'\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = {\n      dragEvent: dragEvent,\n      interaction: interaction,\n      target: interaction.dropElement,\n      dropzone: interaction.dropTarget,\n      relatedTarget: dragEvent.target,\n      draggable: dragEvent.interactable,\n      timeStamp: dragEvent.timeStamp,\n      type: 'drop'\n    };\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = {\n      dragEvent: dragEvent,\n      interaction: interaction,\n      target: null,\n      dropzone: null,\n      relatedTarget: dragEvent.target,\n      draggable: dragEvent.interactable,\n      timeStamp: dragEvent.timeStamp,\n      type: 'dropactivate'\n    };\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = {\n      dragEvent: dragEvent,\n      interaction: interaction,\n      target: null,\n      dropzone: null,\n      relatedTarget: dragEvent.target,\n      draggable: dragEvent.interactable,\n      timeStamp: dragEvent.timeStamp,\n      type: 'dropdeactivate'\n    };\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = {\n      dragEvent: dragEvent,\n      interaction: interaction,\n      target: interaction.dropElement,\n      dropzone: interaction.dropTarget,\n      relatedTarget: dragEvent.target,\n      draggable: dragEvent.interactable,\n      dragmove: dragEvent,\n      timeStamp: dragEvent.timeStamp,\n      type: 'dropmove'\n    };\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents(interaction, dropEvents) {\n  if (dropEvents.leave) {\n    interaction.prevDropTarget.fire(dropEvents.leave);\n  }\n  if (dropEvents.enter) {\n    interaction.dropTarget.fire(dropEvents.enter);\n  }\n  if (dropEvents.drop) {\n    interaction.dropTarget.fire(dropEvents.drop);\n  }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false ? false : true;\n\n    if (utils.isFunction(options.ondrop)) {\n      this.ondrop = options.ondrop;\n    }\n    if (utils.isFunction(options.ondropactivate)) {\n      this.ondropactivate = options.ondropactivate;\n    }\n    if (utils.isFunction(options.ondropdeactivate)) {\n      this.ondropdeactivate = options.ondropdeactivate;\n    }\n    if (utils.isFunction(options.ondragenter)) {\n      this.ondragenter = options.ondragenter;\n    }\n    if (utils.isFunction(options.ondragleave)) {\n      this.ondragleave = options.ondragleave;\n    }\n    if (utils.isFunction(options.ondropmove)) {\n      this.ondropmove = options.ondropmove;\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    } else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  var dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return this.options.drop.checker ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement) : false;\n  }\n\n  var dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    var origin = utils.getOriginXY(draggable, draggableElement);\n    var page = utils.getPageXY(dragEvent);\n    var horizontal = undefined;\n    var vertical = undefined;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = page.x > rect.left && page.x < rect.right;\n    vertical = page.y > rect.top && page.y < rect.bottom;\n\n    dropped = horizontal && vertical;\n  }\n\n  var dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    var cx = dragRect.left + dragRect.width / 2;\n    var cy = dragRect.top + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    var overlapArea = Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top));\n\n    var overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function (_ref7) {\n  var interactable = _ref7.interactable;\n\n  interactable.dropzone(false);\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement = null; // the element at the time of checking\n  interaction.prevDropTarget = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [], // the dropzones that are mentioned below\n    elements: [], // elements of dropzones that accept the target draggable\n    rects: [] };\n});\n\n// the rects of the elements mentioned above\nInteraction.signals.on('stop', function (_ref8) {\n  var interaction = _ref8.interaction;\n\n  interaction.dropTarget = interaction.dropElement = interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\nutils.merge(scope.eventTypes, ['dragenter', 'dragleave', 'dropactivate', 'dropdeactivate', 'dropmove', 'drop']);\nbase.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":12,\"../scope\":21,\"../utils\":31,\"./base\":5}],8:[function(require,module,exports){\nvar base = require('./base');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar scope = require('../scope');\nvar defaultOptions = require('../defaultOptions');\n\nvar gesture = {\n  defaults: {\n    manualStart: false,\n    enabled: false,\n    max: Infinity,\n    maxPerElement: 1,\n\n    restrict: null\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  }\n};\n\nInteraction.signals.on('start-gesture', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('move-gesture', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (!interaction.pointerIds.length) {\n    return interaction.prevEvent;\n  }\n\n  var gestureEvent = undefined;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity && gestureEvent.scale !== null && gestureEvent.scale !== undefined && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('end-gesture', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false ? false : true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('gesture', function (arg) {\n  if (arg.action !== 'gesture') {\n    return;\n  }\n\n  var interaction = arg.interaction;\n  var iEvent = arg.iEvent;\n  var starting = arg.starting;\n  var ending = arg.ending;\n  var deltaSource = arg.deltaSource;\n\n  var pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = 1;\n    iEvent.ds = 0;\n    iEvent.angle = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da = 0;\n  } else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box = interaction.prevEvent.box;\n    iEvent.scale = interaction.prevEvent.scale;\n    iEvent.ds = iEvent.scale - 1;\n    iEvent.angle = interaction.prevEvent.angle;\n    iEvent.da = iEvent.angle - interaction.gesture.startAngle;\n  } else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0, // distance between two touches of touchStart\n    prevDistance: 0,\n    distance: 0,\n\n    scale: 1, // gesture.distance / gesture.startDistance\n\n    startAngle: 0, // angle of line joining two touches\n    prevAngle: 0 };\n});\n\n// angle of the previous gesture event\nbase.gesture = gesture;\nbase.names.push('gesture');\nutils.merge(scope.eventTypes, ['gesturestart', 'gesturemove', 'gestureinertiastart', 'gestureend']);\nbase.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":12,\"../scope\":21,\"../utils\":31,\"./base\":5}],9:[function(require,module,exports){\nvar base = require('./base');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar scope = require('../scope');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar resize = {\n  defaults: {\n    enabled: false,\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none'\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) {\n      return null;\n    }\n\n    var page = utils.extend({}, interaction.curCoords.page);\n    var options = interactable.options;\n\n    if (options.resize.enabled) {\n      var resizeOptions = options.resize;\n      var resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (var edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge, resizeOptions.edges[edge], page, interaction._eventTarget, element, rect, resizeOptions.margin || scope.margin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges\n          };\n        }\n      } else {\n        var right = options.resize.axis !== 'y' && page.x > rect.right - scope.margin;\n        var bottom = options.resize.axis !== 'x' && page.y > rect.bottom - scope.margin;\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : '')\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: browser.isIe9OrOlder ? {\n    x: 'e-resize',\n    y: 's-resize',\n    xy: 'se-resize',\n\n    top: 'n-resize',\n    left: 'w-resize',\n    bottom: 's-resize',\n    right: 'e-resize',\n    topleft: 'se-resize',\n    bottomright: 'se-resize',\n    topright: 'ne-resize',\n    bottomleft: 'ne-resize'\n  } : {\n    x: 'ew-resize',\n    y: 'ns-resize',\n    xy: 'nwse-resize',\n\n    top: 'ns-resize',\n    left: 'ew-resize',\n    bottom: 'ns-resize',\n    right: 'ew-resize',\n    topleft: 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright: 'nesw-resize',\n    bottomleft: 'nesw-resize'\n  },\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    } else if (action.edges) {\n      var cursorKey = '';\n      var edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (var i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  }\n};\n\nInteraction.signals.on('start-resize', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    var startRect = interaction.target.getRect(interaction.element);\n    var resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      var linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top = linkedEdges.top || linkedEdges.left && !linkedEdges.bottom;\n      linkedEdges.left = linkedEdges.left || linkedEdges.top && !linkedEdges.right;\n      linkedEdges.bottom = linkedEdges.bottom || linkedEdges.right && !linkedEdges.top;\n      linkedEdges.right = linkedEdges.right || linkedEdges.bottom && !linkedEdges.left;\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    } else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start: startRect,\n      current: utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous: utils.extend({}, startRect),\n      delta: {\n        left: 0, right: 0, width: 0,\n        top: 0, bottom: 0, height: 0\n      }\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('move-resize', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  var resizeOptions = interaction.target.options.resize;\n  var invert = resizeOptions.invert;\n  var invertible = invert === 'reposition' || invert === 'negate';\n\n  var edges = interaction.prepared.edges;\n\n  if (edges) {\n    var start = interaction.resizeRects.start;\n    var current = interaction.resizeRects.current;\n    var restricted = interaction.resizeRects.restricted;\n    var delta = interaction.resizeRects.delta;\n    var previous = utils.extend(interaction.resizeRects.previous, restricted);\n    var originalEdges = edges;\n\n    var dx = resizeEvent.dx;\n    var dy = resizeEvent.dy;\n\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    if (resizeOptions.preserveAspectRatio) {\n      var resizeStartAspectRatio = interaction.resizeStartAspectRatio;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n        dy = -dx / resizeStartAspectRatio;\n      } else if (originalEdges.left || originalEdges.right) {\n        dy = dx / resizeStartAspectRatio;\n      } else if (originalEdges.top || originalEdges.bottom) {\n        dx = dy * resizeStartAspectRatio;\n      }\n    } else if (resizeOptions.square) {\n      edges = interaction.prepared._linkedEdges;\n\n      if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n        dy = -dx;\n      } else if (originalEdges.left || originalEdges.right) {\n        dy = dx;\n      } else if (originalEdges.top || originalEdges.bottom) {\n        dx = dy;\n      }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top) {\n      current.top += dy;\n    }\n    if (edges.bottom) {\n      current.bottom += dy;\n    }\n    if (edges.left) {\n      current.left += dx;\n    }\n    if (edges.right) {\n      current.right += dx;\n    }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        var swap = undefined;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    } else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left = Math.min(current.left, start.right);\n      restricted.right = Math.max(current.right, start.left);\n    }\n\n    restricted.width = restricted.right - restricted.left;\n    restricted.height = restricted.bottom - restricted.top;\n\n    for (var edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('end-resize', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false ? false : true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    } else if (options.axis === null) {\n      this.options.resize.axis = scope.defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    } else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge(name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) {\n    return false;\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    var width = utils.isNumber(rect.width) ? rect.width : rect.right - rect.left;\n    var height = utils.isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right';\n      } else if (name === 'right') {\n        name = 'left';\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom';\n      } else if (name === 'bottom') {\n        name = 'top';\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n    }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n  ? value === element\n  // otherwise check if element matches value as selector\n  : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('resize', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n\n  if (!interaction.resizeAxes) {\n    return;\n  }\n\n  var options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    } else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  } else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    } else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nbase.resize = resize;\nbase.names.push('resize');\nutils.merge(scope.eventTypes, ['resizestart', 'resizemove', 'resizeinertiastart', 'resizeend']);\nbase.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n\n},{\"../InteractEvent\":2,\"../Interactable\":3,\"../Interaction\":4,\"../defaultOptions\":12,\"../scope\":21,\"../utils\":31,\"../utils/browser\":24,\"./base\":5}],10:[function(require,module,exports){\nvar raf = require('./utils/raf');\nvar getWindow = require('./utils/window').getWindow;\nvar isWindow = require('./utils/isType').isWindow;\nvar domUtils = require('./utils/domUtils');\nvar Interaction = require('./Interaction');\nvar defaultOptions = require('./defaultOptions');\n\nvar autoScroll = {\n  defaults: {\n    enabled: false,\n    container: null, // the item that is scrolled (Window or HTMLElement)\n    margin: 60,\n    speed: 300 },\n\n  // the scroll speed in pixels per second\n  interaction: null,\n  i: null, // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(autoScroll.interaction.element);\n    var now = new Date().getTime();\n    // change in time in seconds\n    var dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    var s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      } else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    var options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function (_ref) {\n    var interaction = _ref.interaction;\n    var pointer = _ref.pointer;\n\n    if (!(interaction.interacting() && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.inertiaStatus.active) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    var top = undefined;\n    var right = undefined;\n    var bottom = undefined;\n    var left = undefined;\n\n    var options = interaction.target.options[interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left = pointer.clientX < autoScroll.margin;\n      top = pointer.clientY < autoScroll.margin;\n      right = pointer.clientX > container.innerWidth - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    } else {\n      var rect = domUtils.getElementClientRect(container);\n\n      left = pointer.clientX < rect.left + autoScroll.margin;\n      top = pointer.clientY < rect.top + autoScroll.margin;\n      right = pointer.clientX > rect.right - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0;\n    autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  }\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('move-done', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n\n},{\"./Interaction\":4,\"./defaultOptions\":12,\"./utils/domUtils\":26,\"./utils/isType\":33,\"./utils/raf\":36,\"./utils/window\":37}],11:[function(require,module,exports){\nvar Interaction = require('./Interaction');\nvar actions = require('./actions/base');\nvar modifiers = require('./modifiers/base');\nvar defaultOptions = require('./defaultOptions');\nvar browser = require('./utils/browser');\nvar scope = require('./scope');\nvar utils = require('./utils');\n\n// mouse move cursor style\nInteraction.signals.on('move', function (_ref) {\n  var interaction = _ref.interaction;\n  var pointer = _ref.pointer;\n  var event = _ref.event;\n  var eventTarget = _ref.eventTarget;\n\n  if (!interaction.mouse || interaction.pointerIsDown) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('down', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  var interaction = arg.interaction;\n  var pointer = arg.pointer;\n  var event = arg.event;\n  var preEnd = arg.preEnd;\n\n  if (!(interaction.pointerIsDown && interaction.pointerWasMoved && interaction.prepared.name)) {\n    return;\n  }\n\n  // ignore movement while inertia is active\n  if (!interaction.inertiaStatus.active || /inertiastart/.test(pointer.type)) {\n\n    // if just starting an action, calculate the pointer speed now\n    if (!interaction.interacting()) {\n      utils.setEventDeltas(interaction.pointerDelta, interaction.prevCoords, interaction.curCoords);\n\n      Interaction.signals.fire('before-start-' + interaction.prepared.name, arg);\n    }\n\n    var starting = !!interaction.prepared.name && !interaction.interacting();\n\n    if (starting && (interaction.target.options[interaction.prepared.name].manualStart || !scope.withinInteractionLimit(interaction.target, interaction.element, interaction.prepared))) {\n      interaction.stop(event);\n      return;\n    }\n\n    if (interaction.prepared.name && interaction.target) {\n      if (starting) {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }\n\n      var modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n      // move if snapping or restriction doesn't prevent it\n      if (modifierResult.shouldMove || starting) {\n        Interaction.signals.fire('move-' + interaction.prepared.name, arg);\n      }\n\n      interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n    }\n  }\n});\n\nfunction validateSelector(interaction, pointer, event, matches, matchElements) {\n  for (var i = 0, len = matches.length; i < len; i++) {\n    var match = matches[i];\n    var matchElement = matchElements[i];\n    var action = Interaction.validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && scope.withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action: action,\n        target: match,\n        element: matchElement\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo(interaction, pointer, event, eventTarget) {\n  var matches = [];\n  var matchElements = [];\n\n  var element = eventTarget;\n  var action = null;\n\n  function pushMatches(interactable, selector, context) {\n    var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    if (scope.inContext(interactable, element) && !scope.testIgnore(interactable, element, eventTarget) && scope.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    var elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable && (action = Interaction.validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable))) {\n      return {\n        element: element,\n        action: action,\n        target: elementInteractable\n      };\n    } else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      var actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentElement(element);\n  }\n\n  return {};\n}\n\nfunction prepare(interaction, _ref3) {\n  var action = _ref3.action;\n  var target = _ref3.target;\n  var element = _ref3.element;\n\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    var cursor = action ? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  interaction.setEventXY(interaction.startCoords, interaction.pointers);\n\n  Interaction.signals.fire('prepared', { interaction: interaction });\n}\n\ndefaultOptions.perAction.manualStart = false;\n\n},{\"./Interaction\":4,\"./actions/base\":5,\"./defaultOptions\":12,\"./modifiers/base\":17,\"./scope\":21,\"./utils\":31,\"./utils/browser\":24}],12:[function(require,module,exports){\nmodule.exports = {\n  base: {\n    accept: null,\n    actionChecker: null,\n    styleCursor: true,\n    preventDefault: 'auto',\n    origin: { x: 0, y: 0 },\n    deltaSource: 'page',\n    allowFrom: null,\n    ignoreFrom: null,\n    checker: null\n  },\n\n  perAction: {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n\n    inertia: {\n      enabled: false,\n      resistance: 10, // the lambda in exponential decay\n      minSpeed: 100, // target speed must be above this for inertia to start\n      endSpeed: 10, // the speed at which inertia is slow enough to stop\n      allowResume: true, // allow resuming an action in inertia phase\n      zeroResumeDelta: true, // if an action is resumed after launch, set dx/dy to 0\n      smoothEndDuration: 300 }\n  },\n\n  // animate to snap/restrict endOnly if there's no inertia\n  _holdDuration: 600\n};\n\n},{}],13:[function(require,module,exports){\nvar Interaction = require('./Interaction');\nvar actions = require('./actions/base');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nInteraction.signals.on('prepared', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(function () {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nfor (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  var _ref;\n\n  if (_isArray) {\n    if (_i >= _iterator.length) break;\n    _ref = _iterator[_i++];\n  } else {\n    _i = _iterator.next();\n    if (_i.done) break;\n    _ref = _i.value;\n  }\n\n  var action = _ref;\n\n  Interaction.signals.on('before-start-' + action, preventImmediateMove);\n}\n\nInteraction.signals.on('move-done', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  if (interaction.pointerWasMoved) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\nfunction preventImmediateMove(_ref4) {\n  var interaction = _ref4.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n}\n\n},{\"./Interaction\":4,\"./actions/base\":5}],14:[function(require,module,exports){\n// browser entry point\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\nrequire('./delay.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// pointerEvents\nrequire('./pointerEvents');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\nrequire('./Interaction');\nrequire('./autoStart');\n\nmodule.exports = require('./interact');\n\n},{\"./Interaction\":4,\"./actions/drag\":6,\"./actions/drop\":7,\"./actions/gesture\":8,\"./actions/resize\":9,\"./autoScroll\":10,\"./autoStart\":11,\"./delay.js\":13,\"./interact\":15,\"./legacyBrowsers\":16,\"./modifiers/restrict\":18,\"./modifiers/snap\":19,\"./pointerEvents\":20}],15:[function(require,module,exports){\n/**\n * interact.js v1.2.5\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n\nvar browser = require('./utils/browser');\nvar events = require('./utils/events');\nvar utils = require('./utils');\nvar scope = require('./scope');\nvar Interactable = require('./Interactable');\n\nscope.dynamicDrop = false;\n\n// Less Precision with touch input\nscope.margin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10;\n\nscope.pointerMoveTolerance = 1;\n\n// Allow this many interactions to happen simultaneously\nscope.maxInteractions = Infinity;\n\n// because Webkit and Opera still use 'mousewheel' event type\nscope.wheelEvent = 'onmousewheel' in scope.document ? 'mousewheel' : 'wheel';\n\nscope.globalEvents = {};\n\nscope.inContext = function (interactable, element) {\n  return interactable._context === element.ownerDocument || utils.nodeContains(interactable._context, element);\n};\n\nscope.testIgnore = function (interactable, interactableElement, element) {\n  var ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  } else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n};\n\nscope.testAllow = function (interactable, interactableElement, element) {\n  var allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) {\n    return true;\n  }\n\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  } else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n};\n\nscope.interactables.indexOfElement = function indexOfElement(target, context) {\n  context = context || scope.document;\n\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    if (interactable.target === target && (!utils.isString(target) || interactable._context === context)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet(element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!utils.isString(interactable.target)) {\n      continue;\n    }\n\n    var ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact(document.getElementById('draggable')).draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // something cool...\n |     })\n |     .autoScroll(true);\n\\*/\nfunction interact(element, options) {\n  return scope.interactables.get(element, options) || new Interactable(element, options);\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator = type, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var eventType = _ref;\n\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(scope.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!scope.globalEvents[type]) {\n      scope.globalEvents[type] = [listener];\n    } else {\n      scope.globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n      events.add(scope.document, type, listener, useCapture);\n    }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator2 = type, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var eventType = _ref2;\n\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(scope.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  } else {\n    var index = undefined;\n\n    if (type in scope.globalEvents && (index = utils.indexOf(scope.globalEvents[type], listener)) !== -1) {\n      scope.globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage = utils.pointerAverage;\ninteract.getTouchBBox = utils.touchBBox;\ninteract.getTouchDistance = utils.touchDistance;\ninteract.getTouchAngle = utils.touchAngle;\n\ninteract.getElementRect = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector = utils.matchesSelector;\ninteract.closest = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (var i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n    //calcRects(dropzones);\n    //}\n\n    scope.dynamicDrop = newValue;\n\n    return interact;\n  }\n  return scope.dynamicDrop;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return scope.pointerMoveTolerance;\n};\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return scope.maxInteractions;\n};\n\nscope.interact = interact;\n\nmodule.exports = interact;\n\n},{\"./Interactable\":3,\"./scope\":21,\"./utils\":31,\"./utils/browser\":24,\"./utils/events\":27}],16:[function(require,module,exports){\nvar scope = require('./scope');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar iFinder = require('./utils/interactionFinder');\n\nvar toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick(event) {\n  var interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) {\n    return;\n  }\n\n  if (interaction.prevTap && event.clientX === interaction.prevTap.clientX && event.clientY === interaction.prevTap.clientY && event.target === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes[0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  scope.signals.on('listen-to-document', function (_ref) {\n    var doc = _ref.doc;\n\n    // For IE's lack of Event#preventDefault\n    events.add(doc, 'selectstart', function (event) {\n      var interaction = scope.interactions[0];\n\n      if (interaction.currentAction()) {\n        interaction.checkAndPreventDefault(event);\n      }\n    });\n\n    if (scope.pointerEvents) {\n      events.add(doc, 'dblclick', onIE8Dblclick);\n    }\n  });\n}\n\nmodule.exports = null;\n\n},{\"./scope\":21,\"./utils/browser\":24,\"./utils/events\":27,\"./utils/interactionFinder\":32}],17:[function(require,module,exports){\nvar extend = require('../utils/extend');\n\nvar modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (var i = 0; i < modifiers.names.length; i++) {\n      var modifierName = modifiers.names[i];\n\n      offsets[modifierName] = modifiers[modifiers.names[i]].setOffset(interaction, interactable, element, rect, interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    var result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true\n    };\n    var target = interaction.target;\n    var coords = extend({}, coordsArg);\n\n    var currentStatus = undefined;\n\n    for (var _iterator = modifiers.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var modifierName = _ref;\n\n      var modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) {\n        continue;\n      }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (var _iterator2 = modifiers.names, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var modifierName = _ref2;\n\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  }\n};\n\nmodule.exports = modifiers;\n\n},{\"../utils/extend\":28}],18:[function(require,module,exports){\nvar modifiers = require('./base');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar restrict = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    restriction: null,\n    elementRect: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var restrictOptions = interactable.options[actionName].restrict;\n\n    return restrictOptions && restrictOptions.enabled && (preEnd || !restrictOptions.endOnly) && (!requireEndOnly || restrictOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    var offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - rect.width * elementRect.left;\n      offset.top = startOffset.top - rect.height * elementRect.top;\n\n      offset.right = startOffset.right - rect.width * (1 - elementRect.right);\n      offset.bottom = startOffset.bottom - rect.height * (1 - elementRect.bottom);\n    } else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var target = interaction.target;\n    var restrictOptions = target && target.options[interaction.prepared.name].restrict;\n    var restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    var page = status.useStatusXY ? { x: status.x, y: status.y } : utils.extend({}, pageCoords);\n\n    page.x -= interaction.inertiaStatus.resumeDx;\n    page.y -= interaction.inertiaStatus.resumeDy;\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    var rect = undefined;\n    var restrictedX = undefined;\n    var restrictedY = undefined;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentElement(interaction.element);\n      } else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      } else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) {\n        return status;\n      }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    var offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n        restrictedX = Math.max(Math.min(rect.x + rect.width - offset.right, page.x), rect.x + offset.left);\n        restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top);\n      } else {\n        restrictedX = Math.max(Math.min(rect.right - offset.right, page.x), rect.left + offset.left);\n        restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top + offset.top);\n      }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var options = interactable.options[actionName].restrict;\n    var elementRect = options && options.elementRect;\n\n    if (modifiers.restrict.shouldDo(interactable, actionName) && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy\n        };\n      }\n    }\n  }\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n\n},{\"../defaultOptions\":12,\"../utils\":31,\"./base\":17}],19:[function(require,module,exports){\nvar modifiers = require('./base');\nvar interact = require('../interact');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range: Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var snapOptions = interactable.options[actionName].snap;\n\n    return snapOptions && snapOptions.enabled && (preEnd || !snapOptions.endOnly) && (!requireEndOnly || snapOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var offsets = [];\n    var origin = utils.getOriginXY(interactable, element);\n    var snapOptions = interactable.options[interaction.prepared.name].snap;\n    var snapOffset = snapOptions && snapOptions.offset === 'startCoords' ? {\n      x: interaction.startCoords.page.x - origin.x,\n      y: interaction.startCoords.page.y - origin.y\n    } : snapOptions && snapOptions.offset || { x: 0, y: 0 };\n\n    if (rect && snapOptions && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (var _iterator = snapOptions.relativePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var relativeX = _ref.x;\n        var relativeY = _ref.y;\n\n        offsets.push({\n          x: startOffset.left - rect.width * relativeX + snapOffset.x,\n          y: startOffset.top - rect.height * relativeY + snapOffset.y\n        });\n      }\n    } else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    var targets = [];\n    var target = undefined;\n    var page = undefined;\n    var i = undefined;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    } else {\n      var origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    page.x -= interaction.inertiaStatus.resumeDx;\n    page.y -= interaction.inertiaStatus.resumeDy;\n\n    var offsets = interaction.modifierOffsets.snap;\n    var len = snapOptions.targets ? snapOptions.targets.length : 0;\n\n    for (var _iterator2 = offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var offsetX = _ref2.x;\n      var offsetY = _ref2.y;\n\n      var relativeX = page.x - offsetX;\n      var relativeY = page.y - offsetY;\n\n      for (var _iterator3 = snapOptions.targets, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var snapTarget = _ref3;\n\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        } else {\n          target = snapTarget;\n        }\n\n        if (!target) {\n          continue;\n        }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? target.x + offsetX : relativeX,\n          y: utils.isNumber(target.y) ? target.y + offsetY : relativeY,\n\n          range: utils.isNumber(target.range) ? target.range : snapOptions.range\n        });\n      }\n    }\n\n    var closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      var range = target.range;\n      var dx = target.x - page.x;\n      var dy = target.y - page.y;\n      var distance = utils.hypot(dx, dy);\n      var inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n      // is the closest target in range?\n      ? closest.inRange && range !== Infinity\n      // the pointer is relatively deeper in this target\n      ? distance / range < closest.distance / closest.range\n      // this target has Infinite range and the closest doesn't\n      : range === Infinity && closest.range !== Infinity ||\n      // OR this target is closer that the previous closest\n      distance < closest.distance :\n      // The other is not in range and the pointer is closer to this target\n      !closest.inRange && distance < closest.distance)) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    var snapChanged = undefined;\n\n    if (closest.target) {\n      snapChanged = status.snappedX !== closest.target.x || status.snappedY !== closest.target.y;\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    } else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = snapChanged || closest.inRange && !status.locked;\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var snapOptions = interactable.options[actionName].snap;\n    var relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range: status.range,\n        locked: status.locked,\n        x: status.snappedX,\n        y: status.snappedY,\n        realX: status.realX,\n        realY: status.realY,\n        dx: status.dx,\n        dy: status.dy\n      };\n    }\n  }\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    var offsetX = 0;\n    var offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    var gridx = Math.round((x - offsetX) / grid.x);\n    var gridy = Math.round((y - offsetY) / grid.y);\n\n    var newX = gridx * grid.x + offsetX;\n    var newY = gridy * grid.y + offsetY;\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n\n},{\"../defaultOptions\":12,\"../interact\":15,\"../utils\":31,\"./base\":17}],20:[function(require,module,exports){\nvar scope = require('./scope');\nvar InteractEvent = require('./InteractEvent');\nvar Interaction = require('./Interaction');\nvar utils = require('./utils');\nvar browser = require('./utils/browser');\n\nvar simpleSignals = ['down', 'up', 'up', 'cancel'];\nvar simpleEvents = ['down', 'up', 'tap', 'cancel'];\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction firePointers(interaction, pointer, event, eventTarget, targets, elements, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  var pointerEvent = {};\n  var i = undefined;\n  // for tap events\n  var interval = undefined;\n  var createNewDoubleTap = undefined;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  } else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault = preventOriginalDefault;\n    pointerEvent.stopPropagation = InteractEvent.prototype.stopPropagation;\n    pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n    pointerEvent.interaction = interaction;\n\n    pointerEvent.timeStamp = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type = eventType;\n    pointerEvent.pointerId = utils.getPointerId(pointer);\n    pointerEvent.pointerType = interaction.mouse ? 'mouse' : !browser.supportsPointerEvent ? 'touch' : utils.isString(pointer.pointerType) ? pointer.pointerType : [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap' && interaction.prevTap.target === pointerEvent.target && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  for (i = 0; i < targets.length; i++) {\n    pointerEvent.currentTarget = elements[i];\n    pointerEvent.interactable = targets[i];\n    targets[i].fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped || pointerEvent.propagationStopped && elements[i + 1] !== pointerEvent.currentTarget) {\n      break;\n    }\n  }\n\n  if (createNewDoubleTap) {\n    var doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  } else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets(interaction, pointer, event, eventTarget, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n  // or if the pointerup target is different to the pointerdown target\n   || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  var targets = [];\n  var elements = [];\n  var element = eventTarget;\n\n  function collectSelectors(interactable, selector, context) {\n    var els = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    if (interactable._iEvents[eventType] && utils.isElement(element) && scope.inContext(interactable, element) && !scope.testIgnore(interactable, element, eventTarget) && scope.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, els)) {\n\n      targets.push(interactable);\n      elements.push(element);\n    }\n  }\n\n  var interact = scope.interact;\n\n  while (element) {\n    if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n      targets.push(interact(element));\n      elements.push(element);\n    }\n\n    scope.interactables.forEachSelector(collectSelectors);\n\n    element = utils.parentElement(element);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, elements, eventType);\n  }\n}\n\nInteraction.signals.on('move', function (_ref) {\n  var interaction = _ref.interaction;\n  var pointer = _ref.pointer;\n  var event = _ref.event;\n  var eventTarget = _ref.eventTarget;\n  var duplicateMove = _ref.duplicateMove;\n\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n  var pointerIndex = _ref2.pointerIndex;\n\n  // copy event to be used in timeout for IE8\n  var eventCopy = browser.isIE8 ? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction, browser.isIE8 ? eventCopy : pointer, eventCopy, eventTarget, 'hold');\n  }, scope.defaultOptions._holdDuration);\n});\n\nfunction createSignalListener(event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction, arg.pointer, arg.event, arg.eventTarget, event);\n  };\n}\n\nfor (var i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null; // the most recent tap event on this interaction\n  interaction.tapTime = 0; // time of the most recent tap event\n});\n\nutils.merge(scope.eventTypes, ['down', 'move', 'up', 'cancel', 'tap', 'doubletap', 'hold']);\n\nmodule.exports = scope.pointerEvents = {\n  firePointers: firePointers,\n  collectEventTargets: collectEventTargets,\n  preventOriginalDefault: preventOriginalDefault\n};\n\n},{\"./InteractEvent\":2,\"./Interaction\":4,\"./scope\":21,\"./utils\":31,\"./utils/browser\":24}],21:[function(require,module,exports){\nvar scope = {};\nvar utils = require('./utils');\n\nscope.defaultOptions = require('./defaultOptions');\nscope.events = require('./utils/events');\n\nscope.signals = new (require('./utils/Signals'))();\n\nutils.extend(scope, require('./utils/window'));\nutils.extend(scope, require('./utils/domObjects'));\n\nscope.documents = []; // all documents being listened to\nscope.eventTypes = []; // all event types specific to interact.js\n\nscope.withinInteractionLimit = function (interactable, element, action) {\n  var options = interactable.options;\n  var maxActions = options[action.name].max;\n  var maxPerElement = options[action.name].maxPerElement;\n  var activeInteractions = 0;\n  var targetCount = 0;\n  var targetElementCount = 0;\n\n  for (var i = 0, len = scope.interactions.length; i < len; i++) {\n    var interaction = scope.interactions[i];\n    var otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) {\n      continue;\n    }\n\n    activeInteractions++;\n\n    if (activeInteractions >= scope.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) {\n      continue;\n    }\n\n    targetCount += otherAction === action.name | 0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return scope.maxInteractions > 0;\n};\n\nscope.endAllInteractions = function (event) {\n  for (var i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].pointerEnd(event, event);\n  }\n};\n\nscope.prefixedPropREs = utils.prefixedPropREs;\n\nscope.signals.on('listen-to-document', function (_ref) {\n  var doc = _ref.doc;\n\n  // if document is already known\n  if (utils.contains(scope.documents, doc)) {\n    // don't call any further signal listeners\n    return false;\n  }\n});\n\nmodule.exports = scope;\n\n},{\"./defaultOptions\":12,\"./utils\":31,\"./utils/Signals\":22,\"./utils/domObjects\":25,\"./utils/events\":27,\"./utils/window\":37}],22:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./arr');\n\nvar indexOf = _require.indexOf;\n\nvar Signals = (function () {\n  function Signals() {\n    _classCallCheck(this, Signals);\n\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  Signals.prototype.on = function on(name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  };\n\n  Signals.prototype.off = function off(name, listener) {\n    if (!this.listeners[name]) {\n      return;\n    }\n\n    var index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  };\n\n  Signals.prototype.fire = function fire(name, arg) {\n    var targetListeners = this.listeners[name];\n\n    if (!targetListeners) {\n      return;\n    }\n\n    for (var i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  };\n\n  return Signals;\n})();\n\nmodule.exports = Signals;\n\n},{\"./arr\":23}],23:[function(require,module,exports){\nfunction indexOf(array, target) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains(array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge(target, source) {\n  for (var i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf: indexOf,\n  contains: contains,\n  merge: merge\n};\n\n},{}],24:[function(require,module,exports){\nvar win = require('./window');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar browser = {\n    // Does the browser support touch input?\n    supportsTouch: !!('ontouchstart' in win.window || win.window.DocumentTouch && domObjects.document instanceof win.DocumentTouch),\n\n    // Does the browser support PointerEvents\n    supportsPointerEvent: !!domObjects.PointerEvent,\n\n    isIE8: 'attachEvent' in win.window && !('addEventListener' in win.window),\n\n    // Opera Mobile must be handled differently\n    isOperaMobile: navigator.appName === 'Opera' && browser.supportsTouch && navigator.userAgent.match('Presto'),\n\n    // scrolling doesn't change the result of getClientRects on iOS 7\n    isIOS7: /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion),\n\n    isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n    // prefix matchesSelector\n    prefixedMatchesSelector: 'matches' in Element.prototype ? 'matches' : 'webkitMatchesSelector' in Element.prototype ? 'webkitMatchesSelector' : 'mozMatchesSelector' in Element.prototype ? 'mozMatchesSelector' : 'oMatchesSelector' in Element.prototype ? 'oMatchesSelector' : 'msMatchesSelector',\n\n    useMatchesSelectorPolyfill: false,\n\n    pEventTypes: domObjects.PointerEvent ? domObjects.PointerEvent === win.window.MSPointerEvent ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n        out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' } : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n        out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' } : null\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n\n},{\"./domObjects\":25,\"./isType\":33,\"./window\":37}],25:[function(require,module,exports){\nvar domObjects = {};\nvar win = require('./window').window;\n\nfunction blank() {}\n\ndomObjects.document = win.document;\ndomObjects.DocumentFragment = win.DocumentFragment || blank;\ndomObjects.SVGElement = win.SVGElement || blank;\ndomObjects.SVGSVGElement = win.SVGSVGElement || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement = win.HTMLElement || win.Element;\n\ndomObjects.Event = win.Event;\ndomObjects.Touch = win.Touch || blank;\ndomObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent;\n\nmodule.exports = domObjects;\n\n},{\"./window\":37}],26:[function(require,module,exports){\nvar win = require('./window');\nvar browser = require('./browser');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (child, selector) {\n    var parent = domUtils.parentElement(child);\n\n    while (isType.isElement(parent)) {\n      if (domUtils.matchesSelector(parent, selector)) {\n        return parent;\n      }\n\n      parent = domUtils.parentElement(parent);\n    }\n\n    return null;\n  },\n\n  parentElement: function (node) {\n    var parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill ? function (element, selector, elems) {\n    elems = elems || element.parentNode.querySelectorAll(selector);\n\n    for (var i = 0, len = elems.length; i < len; i++) {\n      if (elems[i] === element) {\n        return true;\n      }\n    }\n\n    return false;\n  } : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    var deepestZoneParents = [];\n    var dropzoneParents = [];\n    var dropzone = undefined;\n    var deepestZone = elements[0];\n    var index = deepestZone ? 0 : -1;\n    var parent = undefined;\n    var child = undefined;\n    var i = undefined;\n    var n = undefined;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n          deepestZone = dropzone;\n          index = i;\n          continue;\n        }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement && dropzone instanceof domObjects.SVGElement && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      } else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      var parents = [dropzoneParents[n - 1], dropzoneParents[n], deepestZoneParents[n]];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        } else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (domUtils.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentElement(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return element instanceof domObjects.SVGElementInstance ? element.correspondingUseElement : element;\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop\n    };\n  },\n\n  getElementClientRect: function (element) {\n    var clientRect = element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0];\n\n    return clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top\n    };\n  },\n\n  getElementRect: function (element) {\n    var clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      var _scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left += _scroll.x;\n      clientRect.right += _scroll.x;\n      clientRect.top += _scroll.y;\n      clientRect.bottom += _scroll.y;\n    }\n\n    return clientRect;\n  }\n};\n\nmodule.exports = domUtils;\n\n},{\"./browser\":24,\"./domObjects\":25,\"./isType\":33,\"./window\":37}],27:[function(require,module,exports){\nvar arr = require('./arr');\nvar isType = require('./isType');\nvar domUtils = require('./domUtils');\nvar indexOf = arr.indexOf;\nvar contains = arr.contains;\nvar getWindow = require('./window').getWindow;\n\nvar useAttachEvent = 'attachEvent' in window && !('addEventListener' in window);\nvar addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener';\nvar removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener';\nvar on = useAttachEvent ? 'on' : '';\n\nvar elements = [];\nvar targets = [];\nvar attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nvar delegatedEvents = {};\n\nvar documents = [];\n\nfunction add(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push(useAttachEvent ? {\n      supplied: [],\n      wrapped: [],\n      useCount: []\n    } : null);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    var ret = undefined;\n\n    if (useAttachEvent) {\n      var _attachedListeners$elementIndex = attachedListeners[elementIndex];\n      var supplied = _attachedListeners$elementIndex.supplied;\n      var wrapped = _attachedListeners$elementIndex.wrapped;\n      var useCount = _attachedListeners$elementIndex.useCount;\n\n      var listenerIndex = indexOf(supplied, listener);\n\n      var wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault = event.preventDefault || preventDef;\n          event.stopPropagation = event.stopPropagation || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      } else {\n        useCount[listenerIndex]++;\n      }\n    } else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  var wrappedListener = listener;\n  var listeners = undefined;\n  var listenerIndex = undefined;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    var len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (var i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    } else {\n      for (var i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate(selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts: [],\n      listeners: []\n    };\n\n    // add delegate listener functions\n    for (var i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  var delegated = delegatedEvents[type];\n  var index = undefined;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts.push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate(selector, context, type, listener, useCapture) {\n  var delegated = delegatedEvents[type];\n  var matchFound = false;\n  var index = undefined;\n\n  if (!delegated) {\n    return;\n  }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n\n      var listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (var i = listeners.length - 1; i >= 0; i--) {\n        var fn = listeners[i][0];\n        var useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts.splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) {\n        break;\n      }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener(event, useCapture) {\n  var fakeEvent = {};\n  var delegated = delegatedEvents[event.type];\n  var eventTarget = domUtils.getActualElement(event.path ? event.path[0] : event.target);\n  var element = eventTarget;\n\n  useCapture = useCapture ? true : false;\n\n  // duplicate the event so that currentTarget can be changed\n  for (var prop in event) {\n    fakeEvent[prop] = event[prop];\n  }\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (var i = 0; i < delegated.selectors.length; i++) {\n      var selector = delegated.selectors[i];\n      var context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector) && domUtils.nodeContains(context, eventTarget) && domUtils.nodeContains(context, element)) {\n\n        var listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (var j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentElement(element);\n  }\n}\n\nfunction delegateUseCapture(event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef() {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp() {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp() {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove,\n\n  addDelegate: addDelegate,\n  removeDelegate: removeDelegate,\n\n  delegateListener: delegateListener,\n  delegateUseCapture: delegateUseCapture,\n  delegatedEvents: delegatedEvents,\n  documents: documents,\n\n  useAttachEvent: useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners\n};\n\n},{\"./arr\":23,\"./domUtils\":26,\"./isType\":33,\"./window\":37}],28:[function(require,module,exports){\nmodule.exports = function extend(dest, source) {\n  for (var prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n\n},{}],29:[function(require,module,exports){\nvar _require = require('./domUtils');\n\nvar closest = _require.closest;\nvar parentElement = _require.parentElement;\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./isType');\n\nvar isElement = _require2.isElement;\nvar isFunction = _require2.isFunction;\nvar trySelector = _require2.trySelector;\n\nmodule.exports = function (interactable, element) {\n  var origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentElement(element);\n  } else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  } else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin)) {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = 'x' in origin ? origin.x : origin.left;\n  origin.y = 'y' in origin ? origin.y : origin.top;\n\n  return origin;\n};\n\n},{\"./domUtils\":26,\"./isType\":33}],30:[function(require,module,exports){\nmodule.exports = function (x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n\n},{}],31:[function(require,module,exports){\nvar utils = module.exports;\nvar extend = require('./extend');\nvar win = require('./window');\n\nutils.blank = function () {};\n\nutils.warnOnce = function (method, message) {\n  var warned = false;\n\n  return function () {\n    if (!warned) {\n      win.window.console.warn(message);\n      warned = true;\n    }\n\n    return method.apply(this, arguments);\n  };\n};\n\n// http://stackoverflow.com/a/5634528/2280888\nutils._getQBezierValue = function (t, p1, p2, p3) {\n  var iT = 1 - t;\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n};\n\nutils.getQuadraticCurvePoint = function (startX, startY, cpX, cpY, endX, endY, position) {\n  return {\n    x: utils._getQBezierValue(position, startX, cpX, endX),\n    y: utils._getQBezierValue(position, startY, cpY, endY)\n  };\n};\n\n// http://gizma.com/easing/\nutils.easeOutQuad = function (t, b, c, d) {\n  t /= d;\n  return -c * t * (t - 2) + b;\n};\n\nutils.copyAction = function (dest, src) {\n  dest.name = src.name;\n  dest.axis = src.axis;\n  dest.edges = src.edges;\n\n  return dest;\n};\n\nutils.extend = extend;\nutils.hypot = require('./hypot');\nutils.raf = require('./raf');\nutils.browser = require('./browser');\nutils.getOriginXY = require('./getOriginXY');\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\n},{\"./arr\":23,\"./browser\":24,\"./domUtils\":26,\"./extend\":28,\"./getOriginXY\":29,\"./hypot\":30,\"./isType\":33,\"./pointerUtils\":35,\"./raf\":36,\"./window\":37}],32:[function(require,module,exports){\nvar scope = require('../scope');\nvar utils = require('./index');\nvar browser = require('./browser');\n\nvar finder = {\n  methodOrder: ['inertiaResume', 'mouse', 'hasPointer', 'idle'],\n\n  search: function (pointer, eventType, eventTarget) {\n    var mouseEvent = /mouse/i.test(pointer.pointerType || eventType)\n    // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n     || pointer.pointerType === 4;\n    var pointerId = utils.getPointerId(pointer);\n    var details = { pointer: pointer, pointerId: pointerId, mouseEvent: mouseEvent, eventType: eventType, eventTarget: eventTarget };\n\n    for (var _iterator = finder.methodOrder, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var method = _ref;\n\n      var interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume inertia with a new pointer\n  inertiaResume: function (_ref7) {\n    var mouseEvent = _ref7.mouseEvent;\n    var eventType = _ref7.eventType;\n    var eventTarget = _ref7.eventTarget;\n\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (var _iterator2 = scope.interactions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      var element = eventTarget;\n\n      if (interaction.inertiaStatus.active && interaction.target.options[interaction.prepared.name].inertia.allowResume && interaction.mouse === mouseEvent) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentElement(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function (_ref8) {\n    var mouseEvent = _ref8.mouseEvent;\n    var eventType = _ref8.eventType;\n\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    // Find a mouse interaction that's not in inertia phase\n    for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.mouse && !interaction.inertiaStatus.active) {\n        return interaction;\n      }\n    }\n\n    // Find any interaction specifically for mouse.\n    // If the eventType is a mousedown, and inertia is active\n    // ignore the interaction\n    for (var _iterator4 = scope.interactions, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var interaction = _ref4;\n\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.inertiaStatus.active)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function (_ref9) {\n    var pointerId = _ref9.pointerId;\n\n    for (var _iterator5 = scope.interactions, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var interaction = _ref5;\n\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function (_ref10) {\n    var mouseEvent = _ref10.mouseEvent;\n\n    for (var _iterator6 = scope.interactions, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var interaction = _ref6;\n\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        var target = interaction.target;\n        // the new pointer can only be added if the prepared target supports\n        // gesture actions\n        if (!target || !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  }\n};\n\nmodule.exports = finder;\n\n},{\"../scope\":21,\"./browser\":24,\"./index\":31}],33:[function(require,module,exports){\nvar win = require('./window');\nvar isWindow = require('./isWindow');\nvar domObjects = require('./domObjects');\n\nvar isType = {\n  isElement: function (o) {\n    if (!o || typeof o !== 'object') {\n      return false;\n    }\n\n    var _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element) ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  },\n\n  isArray: null,\n\n  isWindow: function (thing) {\n    return thing === win.window || isWindow(thing);\n  },\n\n  isDocFrag: function (thing) {\n    return !!thing && thing instanceof domObjects.DocumentFragment;\n  },\n\n  isObject: function (thing) {\n    return !!thing && typeof thing === 'object';\n  },\n\n  isFunction: function (thing) {\n    return typeof thing === 'function';\n  },\n\n  isNumber: function (thing) {\n    return typeof thing === 'number';\n  },\n\n  isBool: function (thing) {\n    return typeof thing === 'boolean';\n  },\n\n  isString: function (thing) {\n    return typeof thing === 'string';\n  },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) {\n      return false;\n    }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  }\n};\n\nisType.isArray = function (thing) {\n  return isType.isObject(thing) && typeof thing.length !== 'undefined' && isType.isFunction(thing.splice);\n};\n\nmodule.exports = isType;\n\n},{\"./domObjects\":25,\"./isWindow\":34,\"./window\":37}],34:[function(require,module,exports){\nmodule.exports = function (thing) {\n  return !!(thing && thing.Window) && thing instanceof thing.Window;\n};\n\n},{}],35:[function(require,module,exports){\nvar hypot = require('./hypot');\nvar browser = require('./browser');\nvar dom = require('./domObjects');\nvar isType = require('./isType');\n\nvar pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setEventDeltas: function (targetObj, prev, cur) {\n    var now = new Date().getTime();\n\n    targetObj.page.x = cur.page.x - prev.page.x;\n    targetObj.page.y = cur.page.y - prev.page.y;\n    targetObj.client.x = cur.client.x - prev.client.x;\n    targetObj.client.y = cur.client.y - prev.client.y;\n    targetObj.timeStamp = now - prev.timeStamp;\n\n    // set pointer velocity\n    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx = targetObj.page.x / dt;\n    targetObj.page.vy = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx = targetObj.client.x / dt;\n    targetObj.client.vy = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function (pointer) {\n    return pointer instanceof dom.Event || pointer instanceof dom.Touch;\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    } else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    } else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n  },\n\n  prefixedPropREs: {\n    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n  },\n\n  pointerExtend: function (dest, source) {\n    for (var prop in source) {\n      var prefixedPropREs = pointerUtils.prefixedPropREs;\n      var deprecated = false;\n\n      // skip deprecated prefixed properties\n      for (var vendor in prefixedPropREs) {\n        if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n          deprecated = true;\n          break;\n        }\n      }\n\n      if (!deprecated) {\n        dest[prop] = source[prop];\n      }\n    }\n    return dest;\n  },\n\n  getTouchPair: function (event) {\n    var touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n        if (event.type === 'touchend') {\n          if (event.touches.length === 1) {\n            touches[0] = event.touches[0];\n            touches[1] = event.changedTouches[0];\n          } else if (event.touches.length === 0) {\n            touches[0] = event.changedTouches[0];\n            touches[1] = event.changedTouches[1];\n          }\n        } else {\n          touches[0] = event.touches[0];\n          touches[1] = event.touches[1];\n        }\n      }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    var average = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    };\n\n    for (var _iterator = pointers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref;\n\n      for (var prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (var prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    var touches = pointerUtils.getTouchPair(event);\n    var minX = Math.min(touches[0].pageX, touches[1].pageX);\n    var minY = Math.min(touches[0].pageY, touches[1].pageY);\n    var maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    var maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n\n    var dx = touches[0][sourceX] - touches[1][sourceX];\n    var dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n    var dx = touches[0][sourceX] - touches[1][sourceX];\n    var dy = touches[0][sourceY] - touches[1][sourceY];\n    var angle = 180 * Math.atan(dy / dx) / Math.PI;\n\n    if (isType.isNumber(prevAngle)) {\n      var dr = angle - prevAngle;\n      var drClamped = dr % 360;\n\n      if (drClamped > 315) {\n        angle -= 360 + angle / 360 | 0 * 360;\n      } else if (drClamped > 135) {\n        angle -= 180 + angle / 360 | 0 * 360;\n      } else if (drClamped < -315) {\n        angle += 360 + angle / 360 | 0 * 360;\n      } else if (drClamped < -135) {\n        angle += 180 + angle / 360 | 0 * 360;\n      }\n    }\n\n    return angle;\n  }\n};\n\nmodule.exports = pointerUtils;\n\n},{\"./browser\":24,\"./domObjects\":25,\"./hypot\":30,\"./isType\":33}],36:[function(require,module,exports){\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nvar lastTime = 0;\nvar request = undefined;\nvar cancel = undefined;\n\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = setTimeout(function () {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request: request,\n  cancel: cancel\n};\n\n},{}],37:[function(require,module,exports){\nvar win = module.exports;\nvar isWindow = require('./isWindow');\n\nfunction init(window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  var el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window = undefined;\n  win.realWindow = undefined;\n} else {\n  init(window);\n}\n\nwin.getWindow = function getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var rootNode = node.ownerDocument || node;\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n\n},{\"./isWindow\":34}]},{},[1])(1)\n});\n//# sourceMappingURL=interact.js.map\n","const hypot         = require('./utils/hypot');\nconst extend        = require('./utils/extend');\nconst getOriginXY   = require('./utils/getOriginXY');\nconst modifiers     = require('./modifiers/base');\nconst scope         = require('./scope');\n\nconst signals = new (require('./utils/Signals'));\n\nclass InteractEvent {\n  constructor (interaction, event, action, phase, element, related) {\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || scope.defaultOptions).deltaSource;\n    const sourceX     = deltaSource + 'X';\n    const sourceY     = deltaSource + 'Y';\n    const origin      = getOriginXY(target, element);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const coords      = starting? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    const page   = extend({}, coords.page);\n    const client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.relatedTarget = related || null;\n    this.t0            = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type          = action + (phase || '');\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n      const modifier = modifiers[modifierName];\n\n      this[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], action, phase);\n    }\n\n    this.pageX     = page.x;\n    this.pageY     = page.y;\n    this.clientX   = client.x;\n    this.clientY   = client.y;\n\n    this.x0        = interaction.startCoords.page.x - origin.x;\n    this.y0        = interaction.startCoords.page.y - origin.y;\n    this.clientX0  = interaction.startCoords.client.x - origin.x;\n    this.clientY0  = interaction.startCoords.client.y - origin.y;\n\n    const signalArg = {\n      interaction,\n      event,\n      action,\n      phase,\n      element,\n      related,\n      page,\n      client,\n      coords,\n      starting,\n      ending,\n      deltaSource,\n      iEvent: this,\n    };\n\n    const inertiaStatus = interaction.inertiaStatus;\n\n    if (inertiaStatus.active) {\n      this.detail = 'inertia';\n    }\n\n    signals.fire('set-delta', signalArg);\n    signals.fire(action, signalArg);\n\n    if (starting) {\n      this.timeStamp = interaction.downTimes[0];\n      this.dt        = 0;\n      this.duration  = 0;\n      this.speed     = 0;\n      this.velocityX = 0;\n      this.velocityY = 0;\n    }\n    else if (phase === 'inertiastart') {\n      this.timeStamp = interaction.prevEvent.timeStamp;\n      this.dt        = interaction.prevEvent.dt;\n      this.duration  = interaction.prevEvent.duration;\n      this.speed     = interaction.prevEvent.speed;\n      this.velocityX = interaction.prevEvent.velocityX;\n      this.velocityY = interaction.prevEvent.velocityY;\n    }\n    else {\n      this.timeStamp = new Date().getTime();\n      this.dt        = this.timeStamp - interaction.prevEvent.timeStamp;\n      this.duration  = this.timeStamp - interaction.downTimes[0];\n\n      if (event instanceof InteractEvent) {\n        const dx = this[sourceX] - interaction.prevEvent[sourceX];\n        const dy = this[sourceY] - interaction.prevEvent[sourceY];\n        const dt = this.dt / 1000;\n\n        this.speed = hypot(dx, dy) / dt;\n        this.velocityX = dx / dt;\n        this.velocityY = dy / dt;\n      }\n      // if normal move or end event, use previous user event coords\n      else {\n        // speed and velocity in pixels per second\n        this.speed = interaction.pointerDelta[deltaSource].speed;\n        this.velocityX = interaction.pointerDelta[deltaSource].vx;\n        this.velocityY = interaction.pointerDelta[deltaSource].vy;\n      }\n    }\n\n    if ((ending || phase === 'inertiastart')\n        && interaction.prevEvent.speed > 600\n        && this.timeStamp - interaction.prevEvent.timeStamp < 150) {\n\n      let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n      const overlap = 22.5;\n\n      if (angle < 0) {\n        angle += 360;\n      }\n\n      const left = 135 - overlap <= angle && angle < 225 + overlap;\n      const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n      const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n      const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n      this.swipe = {\n        up,\n        down,\n        left,\n        right,\n        angle,\n        speed: interaction.prevEvent.speed,\n        velocity: {\n          x: interaction.prevEvent.velocityX,\n          y: interaction.prevEvent.velocityY,\n        },\n      };\n    }\n\n    signals.fire('new', signalArg);\n    signals.fire('new-' + action, signalArg);\n  }\n\n  preventDefault () {}\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nsignals.on('set-delta', function ({ iEvent, interaction, action, phase, ending, starting,\n                                            page, client, deltaSource }) {\n  // end event dx, dy is difference between start and end points\n  if (ending) {\n    if (deltaSource === 'client') {\n      iEvent.dx = client.x - interaction.startCoords.client.x;\n      iEvent.dy = client.y - interaction.startCoords.client.y;\n    }\n    else {\n      iEvent.dx = page.x - interaction.startCoords.page.x;\n      iEvent.dy = page.y - interaction.startCoords.page.y;\n    }\n  }\n  else if (starting) {\n    iEvent.dx = 0;\n    iEvent.dy = 0;\n  }\n  // copy properties from previousmove if starting inertia\n  else if (phase === 'inertiastart') {\n    iEvent.dx = interaction.prevEvent.dx;\n    iEvent.dy = interaction.prevEvent.dy;\n  }\n  else {\n    if (deltaSource === 'client') {\n      iEvent.dx = client.x - interaction.prevEvent.clientX;\n      iEvent.dy = client.y - interaction.prevEvent.clientY;\n    }\n    else {\n      iEvent.dx = page.x - interaction.prevEvent.pageX;\n      iEvent.dy = page.y - interaction.prevEvent.pageY;\n    }\n  }\n\n  const options = interaction.target.options;\n  const inertiaStatus = interaction.inertiaStatus;\n\n  if (interaction.prevEvent && interaction.prevEvent.detail === 'inertia'\n      && !inertiaStatus.active\n      && options[action].inertia && options[action].inertia.zeroResumeDelta) {\n\n    inertiaStatus.resumeDx += iEvent.dx;\n    inertiaStatus.resumeDy += iEvent.dy;\n\n    iEvent.dx = iEvent.dy = 0;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n","const isType  = require('./utils/isType');\nconst events  = require('./utils/events');\nconst extend  = require('./utils/extend');\nconst actions = require('./actions/base');\nconst scope   = require('./scope');\n\nconst { getElementRect }    = require('./utils/domUtils');\nconst { indexOf, contains } = require('./utils/arr');\n\nconst signals = new (require('./utils/Signals'));\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\nclass Interactable {\n  constructor (target, options) {\n    this.target   = target;\n    this._context = scope.document;\n    this._iEvents = this._iEvents || {};\n\n    let _window;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      const context = options && options.context;\n\n      _window = context? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node\n        ? context instanceof _window.Node\n        : (isType.isElement(context) || context === _window.document))) {\n\n        this._context = context;\n      }\n    }\n    else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target,\n      options,\n      interactable: this,\n      win: _window,\n    });\n\n    if (this._doc !== scope.document) {\n      scope.signals.fire('listen-to-document', {\n        doc: this._doc,\n        win: _window,\n      });\n    }\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  setOnEvents (action, phases) {\n    const onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)       ) { this[onAction + 'start'        ] = phases.onstart         ; }\n    if (isType.isFunction(phases.onmove)        ) { this[onAction + 'move'         ] = phases.onmove          ; }\n    if (isType.isFunction(phases.onend)         ) { this[onAction + 'end'          ] = phases.onend           ; }\n    if (isType.isFunction(phases.oninertiastart)) { this[onAction + 'inertiastart' ] = phases.oninertiastart  ; }\n\n    return this;\n  }\n\n  setPerAction (action, options) {\n    // for all the default per-action options\n    for (const option in options) {\n      // if this option exists for this action\n      if (option in scope.defaultOptions[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(scope.defaultOptions.perAction[option]) && 'enabled' in scope.defaultOptions.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false? false : true;\n          }\n        }\n        else if (isType.isBool(options[option]) && isType.isObject(scope.defaultOptions.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        }\n        else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  }\n\n  getAction (pointer, event, interaction, element) {\n    const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction);\n    }\n\n    return action;\n  }\n\n  /*\\\n   * Interactable.actionChecker\n   [ method ]\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n   = (Function | Interactable) The checker function or this Interactable\n   *\n   | interact('.resize-drag')\n   |   .resizable(true)\n   |   .draggable(true)\n   |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   |\n   |   if (interact.matchesSelector(event.target, '.drag-handle') {\n   |     // force drag with handle target\n   |     action.name = drag;\n   |   }\n   |   else {\n   |     // resize from the top and right edges\n   |     action.name  = 'resize';\n   |     action.edges = { top: true, right: true };\n   |   }\n   |\n   |   return action;\n   | });\n  \\*/\n  actionChecker (checker) {\n    if (isType.isFunction(checker)) {\n      this.options.actionChecker = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.actionChecker;\n\n      return this;\n    }\n\n    return this.options.actionChecker;\n  }\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n  getRect (element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !(isType.isElement(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n  rectChecker (checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  /*\\\n   * Interactable.styleCursor\n   [ method ]\n   *\n   * Returns or sets whether the action that would be performed when the\n   * mouse on the element are checked on `mousemove` so that the cursor\n   * may be styled appropriately\n   *\n   - newValue (boolean) #optional\n   = (boolean | Interactable) The current setting or this Interactable\n  \\*/\n  styleCursor (newValue) {\n    if (isType.isBool(newValue)) {\n      this.options.styleCursor = newValue;\n\n      return this;\n    }\n\n    if (newValue === null) {\n      delete this.options.styleCursor;\n\n      return this;\n    }\n\n    return this.options.styleCursor;\n  }\n\n  /*\\\n   * Interactable.preventDefault\n   [ method ]\n   *\n   * Returns or sets whether to prevent the browser's default behaviour\n   * in response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   - newValue (string) #optional `true`, `false` or `'auto'`\n   = (string | Interactable) The current setting or this Interactable\n  \\*/\n  preventDefault (newValue) {\n    if (/^(always|never|auto)$/.test(newValue)) {\n      this.options.preventDefault = newValue;\n      return this;\n    }\n\n    if (isType.isBool(newValue)) {\n      this.options.preventDefault = newValue? 'always' : 'never';\n      return this;\n    }\n\n    return this.options.preventDefault;\n  }\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n  origin (newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n    else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  }\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n  context () {\n    return this._context;\n  }\n\n  /*\\\n   * Interactable.ignoreFrom\n   [ method ]\n   *\n   * If the target of the `mousedown`, `pointerdown` or `touchstart`\n   * event or any of it's parents match the given CSS selector or\n   * Element, no drag/resize/gesture is started.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n   = (string | Element | object) The current ignoreFrom value or this Interactable\n   **\n   | interact(element, { ignoreFrom: document.getElementById('no-action') });\n   | // or\n   | interact(element).ignoreFrom('input, textarea, a');\n  \\*/\n  ignoreFrom (newValue) {\n    if (isType.trySelector(newValue)) {            // CSS selector to match event.target\n      this.options.ignoreFrom = newValue;\n      return this;\n    }\n\n    if (isType.isElement(newValue)) {              // specific element\n      this.options.ignoreFrom = newValue;\n      return this;\n    }\n\n    return this.options.ignoreFrom;\n  }\n\n  /*\\\n   * Interactable.allowFrom\n   [ method ]\n   *\n   * A drag/resize/gesture is started only If the target of the\n   * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n   * parents match the given CSS selector or Element.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n   = (string | Element | object) The current allowFrom value or this Interactable\n   **\n   | interact(element, { allowFrom: document.getElementById('drag-handle') });\n   | // or\n   | interact(element).allowFrom('.handle');\n  \\*/\n  allowFrom (newValue) {\n    if (isType.trySelector(newValue)) {            // CSS selector to match event.target\n      this.options.allowFrom = newValue;\n      return this;\n    }\n\n    if (isType.isElement(newValue)) {              // specific element\n      this.options.allowFrom = newValue;\n      return this;\n    }\n\n    return this.options.allowFrom;\n  }\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n  fire (iEvent) {\n    if (!(iEvent && iEvent.type) || !contains(scope.eventTypes, iEvent.type)) {\n      return this;\n    }\n\n    let listeners;\n    const onEvent = 'on' + iEvent.type;\n\n    // Interactable#on() listeners\n    if (iEvent.type in this._iEvents) {\n      listeners = this._iEvents[iEvent.type];\n\n      for (let i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    // interactable.onevent listener\n    if (isType.isFunction(this[onEvent])) {\n      this[onEvent](iEvent);\n    }\n\n    // interact.on() listeners\n    if (iEvent.type in scope.globalEvents && (listeners = scope.globalEvents[iEvent.type]))  {\n\n      for (let i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n        listeners[i](iEvent);\n      }\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n  on (eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this.on(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this.on(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // convert to boolean\n    useCapture = useCapture? true: false;\n\n    if (contains(scope.eventTypes, eventType)) {\n      // if this type of event was never bound to this Interactable\n      if (!(eventType in this._iEvents)) {\n        this._iEvents[eventType] = [listener];\n      }\n      else {\n        this._iEvents[eventType].push(listener);\n      }\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n      events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    else {\n      events.add(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n  off (eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this.off(eventType[i], listener, useCapture);\n      }\n\n      return this;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this.off(prop, eventType[prop], listener);\n      }\n\n      return this;\n    }\n\n\n    // convert to boolean\n    useCapture = useCapture? true: false;\n\n    if (eventType === 'wheel') {\n      eventType = scope.wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(scope.eventTypes, eventType)) {\n      const eventList = this._iEvents[eventType];\n      const index     = eventList? indexOf(eventList, listener) : -1;\n\n      if (index !== -1) {\n        this._iEvents[eventType].splice(index, 1);\n      }\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n      events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    // remove listener from this Interatable's element\n    else {\n      events.remove(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n  set (options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, scope.defaultOptions.base);\n\n    const perActions = extend({}, scope.defaultOptions.perAction);\n\n    for (const actionName in actions.methodDict) {\n      const methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, scope.defaultOptions[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    const settings = [\n      'accept', 'actionChecker', 'allowFrom', 'deltaSource',\n      'dropChecker', 'ignoreFrom', 'origin', 'preventDefault',\n      'rectChecker', 'styleCursor',\n    ];\n\n    for (let i = 0, len = settings.length; i < len; i++) {\n      const setting = settings[i];\n\n      this.options[setting] = scope.defaultOptions.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        for (let i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target\n              && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts .splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    }\n    else {\n      events.remove(this, 'all');\n      if (isType.isElement(this.target) && this.options.styleCursor) {\n        this.target.style.cursor = '';\n      }\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    return scope.interact;\n  }\n}\n\nInteractable.prototype.defaultActionChecker = actions.defaultChecker;\n\nInteractable.signals = signals;\n\nmodule.exports = Interactable;\n","const scope          = require('./scope');\nconst utils          = require('./utils');\nconst InteractEvent  = require('./InteractEvent');\nconst events         = require('./utils/events');\nconst browser        = require('./utils/browser');\nconst finder         = require('./utils/interactionFinder');\nconst modifiers      = require('./modifiers/base');\nconst animationFrame = utils.raf;\n\nconst signals = new (require('./utils/Signals'));\n\nconst listeners   = {};\nconst methodNames = [\n  'pointerDown', 'pointerMove',\n  'pointerUp', 'pointerCancel', 'pointerEnd',\n  'addPointer', 'removePointer', 'recordPointer',\n];\n\n// for ignoring browser's simulated mouse events\nlet prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nclass Interaction {\n  constructor () {\n    this.target        = null; // current interactable being interacted with\n    this.element       = null; // the target element of the interactable\n\n    this.prepared      = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    this.inertiaStatus = {\n      active   : false,\n      smoothEnd: false,\n      ending   : false,\n\n      startEvent: null,\n      upCoords  : {},\n\n      xe: 0, ye: 0,\n      sx: 0, sy: 0,\n\n      t0: 0,\n      vx0: 0, vys: 0,\n      duration: 0,\n\n      resumeDx: 0,\n      resumeDy: 0,\n\n      lambda_v0: 0,\n      one_ve_v0: 0,\n      i  : null,\n    };\n\n    this.boundInertiaFrame   = () => this.inertiaFrame  ();\n    this.boundSmoothEndFrame = () => this.smoothEndFrame();\n\n    // keep track of added pointers\n    this.pointers    = [];\n    this.pointerIds  = [];\n    this.downTargets = [];\n    this.downTimes   = [];\n    this.holdTimers  = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0,\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget    = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null;      // previous action event\n\n    this.startOffset      = { left: 0, right: 0, top: 0, bottom: 0 };\n    this.modifierOffsets  = {};\n    this.modifierStatuses = modifiers.resetStatuses({});\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n\n    this.allowIfDuplicateMove = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  setEventXY (targetObj, pointers) {\n    const pointer = (pointers.length > 1\n                     ? utils.pointerAverage(pointers)\n                     : pointers[0]);\n\n    const tmpXY = {};\n\n    utils.getPageXY(pointer, tmpXY, this);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    utils.getClientXY(pointer, tmpXY, this);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = new Date().getTime();\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.addPointer(pointer);\n\n    this.pointerIsDown = true;\n\n    signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n\n    // Check if the down event hits the current inertia target\n    if (this.inertiaStatus.active) {\n      let element = eventTarget;\n\n      // climb up the DOM tree from the event target\n      while (utils.isElement(element)) {\n\n        // if this element is the current inertia target element\n        if (element === this.element\n            // and the prospective action is the same as the ongoing one\n            && validateAction(this.target.getAction(pointer, event, this, this.element), this.target).name === this.prepared.name) {\n\n          // stop inertia so that the next move will be a normal one\n          animationFrame.cancel(this.inertiaStatus.i);\n          this.inertiaStatus.active = false;\n\n          this.checkAndPreventDefault(event, this.target, this.element);\n          return;\n        }\n        element = utils.parentElement(element);\n      }\n    }\n\n    // do nothing if interacting\n    if (this.interacting()) { return; }\n\n    this.pointerIsDown = true;\n    this.downEvent = event;\n\n    this.downTimes[pointerIndex] = new Date().getTime();\n    this.downTargets[pointerIndex] = eventTarget;\n    // update pointer coords for defaultActionChecker to use\n    this.setEventXY(this.curCoords, this.pointers);\n\n    this.pointerWasMoved = false;\n\n    this.checkAndPreventDefault(event, this.target, this.element);\n\n    utils.pointerExtend(this.downPointer, pointer);\n    utils.copyCoords(this.prevCoords, this.curCoords);\n  }\n\n  setStartOffsets (action, interactable, element) {\n    const rect = interactable.getRect(element);\n\n    if (rect) {\n      this.startOffset.left = this.startCoords.page.x - rect.left;\n      this.startOffset.top  = this.startCoords.page.y - rect.top;\n\n      this.startOffset.right  = rect.right  - this.startCoords.page.x;\n      this.startOffset.bottom = rect.bottom - this.startCoords.page.y;\n\n      if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n      if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n    }\n    else {\n      this.startOffset.left = this.startOffset.top = this.startOffset.right = this.startOffset.bottom = 0;\n    }\n\n    modifiers.setOffsets(this, interactable, element, rect, this.modifierOffsets);\n  }\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action       (object)  The action to be performed - drag, resize, etc.\n   - interactable (Interactable) The Interactable to target\n   - element      (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n  start (action, interactable, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    // set the startCoords if there was no prepared action\n    if (!this.prepared.name) {\n      this.setEventXY(this.startCoords, this.pointers);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target         = interactable;\n    this.element        = element;\n\n    this.setStartOffsets(action.name, interactable, element, this.modifierOffsets);\n\n    modifiers.resetStatuses(this.modifierStatuses);\n    modifiers.setAll(this, this.startCoords.page, this.modifierStatuses);\n\n    signals.fire('start-' + this.prepared.name, {\n      interaction: this,\n      event: this.downEvent,\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget, curEventTarget, preEnd) {\n    if (this.inertiaStatus.active) {\n      const pageUp   = this.inertiaStatus.upCoords.page;\n      const clientUp = this.inertiaStatus.upCoords.client;\n\n      this.setEventXY(this.curCoords, [ {\n        pageX  : pageUp.x   + this.inertiaStatus.sx,\n        pageY  : pageUp.y   + this.inertiaStatus.sy,\n        clientX: clientUp.x + this.inertiaStatus.sx,\n        clientY: clientUp.y + this.inertiaStatus.sy,\n      } ]);\n    }\n    else {\n      this.recordPointer(pointer);\n      this.setEventXY(this.curCoords, this.pointers);\n    }\n\n    const duplicateMove = !this.allowIfDuplicateMove\n      && (this.curCoords.page.x === this.prevCoords.page.x\n          && this.curCoords.page.y === this.prevCoords.page.y\n          && this.curCoords.client.x === this.prevCoords.client.x\n          && this.curCoords.client.y === this.prevCoords.client.y);\n\n    this.allowIfDuplicateMove = false;\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > scope.pointerMoveTolerance;\n    }\n\n    const signalArg = {\n      pointer,\n      event,\n      eventTarget,\n      dx,\n      dy,\n      preEnd,\n      duplicate: duplicateMove,\n      interaction: this,\n    };\n\n    if (duplicateMove && this.pointerWasMoved && !preEnd) {\n      this.checkAndPreventDefault(event, this.target, this.element);\n    }\n    else if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n      signals.fire('move', signalArg);\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n\n      signals.fire('move-done', signalArg);\n    }\n  }\n\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.mouse? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire('up', {\n      pointer,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n\n    this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n    this.removePointer(pointer);\n  }\n\n  pointerCancel (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.mouse? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire('cancel', {\n      pointer,\n      event,\n      eventTarget,\n      interaction: this,\n    });\n\n    this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n    this.removePointer(pointer);\n  }\n\n  // End interact move events and stop auto-scroll unless inertia is enabled\n  pointerEnd (pointer, event, eventTarget, curEventTarget) {\n    const target = this.target;\n    const options = target && target.options;\n    const inertiaOptions = options && this.prepared.name && options[this.prepared.name].inertia;\n    const inertiaStatus = this.inertiaStatus;\n\n    if (this.interacting()) {\n\n      if (inertiaStatus.active && !inertiaStatus.ending) { return; }\n\n      const now = new Date().getTime();\n      const statuses = {};\n      const page = utils.extend({}, this.curCoords.page);\n      let pointerSpeed;\n      let inertiaPossible = false;\n      let inertia = false;\n      let smoothEnd = false;\n      let modifierResult;\n\n      if (this.dragging) {\n        if      (options.drag.axis === 'x' ) { pointerSpeed = Math.abs(this.pointerDelta.client.vx); }\n        else if (options.drag.axis === 'y' ) { pointerSpeed = Math.abs(this.pointerDelta.client.vy); }\n        else   /*options.drag.axis === 'xy'*/{ pointerSpeed = this.pointerDelta.client.speed; }\n      }\n      else {\n        pointerSpeed = this.pointerDelta.client.speed;\n      }\n\n      // check if inertia should be started\n      inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                         && this.prepared.name !== 'gesture'\n                         && event !== inertiaStatus.startEvent);\n\n      inertia = (inertiaPossible\n                && (now - this.curCoords.timeStamp) < 50\n                && pointerSpeed > inertiaOptions.minSpeed\n                && pointerSpeed > inertiaOptions.endSpeed);\n\n      // smoothEnd\n      if (inertiaPossible && !inertia) {\n        modifiers.resetStatuses(statuses);\n\n        modifierResult = modifiers.setAll(this, page, statuses, true);\n\n        if (modifierResult.shouldMove && modifierResult.locked) {\n          smoothEnd = true;\n        }\n      }\n\n      if (inertia || smoothEnd) {\n        utils.copyCoords(inertiaStatus.upCoords, this.curCoords);\n\n        this.pointers[0] = inertiaStatus.startEvent =\n          new InteractEvent(this, event, this.prepared.name, 'inertiastart', this.element);\n\n        inertiaStatus.t0 = now;\n\n        target.fire(inertiaStatus.startEvent);\n\n        if (inertia) {\n          inertiaStatus.vx0 = this.pointerDelta.client.vx;\n          inertiaStatus.vy0 = this.pointerDelta.client.vy;\n          inertiaStatus.v0 = pointerSpeed;\n\n          this.calcInertia(inertiaStatus);\n\n          utils.extend(page, this.curCoords.page);\n\n          page.x += inertiaStatus.xe;\n          page.y += inertiaStatus.ye;\n\n          modifiers.resetStatuses(statuses);\n\n          modifierResult = modifiers.setAll(this, page, statuses, true, true);\n\n          inertiaStatus.modifiedXe += modifierResult.dx;\n          inertiaStatus.modifiedYe += modifierResult.dy;\n\n          inertiaStatus.i = animationFrame.request(this.boundInertiaFrame);\n        }\n        else {\n          inertiaStatus.smoothEnd = true;\n          inertiaStatus.xe = modifierResult.dx;\n          inertiaStatus.ye = modifierResult.dy;\n\n          inertiaStatus.sx = inertiaStatus.sy = 0;\n\n          inertiaStatus.i = animationFrame.request(this.boundSmoothEndFrame);\n        }\n\n        inertiaStatus.active = true;\n        return;\n      }\n\n      for (let i = 0; i < modifiers.names.length; i++) {\n        // if the endOnly option is true for any modifier\n        if (modifiers[modifiers.names[i]].shouldDo(target, this.prepared.name, true, true)) {\n          // fire a move event at the snapped coordinates\n          this.pointerMove(pointer, event, eventTarget, curEventTarget, true);\n          break;\n        }\n      }\n    }\n\n    if (this.interacting()) {\n      signals.fire('end-' + this.prepared.name, {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.stop(event);\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  stop (event) {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n\n      const target = this.target;\n\n      if (target.options.styleCursor) {\n        target._doc.documentElement.style.cursor = '';\n      }\n\n      // prevent Default only if were previously interacting\n      if (event && utils.isFunction(event.preventDefault)) {\n        this.checkAndPreventDefault(event, target, this.element);\n      }\n\n      signals.fire('stop-' + this.prepared.name, {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n    this.inertiaStatus.resumeDx = this.inertiaStatus.resumeDy = 0;\n\n    modifiers.resetStatuses(this.modifierStatuses);\n\n    // remove pointers if their ID isn't in this.pointerIds\n    for (let i = 0; i < this.pointers.length; i++) {\n      if (utils.indexOf(this.pointerIds, utils.getPointerId(this.pointers[i])) === -1) {\n        this.pointers.splice(i, 1);\n      }\n    }\n  }\n\n  inertiaFrame () {\n    const inertiaStatus = this.inertiaStatus;\n    const options = this.target.options[this.prepared.name].inertia;\n    const lambda = options.resistance;\n    const t = new Date().getTime() / 1000 - inertiaStatus.t0;\n\n    if (t < inertiaStatus.te) {\n\n      const progress =  1 - (Math.exp(-lambda * t) - inertiaStatus.lambda_v0) / inertiaStatus.one_ve_v0;\n\n      if (inertiaStatus.modifiedXe === inertiaStatus.xe && inertiaStatus.modifiedYe === inertiaStatus.ye) {\n        inertiaStatus.sx = inertiaStatus.xe * progress;\n        inertiaStatus.sy = inertiaStatus.ye * progress;\n      }\n      else {\n        const quadPoint = utils.getQuadraticCurvePoint(0, 0,\n                                                       inertiaStatus.xe,\n                                                       inertiaStatus.ye,\n                                                       inertiaStatus.modifiedXe,\n                                                       inertiaStatus.modifiedYe,\n                                                       progress);\n\n        inertiaStatus.sx = quadPoint.x;\n        inertiaStatus.sy = quadPoint.y;\n      }\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      inertiaStatus.i = animationFrame.request(this.boundInertiaFrame);\n    }\n    else {\n      inertiaStatus.ending = true;\n\n      inertiaStatus.sx = inertiaStatus.modifiedXe;\n      inertiaStatus.sy = inertiaStatus.modifiedYe;\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n      inertiaStatus.active = inertiaStatus.ending = false;\n    }\n  }\n\n  smoothEndFrame () {\n    const inertiaStatus = this.inertiaStatus;\n    const t = new Date().getTime() - inertiaStatus.t0;\n    const duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n    if (t < duration) {\n      inertiaStatus.sx = utils.easeOutQuad(t, 0, inertiaStatus.xe, duration);\n      inertiaStatus.sy = utils.easeOutQuad(t, 0, inertiaStatus.ye, duration);\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      inertiaStatus.i = animationFrame.request(this.boundSmoothEndFrame);\n    }\n    else {\n      inertiaStatus.ending = true;\n\n      inertiaStatus.sx = inertiaStatus.xe;\n      inertiaStatus.sy = inertiaStatus.ye;\n\n      this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n      this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n      inertiaStatus.smoothEnd =\n        inertiaStatus.active = inertiaStatus.ending = false;\n    }\n  }\n\n  addPointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    let index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  }\n\n  removePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    const index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) { return; }\n\n    this.pointers   .splice(index, 1);\n    this.pointerIds .splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes  .splice(index, 1);\n    this.holdTimers .splice(index, 1);\n  }\n\n  recordPointer (pointer) {\n    const index = this.mouse? 0: utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    if (index === -1) { return; }\n\n    this.pointers[index] = pointer;\n  }\n\n  checkAndPreventDefault (event, interactable, element) {\n    if (!(interactable = interactable || this.target)) { return; }\n\n    const options = interactable.options;\n    const prevent = options.preventDefault;\n\n    if (prevent === 'auto' && element && !/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n      const actionOptions = options[this.prepared.name];\n\n      // do not preventDefault on pointerdown if the prepared action is delayed\n      // or it is a drag and dragging can only start from a certain direction -\n      // this allows a touch to pan the viewport if a drag isn't in the right\n      // direction\n      if (/down|start/i.test(event.type)\n          && ((this.prepared.name === 'drag' && options.drag.axis !== 'xy')\n              || (actionOptions && actionOptions.delay > 0))) {\n\n        return;\n      }\n\n      // with manualStart, only preventDefault while interacting\n      if (actionOptions && actionOptions.manualStart\n          && !this.interacting()) {\n        return;\n      }\n\n      event.preventDefault();\n      return;\n    }\n\n    if (prevent === 'always') {\n      event.preventDefault();\n      return;\n    }\n  }\n\n  calcInertia (status) {\n    const inertiaOptions = this.target.options[this.prepared.name].inertia;\n    const lambda = inertiaOptions.resistance;\n    const inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n    status.x0 = this.prevEvent.pageX;\n    status.y0 = this.prevEvent.pageY;\n    status.t0 = status.startEvent.timeStamp / 1000;\n    status.sx = status.sy = 0;\n\n    status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n    status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n    status.te = inertiaDur;\n\n    status.lambda_v0 = lambda / status.v0;\n    status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n  }\n\n  _updateEventTargets (target, currentTarget) {\n    this._eventTarget    = target;\n    this._curEventTarget = currentTarget;\n  }\n}\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfor (let i = 0, len = methodNames.length; i < len; i++) {\n  const method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions (method) {\n  return (function (event) {\n    const eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    const curEventTarget = utils.getActualElement(event.currentTarget);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (const pointer of event.changedTouches) {\n        const interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || (new Date().getTime() - prevTouchTime < 500);\n      }\n\n      if (!invalidPointer) {\n        let interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = (/mouse/i.test(event.pointerType || event.type)\n                               // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                               || event.pointerType === 4);\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (const [pointer, interaction] of matches) {\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\nscope.signals.on('listen-to-document', function ({ doc, win }) {\n  const pEventTypes = browser.pEventTypes;\n\n  // add delegate event listener\n  for (const eventType in scope.delegatedEvents) {\n    events.add(doc, eventType, events.delegateListener);\n    events.add(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  if (scope.PointerEvent) {\n    events.add(doc, pEventTypes.down  , listeners.pointerDown  );\n    events.add(doc, pEventTypes.move  , listeners.pointerMove  );\n    events.add(doc, pEventTypes.move  , listeners.pointerHover );\n    events.add(doc, pEventTypes.out   , listeners.pointerOut   );\n    events.add(doc, pEventTypes.up    , listeners.pointerUp    );\n    events.add(doc, pEventTypes.cancel, listeners.pointerCancel);\n  }\n  else {\n    events.add(doc, 'mousedown', listeners.pointerDown );\n    events.add(doc, 'mousemove', listeners.pointerMove );\n    events.add(doc, 'mousemove', listeners.pointerHover);\n    events.add(doc, 'mouseup'  , listeners.pointerUp   );\n    events.add(doc, 'mouseout' , listeners.pointerOut  );\n\n    events.add(doc, 'touchstart' , listeners.pointerDown  );\n    events.add(doc, 'touchmove'  , listeners.pointerMove  );\n    events.add(doc, 'touchend'   , listeners.pointerUp    );\n    events.add(doc, 'touchcancel', listeners.pointerCancel);\n  }\n\n  events.add(win, 'blur', scope.endAllInteractions);\n\n  try {\n    if (win.frameElement) {\n      const parentDoc = win.frameElement.ownerDocument;\n      const parentWindow = parentDoc.defaultView;\n\n      events.add(parentDoc   , 'mouseup'      , listeners.pointerEnd);\n      events.add(parentDoc   , 'touchend'     , listeners.pointerEnd);\n      events.add(parentDoc   , 'touchcancel'  , listeners.pointerEnd);\n      events.add(parentDoc   , 'pointerup'    , listeners.pointerEnd);\n      events.add(parentDoc   , 'MSPointerUp'  , listeners.pointerEnd);\n      events.add(parentWindow, 'blur'         , scope.endAllInteractions );\n    }\n  }\n  catch (error) {\n    scope.windowParentError = error;\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  events.add(doc, 'dragstart', function (event) {\n    for (const interaction of scope.interactions) {\n\n      if (interaction.element\n          && (interaction.element === event.target\n              || utils.nodeContains(interaction.element, event.target))) {\n\n        interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n        return;\n      }\n    }\n  });\n\n  scope.documents.push(doc);\n  events.documents.push(doc);\n});\n\nscope.signals.fire('listen-to-document', {\n  win: scope.window,\n  doc: scope.document,\n});\n\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.withinLimit = scope.withinInteractionLimit;\nInteraction.validateAction = validateAction;\nInteraction.signals = signals;\n\nmodule.exports = Interaction;\n","const actions = {\n  defaultChecker: function (pointer, event, interaction, element) {\n    const rect = this.getRect(element);\n    let action = null;\n\n    for (const actionName of actions.names) {\n      action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n      if (action) {\n        return action;\n      }\n    }\n  },\n\n  names: [],\n  methodDict: {},\n};\n\nmodule.exports = actions;\n","const base = require('./base');\nconst scope = require('../scope');\nconst utils = require('../utils');\nconst browser = require('../utils/browser');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drag = {\n  defaults: {\n    enabled      : false,\n    manualStart  : true,\n    max          : Infinity,\n    maxPerElement: 1,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    axis: 'xy',\n  },\n\n  checker: function (pointer, event, interactable) {\n    return interactable.options.drag.enabled\n      ? { name: 'drag' }\n      : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  },\n};\n\nInteraction.signals.on('before-start-drag',  function ({ interaction, eventTarget, dx, dy }) {\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx);\n  const absY = Math.abs(dy);\n  const targetAxis = interaction.target.options.drag.axis;\n  const axis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n  // if the movement isn't in the axis of the interactable\n  if (axis !== 'xy' && targetAxis !== 'xy' && targetAxis !== axis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n\n      const getDraggable = function (interactable, selector, context) {\n        const elements = browser.useMatchesSelectorPolyfill\n            ? context.querySelectorAll(selector)\n            : undefined;\n\n        if (interactable === interaction.target) { return; }\n\n        if (scope.inContext(interactable, eventTarget)\n            && !interactable.options.drag.manualStart\n            && !scope.testIgnore(interactable, element, eventTarget)\n            && scope.testAllow(interactable, element, eventTarget)\n            && utils.matchesSelector(element, selector, elements)\n            && interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element).name === 'drag'\n            && checkAxis(axis, interactable)\n            && scope.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n          return interactable;\n        }\n      };\n\n      let element = eventTarget;\n\n      // check all interactables\n      while (utils.isElement(element)) {\n        const elementInteractable = scope.interactables.get(element);\n\n        if (elementInteractable\n            && elementInteractable !== interaction.target\n            && !elementInteractable.options.drag.manualStart\n            && elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element).name === 'drag'\n            && checkAxis(axis, elementInteractable)) {\n\n          interaction.prepared.name = 'drag';\n          interaction.target = elementInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        const selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n        if (selectorInteractable) {\n          interaction.prepared.name = 'drag';\n          interaction.target = selectorInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        element = utils.parentElement(element);\n      }\n    }\n  }\n});\n\nInteraction.signals.on('start-drag', function ({ interaction, event }) {\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('move-drag', function ({ interaction, event }) {\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('end-drag', function ({ interaction, event }) {\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nfunction checkAxis (axis, interactable) {\n  if (!interactable) { return false; }\n\n  const thisAxis = interactable.options.drag.axis;\n\n  return (axis === 'xy' || thisAxis === 'xy' || thisAxis === axis);\n}\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     axis: 'x' || 'y' || 'xy',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.drag.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      delete this.options.drag.axis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nbase.drag = drag;\nbase.names.push('drag');\nutils.merge(scope.eventTypes, [\n  'dragstart',\n  'dragmove',\n  'draginertiastart',\n  'dragend',\n]);\nbase.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n","const base = require('./base');\nconst utils = require('../utils');\nconst scope = require('../scope');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drop = {\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nInteraction.signals.on('start-drag', function ({ interaction, event }) {\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements  = [];\n  interaction.activeDrops.rects     = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  const dragEvent = interaction.prevEvent;\n  const dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new-drag', function ({ interaction, iEvent, event }) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const draggableElement = interaction.element;\n  const dragEvent = iEvent;\n  const dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget  = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('move-drag', function ({ interaction }) {\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('end-drag', function ({ interaction }) {\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('stop-drag', function ({ interaction }) {\n  interaction.activeDrops.dropzones =\n    interaction.activeDrops.elements =\n    interaction.activeDrops.rects =\n    interaction.dropEvents = null;\n});\n\nfunction collectDrops (interaction, element) {\n  const drops = [];\n  const elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const current of scope.interactables) {\n    if (!current.options.drop.enabled) { continue; }\n\n    const accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if ((utils.isElement(accept) && accept !== element)\n        || (utils.isString(accept)\n        && !utils.matchesSelector(element, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.isString(current.target)\n      ? current._context.querySelectorAll(current.target)\n      : [current.target];\n\n    for (let i = 0; i < dropElements.length; i++) {\n      const currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements,\n    dropzones: drops,\n  };\n}\n\nfunction fireActiveDrops (interaction, event) {\n  let prevElement;\n\n  // loop through all active dropzones and trigger event\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    const current = interaction.activeDrops.dropzones[i];\n    const currentElement = interaction.activeDrops.elements [i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops (interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements  = possibleDrops.elements;\n  interaction.activeDrops.rects     = [];\n\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] =\n      interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop (dragEvent, event, dragElement) {\n  const interaction = dragEvent.interaction;\n  const validDrops = [];\n\n  if (scope.dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (let j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    const current        = interaction.activeDrops.dropzones[j];\n    const currentElement = interaction.activeDrops.elements [j];\n    const rect           = interaction.activeDrops.rects    [j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect)\n      ? currentElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element : interaction.activeDrops.elements [dropIndex] || null,\n  };\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = {\n        dragEvent,\n        interaction,\n        target       : interaction.prevDropElement,\n        dropzone     : interaction.prevDropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragleave',\n      };\n\n      dragEvent.dragLeave    = interaction.prevDropElement;\n      dragEvent.prevDropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent,\n        interaction,\n        target       : interaction.dropElement,\n        dropzone     : interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragenter',\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = {\n      dragEvent,\n      interaction,\n      target       : interaction.dropElement,\n      dropzone     : interaction.dropTarget,\n      relatedTarget: dragEvent.target,\n      draggable    : dragEvent.interactable,\n      timeStamp    : dragEvent.timeStamp,\n      type         : 'drop',\n    };\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = {\n      dragEvent,\n      interaction,\n      target       : null,\n      dropzone     : null,\n      relatedTarget: dragEvent.target,\n      draggable    : dragEvent.interactable,\n      timeStamp    : dragEvent.timeStamp,\n      type         : 'dropactivate',\n    };\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = {\n      dragEvent,\n      interaction,\n      target       : null,\n      dropzone     : null,\n      relatedTarget: dragEvent.target,\n      draggable    : dragEvent.interactable,\n      timeStamp    : dragEvent.timeStamp,\n      type         : 'dropdeactivate',\n    };\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = {\n      dragEvent,\n      interaction,\n      target       : interaction.dropElement,\n      dropzone     : interaction.dropTarget,\n      relatedTarget: dragEvent.target,\n      draggable    : dragEvent.interactable,\n      dragmove     : dragEvent,\n      timeStamp    : dragEvent.timeStamp,\n      type         : 'dropmove',\n    };\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, dropEvents) {\n  if (dropEvents.leave) { interaction.prevDropTarget.fire(dropEvents.leave); }\n  if (dropEvents.enter) {     interaction.dropTarget.fire(dropEvents.enter); }\n  if (dropEvents.drop ) {     interaction.dropTarget.fire(dropEvents.drop ); }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget  = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.isFunction(options.ondrop)          ) { this.ondrop           = options.ondrop          ; }\n    if (utils.isFunction(options.ondropactivate)  ) { this.ondropactivate   = options.ondropactivate  ; }\n    if (utils.isFunction(options.ondropdeactivate)) { this.ondropdeactivate = options.ondropdeactivate; }\n    if (utils.isFunction(options.ondragenter)     ) { this.ondragenter      = options.ondragenter     ; }\n    if (utils.isFunction(options.ondragleave)     ) { this.ondragleave      = options.ondragleave     ; }\n    if (utils.isFunction(options.ondropmove)      ) { this.ondropmove       = options.ondropmove      ; }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    }\n    else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return (this.options.drop.checker\n      ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement);\n    const page = utils.getPageXY(dragEvent);\n    let horizontal;\n    let vertical;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = (page.x > rect.left) && (page.x < rect.right);\n    vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function ({ interactable }) {\n  interactable.dropzone(false);\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget      = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement     = null; // the element at the time of checking\n  interaction.prevDropTarget  = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents      = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [],      // the dropzones that are mentioned below\n    elements : [],      // elements of dropzones that accept the target draggable\n    rects    : [],      // the rects of the elements mentioned above\n  };\n\n});\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  interaction.dropTarget = interaction.dropElement =\n    interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\nutils.merge(scope.eventTypes, [\n  'dragenter',\n  'dragleave',\n  'dropactivate',\n  'dropdeactivate',\n  'dropmove',\n  'drop',\n]);\nbase.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n","const base = require('./base');\nconst utils = require('../utils');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst scope = require('../scope');\nconst defaultOptions = require('../defaultOptions');\n\nconst gesture = {\n  defaults: {\n    manualStart  : false,\n    enabled      : false,\n    max          : Infinity,\n    maxPerElement: 1,\n\n    restrict: null,\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  },\n};\n\nInteraction.signals.on('start-gesture', function ({ interaction, event }) {\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('move-gesture', function ({ interaction, event }) {\n  if (!interaction.pointerIds.length) {\n    return interaction.prevEvent;\n  }\n\n  let gestureEvent;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity\n      && gestureEvent.scale !== null\n      && gestureEvent.scale !== undefined\n      && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('end-gesture', function ({ interaction, event }) {\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false? false: true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('gesture', function (arg) {\n  if (arg.action !== 'gesture') { return; }\n\n  const { interaction, iEvent, starting, ending, deltaSource } = arg;\n  const pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0,   // distance between two touches of touchStart\n    prevDistance : 0,\n    distance     : 0,\n\n    scale: 1,           // gesture.distance / gesture.startDistance\n\n    startAngle: 0,      // angle of line joining two touches\n    prevAngle : 0,      // angle of the previous gesture event\n  };\n});\n\nbase.gesture = gesture;\nbase.names.push('gesture');\nutils.merge(scope.eventTypes, [\n  'gesturestart',\n  'gesturemove',\n  'gestureinertiastart',\n  'gestureend',\n]);\nbase.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n","const base = require('./base');\nconst utils = require('../utils');\nconst browser = require('../utils/browser');\nconst scope = require('../scope');\nconst InteractEvent = require('../InteractEvent');\nconst Interactable = require('../Interactable');\nconst Interaction = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst resize = {\n  defaults: {\n    enabled      : false,\n    manualStart  : false,\n    max          : Infinity,\n    maxPerElement: 1,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) { return null; }\n\n    const page = utils.extend({}, interaction.curCoords.page);\n    const options = interactable.options;\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize;\n      const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n                                              resizeOptions.edges[edge],\n                                              page,\n                                              interaction._eventTarget,\n                                              element,\n                                              rect,\n                                              resizeOptions.margin || scope.margin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          };\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - scope.margin);\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - scope.margin);\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right? 'x' : '') + (bottom? 'y' : ''),\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: (browser.isIe9OrOlder ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  }),\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    }\n    else if (action.edges) {\n      let cursorKey = '';\n      const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  },\n};\n\nInteraction.signals.on('start-resize', function ({ interaction, event }) {\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    const startRect = interaction.target.getRect(interaction.element);\n    const resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n      linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n      linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n      linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    }\n    else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start     : startRect,\n      current   : utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous  : utils.extend({}, startRect),\n      delta     : {\n        left: 0, right : 0, width : 0,\n        top : 0, bottom: 0, height: 0,\n      },\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('move-resize', function ({ interaction, event }) {\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  if (edges) {\n    const start      = interaction.resizeRects.start;\n    const current    = interaction.resizeRects.current;\n    const restricted = interaction.resizeRects.restricted;\n    const delta      = interaction.resizeRects.delta;\n    const previous   = utils.extend(interaction.resizeRects.previous, restricted);\n    const originalEdges = edges;\n\n    let dx = resizeEvent.dx;\n    let dy = resizeEvent.dy;\n\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    if (resizeOptions.preserveAspectRatio) {\n      const resizeStartAspectRatio = interaction.resizeStartAspectRatio;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if ((originalEdges.left && originalEdges.bottom)\n          || (originalEdges.right && originalEdges.top)) {\n        dy = -dx / resizeStartAspectRatio;\n      }\n      else if (originalEdges.left || originalEdges.right) { dy = dx / resizeStartAspectRatio; }\n      else if (originalEdges.top || originalEdges.bottom) { dx = dy * resizeStartAspectRatio; }\n    }\n    else if (resizeOptions.square) {\n      edges = interaction.prepared._linkedEdges;\n\n      if ((originalEdges.left && originalEdges.bottom)\n          || (originalEdges.right && originalEdges.top)) {\n        dy = -dx;\n      }\n      else if (originalEdges.left || originalEdges.right) { dy = dx; }\n      else if (originalEdges.top || originalEdges.bottom) { dx = dy; }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top   ) { current.top    += dy; }\n    if (edges.bottom) { current.bottom += dy; }\n    if (edges.left  ) { current.left   += dx; }\n    if (edges.right ) { current.right  += dx; }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        let swap;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    }\n    else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top    = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left   = Math.min(current.left, start.right);\n      restricted.right  = Math.max(current.right, start.left);\n    }\n\n    restricted.width  = restricted.right  - restricted.left;\n    restricted.height = restricted.bottom - restricted.top ;\n\n    for (const edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('end-resize', function ({ interaction, event }) {\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false? false: true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      this.options.resize.axis = scope.defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    }\n    else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.isNumber(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.isNumber(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) { return false; }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('resize', function ({ interaction, iEvent }) {\n  if (!interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    }\n    else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nbase.resize = resize;\nbase.names.push('resize');\nutils.merge(scope.eventTypes, [\n  'resizestart',\n  'resizemove',\n  'resizeinertiastart',\n  'resizeend',\n]);\nbase.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n","const raf            = require('./utils/raf');\nconst getWindow      = require('./utils/window').getWindow;\nconst isWindow       = require('./utils/isType').isWindow;\nconst domUtils       = require('./utils/domUtils');\nconst Interaction    = require('./Interaction');\nconst defaultOptions = require('./defaultOptions');\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    container: null,     // the item that is scrolled (Window or HTMLElement)\n    margin   : 60,\n    speed    : 300,      // the scroll speed in pixels per second\n  },\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(autoScroll.interaction.element);\n    const now = new Date().getTime();\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    const s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      }\n      else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop  += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    const options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function ({ interaction, pointer }) {\n    if (!(interaction.interacting()\n          && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.inertiaStatus.active) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const options = interaction.target.options[interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left   = pointer.clientX < autoScroll.margin;\n      top    = pointer.clientY < autoScroll.margin;\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container);\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin;\n      top    = pointer.clientY < rect.top    + autoScroll.margin;\n      right  = pointer.clientX > rect.right  - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = (right ? 1: left? -1: 0);\n    autoScroll.y = (bottom? 1:  top? -1: 0);\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed  = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  },\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('move-done', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n","const Interaction    = require('./Interaction');\nconst actions        = require('./actions/base');\nconst modifiers      = require('./modifiers/base');\nconst defaultOptions = require('./defaultOptions');\nconst browser        = require('./utils/browser');\nconst scope          = require('./scope');\nconst utils          = require('./utils');\n\n// mouse move cursor style\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n  if (!interaction.mouse || interaction.pointerIsDown) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  const { interaction, pointer, event, preEnd } = arg;\n\n  if (!(interaction.pointerIsDown && interaction.pointerWasMoved && interaction.prepared.name)) {\n    return;\n  }\n\n  // ignore movement while inertia is active\n  if (!interaction.inertiaStatus.active || /inertiastart/.test(pointer.type)) {\n\n    // if just starting an action, calculate the pointer speed now\n    if (!interaction.interacting()) {\n      utils.setEventDeltas(interaction.pointerDelta, interaction.prevCoords, interaction.curCoords);\n\n      Interaction.signals.fire('before-start-' + interaction.prepared.name, arg);\n    }\n\n    const starting = !!interaction.prepared.name && !interaction.interacting();\n\n    if (starting\n        && (interaction.target.options[interaction.prepared.name].manualStart\n        || !scope.withinInteractionLimit(interaction.target, interaction.element, interaction.prepared))) {\n      interaction.stop(event);\n      return;\n    }\n\n    if (interaction.prepared.name && interaction.target) {\n      if (starting) {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }\n\n      const modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n      // move if snapping or restriction doesn't prevent it\n      if (modifierResult.shouldMove || starting) {\n        Interaction.signals.fire('move-' + interaction.prepared.name, arg);\n      }\n\n      interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n    }\n  }\n});\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = Interaction.validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && scope.withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n  let action = null;\n\n  function pushMatches (interactable, selector, context) {\n    const elements = (browser.useMatchesSelectorPolyfill\n      ? context.querySelectorAll(selector)\n      : undefined);\n\n    if (scope.inContext(interactable, element)\n        && !scope.testIgnore(interactable, element, eventTarget)\n      && scope.testAllow(interactable, element, eventTarget)\n      && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    const elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable\n        && (action = Interaction.validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable))) {\n      return {\n        element,\n        action,\n        target: elementInteractable,\n      };\n    }\n    else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentElement(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  interaction.setEventXY(interaction.startCoords, interaction.pointers);\n\n  Interaction.signals.fire('prepared', { interaction: interaction });\n}\n\ndefaultOptions.perAction.manualStart = false;\n","module.exports = {\n  base: {\n    accept        : null,\n    actionChecker : null,\n    styleCursor   : true,\n    preventDefault: 'auto',\n    origin        : { x: 0, y: 0 },\n    deltaSource   : 'page',\n    allowFrom     : null,\n    ignoreFrom    : null,\n    checker       : null,\n  },\n\n  perAction: {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n\n    inertia: {\n      enabled          : false,\n      resistance       : 10,    // the lambda in exponential decay\n      minSpeed         : 100,   // target speed must be above this for inertia to start\n      endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n      allowResume      : true,  // allow resuming an action in inertia phase\n      zeroResumeDelta  : true,  // if an action is resumed after launch, set dx/dy to 0\n      smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n    },\n  },\n\n  _holdDuration: 600,\n};\n","const Interaction = require('./Interaction');\nconst actions = require('./actions/base');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nInteraction.signals.on('prepared', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(() => {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nfor (const action of actions.names) {\n  Interaction.signals.on('before-start-' + action, preventImmediateMove);\n}\n\nInteraction.signals.on('move-done', function ({ interaction }) {\n  if (interaction.pointerWasMoved) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\nfunction preventImmediateMove ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n}\n","// browser entry point\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\nrequire('./delay.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// pointerEvents\nrequire('./pointerEvents');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\nrequire('./Interaction');\nrequire('./autoStart');\n\nmodule.exports = require('./interact');\n","/**\n * interact.js v1.2.5\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n\nconst browser      = require('./utils/browser');\nconst events       = require('./utils/events');\nconst utils        = require('./utils');\nconst scope        = require('./scope');\nconst Interactable = require('./Interactable');\n\nscope.dynamicDrop = false;\n\n// Less Precision with touch input\nscope.margin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\nscope.pointerMoveTolerance = 1;\n\n// Allow this many interactions to happen simultaneously\nscope.maxInteractions = Infinity;\n\n// because Webkit and Opera still use 'mousewheel' event type\nscope.wheelEvent = 'onmousewheel' in scope.document? 'mousewheel': 'wheel';\n\nscope.globalEvents = {};\n\nscope.inContext = function (interactable, element) {\n  return (interactable._context === element.ownerDocument\n          || utils.nodeContains(interactable._context, element));\n};\n\nscope.testIgnore = function (interactable, interactableElement, element) {\n  const ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) { return false; }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  }\n  else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n};\n\nscope.testAllow = function (interactable, interactableElement, element) {\n  const allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) { return true; }\n\n  if (!utils.isElement(element)) { return false; }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  }\n  else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n};\n\nscope.interactables.indexOfElement = function indexOfElement (target, context) {\n  context = context || scope.document;\n\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    if (interactable.target === target\n        && (!utils.isString(target) || (interactable._context === context))) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet (element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!utils.isString(interactable.target)) {\n      continue;\n    }\n\n    const ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact(document.getElementById('draggable')).draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // something cool...\n |     })\n |     .autoScroll(true);\n\\*/\nfunction interact (element, options) {\n  return scope.interactables.get(element, options) || new Interactable(element, options);\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(scope.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!scope.globalEvents[type]) {\n      scope.globalEvents[type] = [listener];\n    }\n    else {\n      scope.globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, useCapture);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(scope.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  }\n  else {\n    let index;\n\n    if (type in scope.globalEvents\n        && (index = utils.indexOf(scope.globalEvents[type], listener)) !== -1) {\n      scope.globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointerAverage;\ninteract.getTouchBBox       = utils.touchBBox;\ninteract.getTouchDistance   = utils.touchDistance;\ninteract.getTouchAngle      = utils.touchAngle;\n\ninteract.getElementRect       = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector      = utils.matchesSelector;\ninteract.closest              = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (let i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n    //}\n\n    scope.dynamicDrop = newValue;\n\n    return interact;\n  }\n  return scope.dynamicDrop;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return scope.pointerMoveTolerance;\n};\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    scope.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return scope.maxInteractions;\n};\n\nscope.interact = interact;\n\nmodule.exports = interact;\n","const scope   = require('./scope');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst iFinder = require('./utils/interactionFinder');\n\nconst toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick (event) {\n  const interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) { return; }\n\n  if (interaction.prevTap\n      && event.clientX === interaction.prevTap.clientX\n      && event.clientY === interaction.prevTap.clientY\n      && event.target  === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes  [0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  scope.signals.on('listen-to-document', function ({ doc }) {\n    // For IE's lack of Event#preventDefault\n    events.add(doc, 'selectstart', function (event) {\n      const interaction = scope.interactions[0];\n\n      if (interaction.currentAction()) {\n        interaction.checkAndPreventDefault(event);\n      }\n    });\n\n    if (scope.pointerEvents) {\n      events.add(doc, 'dblclick', onIE8Dblclick);\n    }\n  });\n}\n\nmodule.exports = null;\n","const extend = require('../utils/extend');\n\nconst modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n\n      offsets[modifierName] =\n        modifiers[modifiers.names[i]].setOffset(interaction,\n                                                interactable, element, rect,\n                                                interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    const result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true,\n    };\n    const target = interaction.target;\n    const coords = extend({}, coordsArg);\n\n    let currentStatus;\n\n    for (const modifierName of modifiers.names) {\n      const modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) { continue; }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (const modifierName of modifiers.names) {\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n};\n\nmodule.exports = modifiers;\n","const modifiers = require('./base');\nconst utils = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst restrict = {\n  defaults: {\n    enabled    : false,\n    endOnly    : false,\n    restriction: null,\n    elementRect: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const restrictOptions = interactable.options[actionName].restrict;\n\n    return (restrictOptions && restrictOptions.enabled\n            && (preEnd || !restrictOptions.endOnly)\n            && (!requireEndOnly || restrictOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    const offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - (rect.width  * elementRect.left);\n      offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n      offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n      offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n    }\n    else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const target    = interaction.target;\n    const restrictOptions  = target && target.options[interaction.prepared.name].restrict;\n    let restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, pageCoords);\n\n    page.x -= interaction.inertiaStatus.resumeDx;\n    page.y -= interaction.inertiaStatus.resumeDy;\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    let rect;\n    let restrictedX;\n    let restrictedY;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentElement(interaction.element);\n      }\n      else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      }\n      else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) { return status; }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    const offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n      restrictedX = Math.max(Math.min(rect.x + rect.width  - offset.right , page.x), rect.x + offset.left);\n      restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top );\n    }\n    else {\n      restrictedX = Math.max(Math.min(rect.right  - offset.right , page.x), rect.left + offset.left);\n      restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top  + offset.top );\n    }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const options = interactable.options[actionName].restrict;\n    const elementRect = options && options.elementRect;\n\n    if (modifiers.restrict.shouldDo(interactable, actionName)\n        && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n","const modifiers = require('./base');\nconst interact = require('../interact');\nconst utils = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const snapOptions = interactable.options[actionName].snap;\n\n    return (snapOptions && snapOptions.enabled\n            && (preEnd || !snapOptions.endOnly)\n            && (!requireEndOnly || snapOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const offsets = [];\n    const origin = utils.getOriginXY(interactable, element);\n    const snapOptions = interactable.options[interaction.prepared.name].snap;\n    const snapOffset = (snapOptions && snapOptions.offset === 'startCoords'\n      ? {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y,\n      }\n      : snapOptions && snapOptions.offset || { x: 0, y: 0 });\n\n    if (rect && snapOptions && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (const { x: relativeX, y: relativeY } of snapOptions.relativePoints) {\n        offsets.push({\n          x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n          y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n        });\n      }\n    }\n    else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    const targets = [];\n    let target;\n    let page;\n    let i;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    }\n    else {\n      const origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    page.x -= interaction.inertiaStatus.resumeDx;\n    page.y -= interaction.inertiaStatus.resumeDy;\n\n    const offsets = interaction.modifierOffsets.snap;\n    let len = snapOptions.targets? snapOptions.targets.length : 0;\n\n    for (const { x: offsetX, y: offsetY } of offsets) {\n      const relativeX = page.x - offsetX;\n      const relativeY = page.y - offsetY;\n\n      for (const snapTarget of snapOptions.targets) {\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        }\n        else {\n          target = snapTarget;\n        }\n\n        if (!target) { continue; }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? (target.x + offsetX) : relativeX,\n          y: utils.isNumber(target.y) ? (target.y + offsetY) : relativeY,\n\n          range: utils.isNumber(target.range)? target.range: snapOptions.range,\n        });\n      }\n    }\n\n    const closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0,\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      const range = target.range;\n      const dx = target.x - page.x;\n      const dy = target.y - page.y;\n      const distance = utils.hypot(dx, dy);\n      let inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n          // is the closest target in range?\n          ? (closest.inRange && range !== Infinity\n          // the pointer is relatively deeper in this target\n          ? distance / range < closest.distance / closest.range\n          // this target has Infinite range and the closest doesn't\n          : (range === Infinity && closest.range !== Infinity)\n          // OR this target is closer that the previous closest\n        || distance < closest.distance)\n          // The other is not in range and the pointer is closer to this target\n          : (!closest.inRange && distance < closest.distance))) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    let snapChanged;\n\n    if (closest.target) {\n      snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    }\n    else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = (snapChanged || (closest.inRange && !status.locked));\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const snapOptions = interactable.options[actionName].snap;\n    const relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled\n        && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range  : status.range,\n        locked : status.locked,\n        x      : status.snappedX,\n        y      : status.snappedY,\n        realX  : status.realX,\n        realY  : status.realY,\n        dx     : status.dx,\n        dy     : status.dy,\n      };\n    }\n  },\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    const gridx = Math.round((x - offsetX) / grid.x);\n    const gridy = Math.round((y - offsetY) / grid.y);\n\n    const newX = gridx * grid.x + offsetX;\n    const newY = gridy * grid.y + offsetY;\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range,\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n","const scope = require('./scope');\nconst InteractEvent = require('./InteractEvent');\nconst Interaction = require('./Interaction');\nconst utils = require('./utils');\nconst browser = require('./utils/browser');\n\nconst simpleSignals = [ 'down', 'up', 'up', 'cancel' ];\nconst simpleEvents = [ 'down', 'up', 'tap', 'cancel' ];\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction firePointers (interaction, pointer, event, eventTarget, targets, elements, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  let pointerEvent = {};\n  let i;\n  // for tap events\n  let interval;\n  let createNewDoubleTap;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  }\n  else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault           = preventOriginalDefault;\n    pointerEvent.stopPropagation          = InteractEvent.prototype.stopPropagation;\n    pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n    pointerEvent.interaction              = interaction;\n\n    pointerEvent.timeStamp     = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type          = eventType;\n    pointerEvent.pointerId     = utils.getPointerId(pointer);\n    pointerEvent.pointerType   = interaction.mouse? 'mouse' : !browser.supportsPointerEvent? 'touch'\n      : utils.isString(pointer.pointerType)\n        ? pointer.pointerType\n        : [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap'\n                            && interaction.prevTap.target === pointerEvent.target\n                            && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  for (i = 0; i < targets.length; i++) {\n    pointerEvent.currentTarget = elements[i];\n    pointerEvent.interactable = targets[i];\n    targets[i].fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && elements[i + 1] !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  if (createNewDoubleTap) {\n    const doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt   = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  }\n  else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets (interaction, pointer, event, eventTarget, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  const targets = [];\n  const elements = [];\n  let element = eventTarget;\n\n  function collectSelectors (interactable, selector, context) {\n    const els = browser.useMatchesSelectorPolyfill\n        ? context.querySelectorAll(selector)\n        : undefined;\n\n    if (interactable._iEvents[eventType]\n        && utils.isElement(element)\n        && scope.inContext(interactable, element)\n        && !scope.testIgnore(interactable, element, eventTarget)\n        && scope.testAllow(interactable, element, eventTarget)\n        && utils.matchesSelector(element, selector, els)) {\n\n      targets.push(interactable);\n      elements.push(element);\n    }\n  }\n\n  const interact = scope.interact;\n\n  while (element) {\n    if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n      targets.push(interact(element));\n      elements.push(element);\n    }\n\n    scope.interactables.forEachSelector(collectSelectors);\n\n    element = utils.parentElement(element);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, elements, eventType);\n  }\n}\n\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n  const pointerIndex = (interaction.mouse\n    ? 0\n    : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer)));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n  // copy event to be used in timeout for IE8\n  const eventCopy = browser.isIE8? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction,\n                        browser.isIE8? eventCopy : pointer,\n                        eventCopy,\n                        eventTarget,\n                        'hold');\n\n  }, scope.defaultOptions._holdDuration);\n});\n\nfunction createSignalListener (event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction,\n                        arg.pointer,\n                        arg.event,\n                        arg.eventTarget,\n                        event);\n  };\n}\n\nfor (let i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null;  // the most recent tap event on this interaction\n  interaction.tapTime = 0;     // time of the most recent tap event\n});\n\nutils.merge(scope.eventTypes, [\n  'down',\n  'move',\n  'up',\n  'cancel',\n  'tap',\n  'doubletap',\n  'hold',\n]);\n\nmodule.exports = scope.pointerEvents = {\n  firePointers,\n  collectEventTargets,\n  preventOriginalDefault,\n};\n","const scope   = {};\nconst utils   = require('./utils');\n\nscope.defaultOptions = require('./defaultOptions');\nscope.events         = require('./utils/events');\n\nscope.signals        = new (require('./utils/Signals'));\n\nutils.extend(scope, require('./utils/window'));\nutils.extend(scope, require('./utils/domObjects'));\n\nscope.documents  = [];  // all documents being listened to\nscope.eventTypes = [];  // all event types specific to interact.js\n\nscope.withinInteractionLimit = function (interactable, element, action) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  for (let i = 0, len = scope.interactions.length; i < len; i++) {\n    const interaction = scope.interactions[i];\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= scope.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return scope.maxInteractions > 0;\n};\n\nscope.endAllInteractions = function (event) {\n  for (let i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].pointerEnd(event, event);\n  }\n};\n\nscope.prefixedPropREs = utils.prefixedPropREs;\n\nscope.signals.on('listen-to-document', function ({ doc }) {\n  // if document is already known\n  if (utils.contains(scope.documents, doc)) {\n    // don't call any further signal listeners\n    return false;\n  }\n});\n\nmodule.exports = scope;\n","const { indexOf } = require('./arr');\n\nclass Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (let i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  }\n}\n\nmodule.exports = Signals;\n","function indexOf (array, target) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains (array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge (target, source) {\n  for (let i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf,\n  contains,\n  merge,\n};\n","const win        = require('./window');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!(('ontouchstart' in win.window) || win.window.DocumentTouch\n                     && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: ('attachEvent' in win.window) && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: (navigator.appName === 'Opera'\n      && browser.supportsTouch\n      && navigator.userAgent.match('Presto')),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n  isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype\n    ? 'matches': 'webkitMatchesSelector' in Element.prototype\n    ? 'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype\n    ? 'mozMatchesSelector': 'oMatchesSelector' in Element.prototype\n    ? 'oMatchesSelector': 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === win.window.MSPointerEvent\n      ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n          out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' }\n      : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n          out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' })\n    : null),\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n","const domObjects = {};\nconst win = require('./window').window;\n\nfunction blank () {}\n\ndomObjects.document           = win.document;\ndomObjects.DocumentFragment   = win.DocumentFragment   || blank;\ndomObjects.SVGElement         = win.SVGElement         || blank;\ndomObjects.SVGSVGElement      = win.SVGSVGElement      || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement        = win.HTMLElement        || win.Element;\n\ndomObjects.Event        = win.Event;\ndomObjects.Touch        = win.Touch || blank;\ndomObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent);\n\nmodule.exports = domObjects;\n","const win        = require('./window');\nconst browser    = require('./browser');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (child, selector) {\n    let parent = domUtils.parentElement(child);\n\n    while (isType.isElement(parent)) {\n      if (domUtils.matchesSelector(parent, selector)) { return parent; }\n\n      parent = domUtils.parentElement(parent);\n    }\n\n    return null;\n  },\n\n  parentElement: function (node) {\n    let parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill\n    ? function (element, selector, elems) {\n      elems = elems || element.parentNode.querySelectorAll(selector);\n\n      for (let i = 0, len = elems.length; i < len; i++) {\n        if (elems[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    let deepestZoneParents = [];\n    let dropzoneParents = [];\n    let dropzone;\n    let deepestZone = elements[0];\n    let index = deepestZone? 0: -1;\n    let parent;\n    let child;\n    let i;\n    let n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement\n          && dropzone instanceof domObjects.SVGElement\n          && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      }\n      else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      const parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n],\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        }\n        else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (domUtils.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentElement(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return (element instanceof domObjects.SVGElementInstance\n      ? element.correspondingUseElement\n      : element);\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n    };\n  },\n\n  getElementClientRect: function (element) {\n    const clientRect = (element instanceof domObjects.SVGElement\n      ? element.getBoundingClientRect()\n      : element.getClientRects()[0]);\n\n    return clientRect && {\n      left  : clientRect.left,\n      right : clientRect.right,\n      top   : clientRect.top,\n      bottom: clientRect.bottom,\n      width : clientRect.width  || clientRect.right  - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    };\n  },\n\n  getElementRect: function (element) {\n    const clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      const scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left   += scroll.x;\n      clientRect.right  += scroll.x;\n      clientRect.top    += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  },\n};\n\nmodule.exports = domUtils;\n","const arr       = require('./arr');\nconst isType    = require('./isType');\nconst domUtils  = require('./domUtils');\nconst indexOf   = arr.indexOf;\nconst contains  = arr.contains;\nconst getWindow = require('./window').getWindow;\n\nconst useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window);\nconst addEvent       = useAttachEvent?  'attachEvent': 'addEventListener';\nconst removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener';\nconst on             = useAttachEvent? 'on': '';\n\nconst elements          = [];\nconst targets           = [];\nconst attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nconst delegatedEvents = {};\n\nconst documents = [];\n\nfunction add (element, type, listener, useCapture) {\n  let elementIndex = indexOf(elements, element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push((useAttachEvent ? {\n      supplied: [],\n      wrapped : [],\n      useCount: [],\n    } : null));\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    let ret;\n\n    if (useAttachEvent) {\n      const { supplied, wrapped, useCount } = attachedListeners[elementIndex];\n      const listenerIndex = indexOf(supplied, listener);\n\n      const wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault           = event.preventDefault           || preventDef;\n          event.stopPropagation          = event.stopPropagation          || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      }\n      else {\n        useCount[listenerIndex]++;\n      }\n    }\n    else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove (element, type, listener, useCapture) {\n  const elementIndex = indexOf(elements, element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  let wrappedListener = listener;\n  let listeners;\n  let listenerIndex;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (let i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate (selector, context, type, listener, useCapture) {\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const fn = listeners[i][0];\n        const useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, useCapture) {\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const eventTarget = (domUtils.getActualElement(event.path\n    ? event.path[0]\n    : event.target));\n  let element = eventTarget;\n\n  useCapture = useCapture? true: false;\n\n  // duplicate the event so that currentTarget can be changed\n  for (const prop in event) {\n    fakeEvent[prop] = event[prop];\n  }\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentElement(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef () {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp () {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp () {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners,\n};\n","module.exports = function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n","const { closest, parentElement, getElementRect } = require('./domUtils');\nconst { isElement, isFunction, trySelector }     = require('./isType');\n\nmodule.exports = function (interactable, element) {\n  let origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentElement(element);\n  }\n  else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  }\n  else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin))  {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = ('x' in origin)? origin.x : origin.left;\n  origin.y = ('y' in origin)? origin.y : origin.top;\n\n  return origin;\n};\n","module.exports = (x, y) =>  Math.sqrt(x * x + y * y);\n","const utils = module.exports;\nconst extend = require('./extend');\nconst win = require('./window');\n\nutils.blank = function () {};\n\nutils.warnOnce = function (method, message) {\n  let warned = false;\n\n  return function () {\n    if (!warned) {\n      win.window.console.warn(message);\n      warned = true;\n    }\n\n    return method.apply(this, arguments);\n  };\n};\n\n// http://stackoverflow.com/a/5634528/2280888\nutils._getQBezierValue = function (t, p1, p2, p3) {\n  const iT = 1 - t;\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n};\n\nutils.getQuadraticCurvePoint = function (startX, startY, cpX, cpY, endX, endY, position) {\n  return {\n    x:  utils._getQBezierValue(position, startX, cpX, endX),\n    y:  utils._getQBezierValue(position, startY, cpY, endY),\n  };\n};\n\n// http://gizma.com/easing/\nutils.easeOutQuad = function (t, b, c, d) {\n  t /= d;\n  return -c * t*(t-2) + b;\n};\n\nutils.copyAction = function (dest, src) {\n  dest.name  = src.name;\n  dest.axis  = src.axis;\n  dest.edges = src.edges;\n\n  return dest;\n};\n\nutils.extend      = extend;\nutils.hypot       = require('./hypot');\nutils.raf         = require('./raf');\nutils.browser     = require('./browser');\nutils.getOriginXY = require('./getOriginXY');\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n","const scope = require('../scope');\nconst utils = require('./index');\nconst browser = require('./browser');\n\nconst finder = {\n  methodOrder: [ 'inertiaResume', 'mouse', 'hasPointer', 'idle' ],\n\n  search: function (pointer, eventType, eventTarget) {\n    const mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n                        // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                        || pointer.pointerType === 4);\n    const pointerId = utils.getPointerId(pointer);\n    const details = { pointer, pointerId, mouseEvent, eventType, eventTarget };\n\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume inertia with a new pointer\n  inertiaResume: function ({ mouseEvent, eventType, eventTarget }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions) {\n      let element = eventTarget;\n\n      if (interaction.inertiaStatus.active && interaction.target.options[interaction.prepared.name].inertia.allowResume\n          && (interaction.mouse === mouseEvent)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentElement(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function ({ mouseEvent, eventType }) {\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    // Find a mouse interaction that's not in inertia phase\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse && !interaction.inertiaStatus.active) {\n        return interaction;\n      }\n    }\n\n    // Find any interaction specifically for mouse.\n    // If the eventType is a mousedown, and inertia is active\n    // ignore the interaction\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.inertiaStatus.active)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId }) {\n    for (const interaction of scope.interactions) {\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function ({ mouseEvent }) {\n    for (const interaction of scope.interactions) {\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        const target = interaction.target;\n        // the new pointer can only be added if the prepared target supports\n        // gesture actions\n        if (!target || !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nmodule.exports = finder;\n","const win        = require('./window');\nconst isWindow   = require('./isWindow');\nconst domObjects = require('./domObjects');\n\nconst isType = {\n  isElement  : function (o) {\n    if (!o || (typeof o !== 'object')) { return false; }\n\n    const _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element)\n      ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string');\n  },\n\n  isArray    : null,\n\n  isWindow   : function (thing) { return thing === win.window || isWindow(thing); },\n\n  isDocFrag  : function (thing) { return !!thing && thing instanceof domObjects.DocumentFragment; },\n\n  isObject   : function (thing) { return !!thing && (typeof thing === 'object'); },\n\n  isFunction : function (thing) { return typeof thing === 'function'; },\n\n  isNumber   : function (thing) { return typeof thing === 'number'  ; },\n\n  isBool     : function (thing) { return typeof thing === 'boolean' ; },\n\n  isString   : function (thing) { return typeof thing === 'string'  ; },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) { return false; }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  },\n};\n\nisType.isArray = function (thing) {\n  return (isType.isObject(thing)\n      && (typeof thing.length !== 'undefined')\n      && isType.isFunction(thing.splice));\n};\n\nmodule.exports = isType;\n","module.exports = (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","const hypot   = require('./hypot');\nconst browser = require('./browser');\nconst dom     = require('./domObjects');\nconst isType  = require('./isType');\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setEventDeltas: function (targetObj, prev, cur) {\n    const now = new Date().getTime();\n\n    targetObj.page.x    = cur.page.x   - prev.page.x;\n    targetObj.page.y    = cur.page.y   - prev.page.y;\n    targetObj.client.x  = cur.client.x - prev.client.x;\n    targetObj.client.y  = cur.client.y - prev.client.y;\n    targetObj.timeStamp = now          - prev.timeStamp;\n\n    // set pointer velocity\n    const dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx      = targetObj.page.x / dt;\n    targetObj.page.vy      = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx    = targetObj.client.x / dt;\n    targetObj.client.vy    = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  prefixedPropREs: {\n    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n  },\n\n  pointerExtend: function (dest, source) {\n    for (const prop in source) {\n      const prefixedPropREs = pointerUtils.prefixedPropREs;\n      let deprecated = false;\n\n      // skip deprecated prefixed properties\n      for (const vendor in prefixedPropREs) {\n        if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n          deprecated = true;\n          break;\n        }\n      }\n\n      if (!deprecated) {\n        dest[prop] = source[prop];\n      }\n    }\n    return dest;\n  },\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n    let angle = 180 * Math.atan(dy / dx) / Math.PI;\n\n    if (isType.isNumber(prevAngle)) {\n      const dr = angle - prevAngle;\n      const drClamped = dr % 360;\n\n      if (drClamped > 315) {\n        angle -= 360 + (angle / 360)|0 * 360;\n      }\n      else if (drClamped > 135) {\n        angle -= 180 + (angle / 360)|0 * 360;\n      }\n      else if (drClamped < -315) {\n        angle += 360 + (angle / 360)|0 * 360;\n      }\n      else if (drClamped < -135) {\n        angle += 180 + (angle / 360)|0 * 360;\n      }\n    }\n\n    return  angle;\n  },\n};\n\nmodule.exports = pointerUtils;\n","const vendors = ['ms', 'moz', 'webkit', 'o'];\nlet lastTime = 0;\nlet request;\nlet cancel;\n\nfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] +'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = setTimeout(function () { callback(currTime + timeToCall); },\n                          timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request,\n  cancel,\n};\n","const win = module.exports;\nconst isWindow = require('./isWindow');\n\nfunction init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nwin.getWindow = function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n"],"sourceRoot":"/source/"}