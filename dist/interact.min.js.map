{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","interact.js","src/Eventable.js","src/InteractEvent.js","src/Interactable.js","src/Interaction.js","src/actions/drag.js","src/actions/drop.js","src/actions/gesture.js","src/actions/index.js","src/actions/resize.js","src/autoScroll.js","src/autoStart/delay.js","src/autoStart/drag.js","src/autoStart/index.js","src/defaultOptions.js","src/index.js","src/inertia.js","src/interact.js","src/interactablePreventDefault.js","src/legacyBrowsers.js","src/modifiers/index.js","src/modifiers/restrict.js","src/modifiers/snap.js","src/pointerEvents/index.js","src/pointerEvents/interactableTargets.js","src/scope.js","src/utils/Signals.js","src/utils/arr.js","src/utils/browser.js","src/utils/domObjects.js","src/utils/domUtils.js","src/utils/events.js","src/utils/extend.js","src/utils/getOriginXY.js","src/utils/hypot.js","src/utils/index.js","src/utils/interactionFinder.js","src/utils/isType.js","src/utils/isWindow.js","src/utils/pointerExtend.js","src/utils/pointerUtils.js","src/utils/raf.js","src/utils/window.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","interact","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","./src/index","./src/utils/window",2,"_classCallCheck","instance","Constructor","TypeError","_require","indexOf","Eventable","prototype","fire","event","listeners","undefined","onEvent","type","len","immediatePropagationStopped","on","eventType","listener","push","off","eventList","index","splice","types","./utils/arr",3,"extend","getOriginXY","defaults","signals","InteractEvent","interaction","action","phase","element","related","target","deltaSource","options","origin","starting","ending","coords","startCoords","curCoords","page","client","x","y","ctrlKey","altKey","shiftKey","metaKey","button","buttons","currentTarget","relatedTarget","t0","downTimes","interactable","signalArg","iEvent","prevEvent","pageX","pageY","clientX","clientY","x0","y0","clientX0","clientY0","timeStamp","dt","pointerDelta","duration","speed","velocityX","vx","velocityY","vy","swipe","getSwipe","angle","Math","atan2","PI","overlap","left","up","right","down","velocity","preventDefault","stopImmediatePropagation","propagationStopped","stopPropagation","_ref","dx","dy","./defaultOptions","./utils/Signals","./utils/extend","./utils/getOriginXY",4,"isType","events","actions","scope","getElementRect","nodeContains","_require2","contains","_require3","wheelEvent","interactables","Interactable","_context","document","_iEvents","_window","trySelector","context","getWindow","Node","isElement","_doc","win","addDocument","set","setOnEvents","phases","onAction","isFunction","onstart","onmove","onend","oninertiastart","setPerAction","option","isObject","perAction","enabled","isBool","getRect","isString","querySelector","rectChecker","checker","newValue","inContext","ownerDocument","_onOffMultiple","method","useCapture","search","trim","split","isArray","prop","addDelegate","add","removeDelegate","remove","base","perActions","actionName","methodDict","methodName","_iterator","settingsMethods","_isArray","Array","_i","Symbol","iterator","next","done","value","setting","unset","delegatedEvents","delegated","selectors","contexts","delegateListener","delegateUseCapture","_iterator2","interactions","_isArray2","_i2","_ref2","interacting","stop","indexOfElement","get","forEachSelector","callback","ret","./Eventable","./actions","./scope","./utils/browser","./utils/domUtils","./utils/events","./utils/isType",5,"doOnInteractions","eventTarget","utils","getActualElement","path","curEventTarget","matches","browser","supportsTouch","test","prevTouchTime","Date","getTime","changedTouches","pointer","finder","Interaction","invalidPointer","supportsPointerEvent","mouse","pointerIsDown","pointerType","_updateEventTargets","endAll","end","onDocSignal","signalName","doc","eventMethod","docEvents","methodNames","prepared","name","axis","edges","pointers","pointerIds","downTargets","holdTimers","prevCoords","downEvent","downPointer","_eventTarget","_curEventTarget","pointerWasMoved","_interacting","pointerDown","pointerIndex","updatePointer","setCoords","copyCoords","pointerExtend","start","copyAction","pointerMove","simulation","duplicateMove","hypot","pointerMoveTolerance","duplicate","interactingBeforeMove","setCoordDeltas","doMove","_dontFireMove","pointerUp","getPointerId","clearTimeout","removePointer","currentAction","id","pEventTypes","PointerEvent","move","cancel","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","touchcancel","blur","endAllInteractions","./utils","./utils/interactionFinder",6,"defaultOptions","drag","snap","restrict","inertia","autoScroll","startAxis","lockAxis","dragOptions","getCursor","dragEvent","abs","_ref3","_ref4","draggable","names","merge","../Eventable","../InteractEvent","../Interactable","../Interaction","../defaultOptions","../utils","./index",7,"collectDrops","drops","elements","current","drop","accept","matchesSelector","dropElements","querySelectorAll","currentElement","dropzones","fireActiveDrops","prevElement","activeDrops","setActiveDrops","dragElement","possibleDrops","rects","getDrop","validDrops","dynamicDrop","j","rect","dropCheck","dropIndex","indexOfDeepestElement","dropzone","getDropEvents","pointerEvent","dropEvents","enter","leave","activate","deactivate","tmpl","dropElement","dropTarget","prevDropElement","prevDropTarget","dragLeave","prevDropzone","dragEnter","dragmove","fireDropEvents","draggableElement","dropResult","_ref5","_ref6","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","isNumber","max","min","dropped","dropOverlap","getPageXY","horizontal","vertical","top","bottom","dragRect","cx","width","cy","height","overlapArea","overlapRatio","_ref7","_ref8","../interact","../scope",8,"gesture","gestureEvent","ds","startDistance","prevDistance","distance","startAngle","prevAngle","scale","Infinity","isNaN","gesturable","touches","touchDistance","box","touchBBox","touchAngle","da","prevScale",9,10,"checkResizeEdge","interactableElement","margin","matchesUpTo","defaultMargin","resize","square","preserveAspectRatio","NaN","invert","resizeOptions","resizeEdges","edge","axes","cursors","isIe9OrOlder","xy","topleft","bottomright","topright","bottomleft","cursorKey","edgeNames","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","restricted","previous","delta","deltaRect","invertible","originalEdges","startAspectRatio","swap","resizable","resizeAxes","../utils/browser",11,"raf","isWindow","domUtils","container","isScrolling","prevTime","request","scroll","now","scrollBy","scrollLeft","scrollTop","check","onInteractionMove","innerWidth","innerHeight","getElementClientRect","./Interaction","./utils/raf","./utils/window",12,"preventImmediateMove","delay","autoStart","delayTimer","setTimeout","../actions",13,"checkStartAxis","thisAxis","parentNode","absX","absY","currentAxis","getDraggable","selector","useMatchesSelectorPolyfill","manualStart","testIgnore","testAllow","getAction","withinInteractionLimit","elementInteractable","selectorInteractable","../utils/domUtils","../utils/isType",14,"ignoreFrom","allowFrom","validateAction","validateSelector","matchElements","match","matchElement","getActionInfo","pushMatches","actionInfo","prepare","styleCursor","documentElement","style","cursor","maxActions","maxPerElement","activeInteractions","targetCount","targetElementCount","otherAction","maxInteractions","perActionDefaults","setActionDefaults","arg","defaultActionChecker","actionChecker","../utils/Signals",15,"resistance","minSpeed","endSpeed","allowResume","smoothEndDuration","_holdDuration",16,"./actions/drag","./actions/drop","./actions/gesture","./actions/resize","./autoScroll","./autoStart","./autoStart/delay","./autoStart/drag","./inertia","./interact","./interactablePreventDefault.js","./legacyBrowsers","./modifiers/restrict","./modifiers/snap","./pointerEvents","./pointerEvents/interactableTargets",17,"calcInertia","status","inertiaOptions","lambda","inertiaDur","log","v0","startEvent","sx","sy","modifiedXe","xe","vx0","modifiedYe","ye","vy0","te","lambda_v0","one_ve_v0","inertiaFrame","updateInertiaCoords","inertiaStatus","progress","exp","quadPoint","getQuadraticCurvePoint","animationFrame","boundInertiaFrame","active","smoothEndFrame","easeOutQuad","boundSmoothEndFrame","smoothEnd","pageUp","upCoords","clientUp","modifiers","vys","apply","resumeEvent","resetStatuses","modifierStatuses","statuses","pointerSpeed","inertiaPossible","modifierResult","setAll","shouldMove","locked","./InteractEvent","./modifiers",18,"globalEvents","isSet","debug","getPointerAverage","pointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","closest","removeDocument","./Interactable",19,"onInteractionEvent","checkAndPreventDefault","nodeName","_arr","eventSignal","dragstart",20,"onIE8Dblclick","iFinder","prevTap","pointerEvents","collectEventTargets","toString","Object","obj","String","replace","isIE8","selectFix","onDocIE8",21,"setOffsets","startOffset","setModifierOffsets","modifierOffsets","offsets","modifierName","setOffset","coordsArg","preEnd","requireEndOnly","result","changed","currentStatus","modifier","shouldDo","reset","modifyCoords","../utils/extend",22,"endOnly","restriction","elementRect","restrictOptions","offset","pageCoords","useStatusXY","restrictedX","restrictedY","modifiedX","modifiedY",23,"range","targets","relativePoints","snapOptions","snapOffset","relativeX","relativeY","realX","realY","offsetX","offsetY","_iterator3","_isArray3","_i3","snapTarget","inRange","snapChanged","snappedX","snappedY","createSnapGrid","grid","limits","gridx","round","gridy","newX","newY",24,"preventOriginalDefault","originalEvent","firePointers","interval","createNewDoubleTap","pointerId","tapTime","props","eventable","doubleTap","getPath","createSignalListener","simpleSignals","simpleEvents","eventCopy",25,"collectSelectors","els",26,"documents","onWindowUnload","./utils/domObjects",27,"Signals","targetListeners","./arr",28,"array","source",29,"domObjects","DocumentTouch","isOperaMobile","navigator","appName","userAgent","isIOS7","platform","appVersion","all","atob","prefixedMatchesSelector","Element","MSPointerEvent","over","out","./domObjects","./isType","./window",30,"blank","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch",31,"parent","child","node","isDocFrag","host","matchesSelectorPolyfill","elems","nodeList","realWindow","deepestZoneParents","dropzoneParents","deepestZone","unshift","ownerSVGElement","parents","lastChild","previousSibling","limit","correspondingUseElement","getScrollXY","relevantWindow","scrollX","scrollY","clientRect","getBoundingClientRect","getClientRects","_scroll","./browser",32,"elementIndex","typeCount","attachedListeners","useAttachEvent","supplied","wrapped","useCount","_attachedListeners$elementIndex","listenerIndex","wrappedListener","srcElement","preventDef","stopProp","stopImmProp","addEvent","removeEvent","hasOwnProperty","matchFound","fn","useCap","fakeEvent","pExtend","returnValue","cancelBubble","arr","_elements","_targets","_attachedListeners","./domUtils","./pointerExtend",33,"dest",34,35,"sqrt",36,"warnOnce","message","warned","console","warn","arguments","_getQBezierValue","p1","p2","p3","iT","startX","startY","cpX","cpY","endX","endY","position","b","c","d","src","./extend","./getOriginXY","./hypot","./pointerUtils",37,"methodOrder","mouseEvent","details","simulationResume","firstNonActive","_iterator4","_isArray4","_i4","hasPointer","_ref9","_iterator5","_isArray5","_i5","idle","_ref10","_iterator6","_isArray6","_i6",38,"nodeType","thing","./isWindow",39,"Window",40,"prefixedPropREs","deprecated","vendor","webkit",41,"dom","pointerUtils","targetObj","prev","cur","isNativePointer","getXY","getClientXY","identifier","tmpXY","getTouchPair","average","screenX","screenY","minX","minY","maxX","maxY","sourceX","sourceY",42,"vendors","lastTime","requestAnimationFrame","currTime","timeToCall",43,"el","createTextNode","wrap","rootNode","defaultView","parentWindow"],"mappings":"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","file":"interact.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n}\nelse {\n  module.exports = require('./src/index');\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n} else {\n  module.exports = require('./src/index');\n}\n\n},{\"./src/index\":16,\"./src/utils/window\":43}],2:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./utils/arr');\n\nvar indexOf = _require.indexOf;\n\nvar Eventable = (function () {\n  function Eventable() {\n    _classCallCheck(this, Eventable);\n  }\n\n  Eventable.prototype.fire = function fire(event) {\n    var listeners = undefined;\n    var onEvent = 'on' + event.type;\n    var global = this.global;\n\n    // Interactable#on() listeners\n    if (event.type in this) {\n      listeners = this[event.type];\n\n      for (var i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n        listeners[i](event);\n      }\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (global && event.type in global && (listeners = global[event.type])) {\n\n      for (var i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n        listeners[i](event);\n      }\n    }\n  };\n\n  Eventable.prototype.on = function on(eventType, listener) {\n    // if this type of event was never bound\n    if (!(eventType in this)) {\n      this[eventType] = [listener];\n    } else {\n      this[eventType].push(listener);\n    }\n  };\n\n  Eventable.prototype.off = function off(eventType, listener) {\n    // if it is an action event type\n    var eventList = this[eventType];\n    var index = eventList ? indexOf(eventList, listener) : -1;\n\n    if (index !== -1) {\n      this[eventType].splice(index, 1);\n    }\n  };\n\n  return Eventable;\n})();\n\nEventable.prototype.types = [];\n\nmodule.exports = Eventable;\n\n},{\"./utils/arr\":28}],3:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar extend = require('./utils/extend');\nvar getOriginXY = require('./utils/getOriginXY');\nvar defaults = require('./defaultOptions');\nvar signals = require('./utils/Signals')['new']();\n\nvar InteractEvent = (function () {\n  function InteractEvent(interaction, event, action, phase, element, related) {\n    _classCallCheck(this, InteractEvent);\n\n    var target = interaction.target;\n    var deltaSource = (target && target.options || defaults).deltaSource;\n    var origin = getOriginXY(target, element);\n    var starting = phase === 'start';\n    var ending = phase === 'end';\n    var coords = starting ? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    var page = extend({}, coords.page);\n    var client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    this.shiftKey = event.shiftKey;\n    this.metaKey = event.metaKey;\n    this.button = event.button;\n    this.buttons = event.buttons;\n    this.target = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.t0 = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type = action + (phase || '');\n    this.interaction = interaction;\n    this.interactable = target;\n\n    var signalArg = {\n      interaction: interaction,\n      event: event,\n      action: action,\n      phase: phase,\n      element: element,\n      related: related,\n      page: page,\n      client: client,\n      coords: coords,\n      starting: starting,\n      ending: ending,\n      deltaSource: deltaSource,\n      iEvent: this\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      var prevEvent = interaction.prevEvent;\n\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    } else {\n      this.pageX = page.x;\n      this.pageY = page.y;\n      this.clientX = client.x;\n      this.clientY = client.y;\n    }\n\n    this.x0 = interaction.startCoords.page.x - origin.x;\n    this.y0 = interaction.startCoords.page.y - origin.y;\n    this.clientX0 = interaction.startCoords.client.x - origin.x;\n    this.clientY0 = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt = interaction.pointerDelta.timeStamp;\n    this.duration = this.timeStamp - interaction.downTimes[0];\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  InteractEvent.prototype.getSwipe = function getSwipe() {\n    var interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    var overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    var left = 135 - overlap <= angle && angle < 225 + overlap;\n    var up = 225 - overlap <= angle && angle < 315 + overlap;\n\n    var right = !left && (315 - overlap <= angle || angle < 45 + overlap);\n    var down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up: up,\n      down: down,\n      left: left,\n      right: right,\n      angle: angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY\n      }\n    };\n  };\n\n  InteractEvent.prototype.preventDefault = function preventDefault() {};\n\n  InteractEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  InteractEvent.prototype.stopPropagation = function stopPropagation() {\n    this.propagationStopped = true;\n  };\n\n  return InteractEvent;\n})();\n\nsignals.on('set-delta', function (_ref) {\n  var iEvent = _ref.iEvent;\n  var interaction = _ref.interaction;\n  var ending = _ref.ending;\n  var starting = _ref.starting;\n  var deltaSource = _ref.deltaSource;\n\n  if (starting) {\n    iEvent.dx = 0;\n    iEvent.dy = 0;\n  }\n  // end event dx, dy is difference between start and end points\n  else if (ending) {\n      if (deltaSource === 'client') {\n        iEvent.dx = iEvent.clientX - interaction.startCoords.client.x;\n        iEvent.dy = iEvent.clientY - interaction.startCoords.client.y;\n      } else {\n        iEvent.dx = iEvent.pageX - interaction.startCoords.page.x;\n        iEvent.dy = iEvent.pageY - interaction.startCoords.page.y;\n      }\n    } else {\n      if (deltaSource === 'client') {\n        iEvent.dx = iEvent.clientX - interaction.prevEvent.clientX;\n        iEvent.dy = iEvent.clientY - interaction.prevEvent.clientY;\n      } else {\n        iEvent.dx = iEvent.pageX - interaction.prevEvent.pageX;\n        iEvent.dy = iEvent.pageY - interaction.prevEvent.pageY;\n      }\n    }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n\n},{\"./defaultOptions\":15,\"./utils/Signals\":27,\"./utils/extend\":33,\"./utils/getOriginXY\":34}],4:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar isType = require('./utils/isType');\nvar events = require('./utils/events');\nvar extend = require('./utils/extend');\nvar actions = require('./actions');\nvar scope = require('./scope');\nvar Eventable = require('./Eventable');\nvar defaults = require('./defaultOptions');\nvar signals = require('./utils/Signals')['new']();\n\nvar _require = require('./utils/domUtils');\n\nvar getElementRect = _require.getElementRect;\nvar nodeContains = _require.nodeContains;\n\nvar _require2 = require('./utils/arr');\n\nvar indexOf = _require2.indexOf;\nvar contains = _require2.contains;\n\nvar _require3 = require('./utils/browser');\n\nvar wheelEvent = _require3.wheelEvent;\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\n\nvar Interactable = (function () {\n  function Interactable(target, options) {\n    _classCallCheck(this, Interactable);\n\n    this.target = target;\n    this._context = scope.document;\n    this._iEvents = new Eventable();\n\n    var _window = undefined;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      var context = options && options.context;\n\n      _window = context ? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node ? context instanceof _window.Node : isType.isElement(context) || context === _window.document)) {\n\n        this._context = context;\n      }\n    } else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target: target,\n      options: options,\n      interactable: this,\n      win: _window\n    });\n\n    scope.addDocument(this._doc, _window);\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  Interactable.prototype.setOnEvents = function setOnEvents(action, phases) {\n    var onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)) {\n      this._iEvents[onAction + 'start'] = phases.onstart;\n    }\n    if (isType.isFunction(phases.onmove)) {\n      this._iEvents[onAction + 'move'] = phases.onmove;\n    }\n    if (isType.isFunction(phases.onend)) {\n      this._iEvents[onAction + 'end'] = phases.onend;\n    }\n    if (isType.isFunction(phases.oninertiastart)) {\n      this._iEvents[onAction + 'inertiastart'] = phases.oninertiastart;\n    }\n\n    return this;\n  };\n\n  Interactable.prototype.setPerAction = function setPerAction(action, options) {\n    // for all the default per-action options\n    for (var option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false ? false : true;\n          }\n        } else if (isType.isBool(options[option]) && isType.isObject(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        } else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  };\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n\n  Interactable.prototype.getRect = function getRect(element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !isType.isElement(element)) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  };\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n\n  Interactable.prototype.rectChecker = function rectChecker(checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  };\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n\n  Interactable.prototype.origin = function origin(newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    } else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  };\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n\n  Interactable.prototype.deltaSource = function deltaSource(newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  };\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n\n  Interactable.prototype.context = function context() {\n    return this._context;\n  };\n\n  Interactable.prototype.inContext = function inContext(element) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element);\n  };\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n\n  Interactable.prototype.fire = function fire(iEvent) {\n    if (!(iEvent && iEvent.type) || !contains(this._iEvents.types, iEvent.type)) {\n      return this;\n    }\n\n    this._iEvents.fire(iEvent);\n\n    return this;\n  };\n\n  Interactable.prototype._onOffMultiple = function _onOffMultiple(method, eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this[method](eventType[i], listener, useCapture);\n      }\n\n      return true;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  };\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.on = function on(eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('on', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = wheelEvent;\n    }\n\n    if (contains(this._iEvents.types, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n        events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n      } else {\n        events.add(this.target, eventType, listener, useCapture);\n      }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.off = function off(eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('off', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(this._iEvents.types, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n        events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n      }\n      // remove listener from this Interatable's element\n      else {\n          events.remove(this.target, eventType, listener, useCapture);\n        }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.set = function set(options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, defaults.base);\n\n    var perActions = extend({}, defaults.perAction);\n\n    for (var actionName in actions.methodDict) {\n      var methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (var _iterator = Interactable.settingsMethods, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var setting = _ref;\n\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n\n  Interactable.prototype.unset = function unset() {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (var type in events.delegatedEvents) {\n        var delegated = events.delegatedEvents[type];\n\n        for (var i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts.splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    } else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (var _iterator2 = scope.interactions || [], _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      if (interaction.target === this && interaction.interacting()) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  };\n\n  return Interactable;\n})();\n\nscope.interactables.indexOfElement = function indexOfElement(target, context) {\n  context = context || scope.document;\n\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    if (interactable.target === target && (!isType.isString(target) || interactable._context === context)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet(element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!isType.isString(interactable.target)) {\n      continue;\n    }\n\n    var ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = ['deltaSource', 'origin', 'preventDefault', 'rectChecker'];\n\nmodule.exports = Interactable;\n\n},{\"./Eventable\":2,\"./actions\":9,\"./defaultOptions\":15,\"./scope\":26,\"./utils/Signals\":27,\"./utils/arr\":28,\"./utils/browser\":29,\"./utils/domUtils\":31,\"./utils/events\":32,\"./utils/extend\":33,\"./utils/isType\":38}],5:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar scope = require('./scope');\nvar utils = require('./utils');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar finder = require('./utils/interactionFinder');\nvar signals = require('./utils/Signals')['new']();\n\nvar listeners = {};\nvar methodNames = ['pointerDown', 'pointerMove', 'pointerUp', 'updatePointer', 'removePointer'];\n\n// for ignoring browser's simulated mouse events\nvar prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nvar Interaction = (function () {\n  function Interaction() {\n    _classCallCheck(this, Interaction);\n\n    this.target = null; // current interactable being interacted with\n    this.element = null; // the target element of the interactable\n\n    this.prepared = { // action that's ready to be fired on next move event\n      name: null,\n      axis: null,\n      edges: null\n    };\n\n    // keep track of added pointers\n    this.pointers = [];\n    this.pointerIds = [];\n    this.downTargets = [];\n    this.downTimes = [];\n    this.holdTimers = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0\n    };\n\n    this.downEvent = null; // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null; // previous action event\n\n    this.pointerIsDown = false;\n    this.pointerWasMoved = false;\n    this._interacting = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  Interaction.prototype.pointerDown = function pointerDown(pointer, event, eventTarget) {\n    var pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords, this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = this.curCoords.timeStamp;\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n    }\n\n    signals.fire('down', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      pointerIndex: pointerIndex,\n      interaction: this\n    });\n  };\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action  (object)  The action to be performed - drag, resize, etc.\n   - target  (Interactable) The Interactable to target\n   - element (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n\n  Interaction.prototype.start = function start(action, target, element) {\n    if (this.interacting() || !this.pointerIsDown || this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    // set the startCoords if there was no prepared action\n    if (!this.prepared.name) {\n      utils.setCoords(this.startCoords, this.pointers);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target = target;\n    this.element = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent\n    });\n  };\n\n  Interaction.prototype.pointerMove = function pointerMove(pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    var duplicateMove = this.curCoords.page.x === this.prevCoords.page.x && this.curCoords.page.y === this.prevCoords.page.y && this.curCoords.client.x === this.prevCoords.client.x && this.curCoords.client.y === this.prevCoords.client.y;\n\n    var dx = undefined;\n    var dy = undefined;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    var signalArg = {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      dx: dx,\n      dy: dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting()\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  };\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.doMove = function doMove(signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  };\n\n  // End interact move events and stop auto-scroll unless simulation is running\n\n  Interaction.prototype.pointerUp = function pointerUp(pointer, event, eventTarget, curEventTarget) {\n    var pointerIndex = this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire(/cancel$/i.test(event.type) ? 'cancel' : 'up', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      curEventTarget: curEventTarget,\n      interaction: this\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n      this.removePointer(pointer);\n    }\n  };\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.end = function end(event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event: event,\n        interaction: this\n      });\n    }\n\n    this.stop();\n  };\n\n  Interaction.prototype.currentAction = function currentAction() {\n    return this._interacting ? this.prepared.name : null;\n  };\n\n  Interaction.prototype.interacting = function interacting() {\n    return this._interacting;\n  };\n\n  Interaction.prototype.stop = function stop() {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  };\n\n  Interaction.prototype.updatePointer = function updatePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  };\n\n  Interaction.prototype.removePointer = function removePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.pointers.splice(index, 1);\n    this.pointerIds.splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes.splice(index, 1);\n    this.holdTimers.splice(index, 1);\n  };\n\n  Interaction.prototype._updateEventTargets = function _updateEventTargets(target, currentTarget) {\n    this._eventTarget = target;\n    this._curEventTarget = currentTarget;\n  };\n\n  return Interaction;\n})();\n\nfor (var i = 0, len = methodNames.length; i < len; i++) {\n  var method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions(method) {\n  return function (event) {\n    var eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    var curEventTarget = utils.getActualElement(event.currentTarget);\n    var matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (var i = 0; i < event.changedTouches.length; i++) {\n        var pointer = event.changedTouches[i];\n        var interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    } else {\n      var invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (var i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || new Date().getTime() - prevTouchTime < 500;\n      }\n\n      if (!invalidPointer) {\n        var interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = /mouse/i.test(event.pointerType || event.type)\n          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n           || event.pointerType === 4;\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (var _iterator = matches, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref[0];\n      var interaction = _ref[1];\n\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  };\n}\n\nfunction endAll(event) {\n  for (var i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].end(event);\n  }\n}\n\nvar docEvents = {/* 'eventType': listenerFunc */};\nvar pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down] = listeners.pointerDown;\n  docEvents[pEventTypes.move] = listeners.pointerMove;\n  docEvents[pEventTypes.up] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n} else {\n  docEvents.mousedown = listeners.pointerDown;\n  docEvents.mousemove = listeners.pointerMove;\n  docEvents.mouseup = listeners.pointerUp;\n\n  docEvents.touchstart = listeners.pointerDown;\n  docEvents.touchmove = listeners.pointerMove;\n  docEvents.touchend = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal(_ref2, signalName) {\n  var doc = _ref2.doc;\n\n  var eventMethod = signalName.indexOf('add') === 0 ? events.add : events.remove;\n\n  // delegate event listener\n  for (var eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (var eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document', onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n\n},{\"./scope\":26,\"./utils\":36,\"./utils/Signals\":27,\"./utils/browser\":29,\"./utils/events\":32,\"./utils/interactionFinder\":37}],6:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar Eventable = require('../Eventable');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drag = {\n  defaults: {\n    enabled: false,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    startAxis: 'xy',\n    lockAxis: 'xy'\n  },\n\n  checker: function (pointer, event, interactable) {\n    var dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled ? { name: 'drag', axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis } : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy = 0;\n  } else if (axis === 'y') {\n    interaction.curCoords.page.x = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx = 0;\n  }\n});\n\nInteraction.signals.on('action-move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  } else if (axis === 'y') {\n    dragEvent.pageX = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var event = _ref4.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false ? false : true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Eventable.prototype.types, ['dragstart', 'dragmove', 'draginertiastart', 'draginertiaresume', 'dragend']);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n\n},{\"../Eventable\":2,\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":15,\"../utils\":36,\"./index\":9}],7:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar scope = require('../scope');\nvar interact = require('../interact');\nvar Eventable = require('../Eventable');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drop = {\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer'\n  }\n};\n\nvar dynamicDrop = false;\n\nInteraction.signals.on('action-start', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements = [];\n  interaction.activeDrops.rects = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  var dragEvent = interaction.prevEvent;\n  var dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var iEvent = _ref3.iEvent;\n  var event = _ref3.event;\n\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return;\n  }\n\n  var draggableElement = interaction.element;\n  var dragEvent = iEvent;\n  var dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function (_ref6) {\n  var interaction = _ref6.interaction;\n\n  interaction.activeDrops.dropzones = interaction.activeDrops.elements = interaction.activeDrops.rects = interaction.dropEvents = null;\n});\n\nfunction collectDrops(interaction, element) {\n  var drops = [];\n  var elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var _iterator = scope.interactables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var current = _ref;\n\n    if (!current.options.drop.enabled) {\n      continue;\n    }\n\n    var accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if (utils.isElement(accept) && accept !== element || utils.isString(accept) && !utils.matchesSelector(element, accept)) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    var dropElements = utils.isString(current.target) ? current._context.querySelectorAll(current.target) : [current.target];\n\n    for (var i = 0; i < dropElements.length; i++) {\n      var currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements: elements,\n    dropzones: drops\n  };\n}\n\nfunction fireActiveDrops(interaction, event) {\n  var prevElement = undefined;\n\n  // loop through all active dropzones and trigger event\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    var current = interaction.activeDrops.dropzones[i];\n    var currentElement = interaction.activeDrops.elements[i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops(interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  var possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements = possibleDrops.elements;\n  interaction.activeDrops.rects = [];\n\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] = interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop(dragEvent, event, dragElement) {\n  var interaction = dragEvent.interaction;\n  var validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    var current = interaction.activeDrops.dropzones[j];\n    var currentElement = interaction.activeDrops.elements[j];\n    var rect = interaction.activeDrops.rects[j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect) ? currentElement : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  var dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element: interaction.activeDrops.elements[dropIndex] || null\n  };\n}\n\nfunction getDropEvents(interaction, pointerEvent, dragEvent) {\n  var dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null\n  };\n\n  var tmpl = {\n    dragEvent: dragEvent,\n    interaction: interaction,\n    target: interaction.dropElement,\n    dropzone: interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable: dragEvent.interactable,\n    timeStamp: dragEvent.timeStamp\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave = dropEvents.leave.target = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent: dragEvent,\n        interaction: interaction,\n        target: interaction.dropElement,\n        dropzone: interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable: dragEvent.interactable,\n        timeStamp: dragEvent.timeStamp,\n        type: 'dragenter'\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove: dragEvent,\n      type: 'dropmove'\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents(interaction, dropEvents) {\n  if (dropEvents.leave) {\n    interaction.prevDropTarget.fire(dropEvents.leave);\n  }\n  if (dropEvents.enter) {\n    interaction.dropTarget.fire(dropEvents.enter);\n  }\n  if (dropEvents.drop) {\n    interaction.dropTarget.fire(dropEvents.drop);\n  }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false ? false : true;\n\n    if (utils.isFunction(options.ondrop)) {\n      this._iEvents.ondrop = options.ondrop;\n    }\n    if (utils.isFunction(options.ondropactivate)) {\n      this._iEvents.ondropactivate = options.ondropactivate;\n    }\n    if (utils.isFunction(options.ondropdeactivate)) {\n      this._iEvents.ondropdeactivate = options.ondropdeactivate;\n    }\n    if (utils.isFunction(options.ondragenter)) {\n      this._iEvents.ondragenter = options.ondragenter;\n    }\n    if (utils.isFunction(options.ondragleave)) {\n      this._iEvents.ondragleave = options.ondragleave;\n    }\n    if (utils.isFunction(options.ondropmove)) {\n      this._iEvents.ondropmove = options.ondropmove;\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    } else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  var dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return this.options.drop.checker ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement) : false;\n  }\n\n  var dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    var origin = utils.getOriginXY(draggable, draggableElement);\n    var page = utils.getPageXY(dragEvent);\n    var horizontal = undefined;\n    var vertical = undefined;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = page.x > rect.left && page.x < rect.right;\n    vertical = page.y > rect.top && page.y < rect.bottom;\n\n    dropped = horizontal && vertical;\n  }\n\n  var dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    var cx = dragRect.left + dragRect.width / 2;\n    var cy = dragRect.top + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    var overlapArea = Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top));\n\n    var overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function (_ref7) {\n  var interactable = _ref7.interactable;\n\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement = null; // the element at the time of checking\n  interaction.prevDropTarget = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [], // the dropzones that are mentioned below\n    elements: [], // elements of dropzones that accept the target draggable\n    rects: [] };\n});\n\n// the rects of the elements mentioned above\nInteraction.signals.on('stop', function (_ref8) {\n  var interaction = _ref8.interaction;\n\n  interaction.dropTarget = interaction.dropElement = interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n    //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Eventable.prototype.types, ['dragenter', 'dragleave', 'dropactivate', 'dropdeactivate', 'dropmove', 'drop']);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n\n},{\"../Eventable\":2,\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":15,\"../interact\":18,\"../scope\":26,\"../utils\":36,\"./index\":9}],8:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar Eventable = require('../Eventable');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar gesture = {\n  defaults: {\n    enabled: false,\n    restrict: null\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = undefined;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity && gestureEvent.scale !== null && gestureEvent.scale !== undefined && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false ? false : true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n  var action = _ref4.action;\n  var event = _ref4.event;\n  var starting = _ref4.starting;\n  var ending = _ref4.ending;\n  var deltaSource = _ref4.deltaSource;\n\n  if (action !== 'gesture') {\n    return;\n  }\n\n  var pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = 1;\n    iEvent.ds = 0;\n    iEvent.angle = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da = 0;\n  } else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box = interaction.prevEvent.box;\n    iEvent.scale = interaction.prevEvent.scale;\n    iEvent.ds = iEvent.scale - 1;\n    iEvent.angle = interaction.prevEvent.angle;\n    iEvent.da = iEvent.angle - interaction.gesture.startAngle;\n  } else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0, // distance between two touches of touchStart\n    prevDistance: 0,\n    distance: 0,\n\n    scale: 1, // gesture.distance / gesture.startDistance\n\n    startAngle: 0, // angle of line joining two touches\n    prevAngle: 0 };\n});\n\n// angle of the previous gesture event\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Eventable.prototype.types, ['gesturestart', 'gesturemove', 'gestureend']);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n\n},{\"../Eventable\":2,\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":15,\"../utils\":36,\"./index\":9}],9:[function(require,module,exports){\nvar actions = {\n  names: [],\n  methodDict: {}\n};\n\nmodule.exports = actions;\n\n},{}],10:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar Eventable = require('../Eventable');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nvar defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10;\n\nvar resize = {\n  defaults: {\n    enabled: false,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none'\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) {\n      return null;\n    }\n\n    var page = utils.extend({}, interaction.curCoords.page);\n    var options = interactable.options;\n\n    if (options.resize.enabled) {\n      var resizeOptions = options.resize;\n      var resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (var edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge, resizeOptions.edges[edge], page, interaction._eventTarget, element, rect, resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges\n          };\n        }\n      } else {\n        var right = options.resize.axis !== 'y' && page.x > rect.right - defaultMargin;\n        var bottom = options.resize.axis !== 'x' && page.y > rect.bottom - defaultMargin;\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : '')\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: browser.isIe9OrOlder ? {\n    x: 'e-resize',\n    y: 's-resize',\n    xy: 'se-resize',\n\n    top: 'n-resize',\n    left: 'w-resize',\n    bottom: 's-resize',\n    right: 'e-resize',\n    topleft: 'se-resize',\n    bottomright: 'se-resize',\n    topright: 'ne-resize',\n    bottomleft: 'ne-resize'\n  } : {\n    x: 'ew-resize',\n    y: 'ns-resize',\n    xy: 'nwse-resize',\n\n    top: 'ns-resize',\n    left: 'ew-resize',\n    bottom: 'ns-resize',\n    right: 'ew-resize',\n    topleft: 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright: 'nesw-resize',\n    bottomleft: 'nesw-resize'\n  },\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    } else if (action.edges) {\n      var cursorKey = '';\n      var edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (var i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    var startRect = interaction.target.getRect(interaction.element);\n    var resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      var linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top = linkedEdges.top || linkedEdges.left && !linkedEdges.bottom;\n      linkedEdges.left = linkedEdges.left || linkedEdges.top && !linkedEdges.right;\n      linkedEdges.bottom = linkedEdges.bottom || linkedEdges.right && !linkedEdges.top;\n      linkedEdges.right = linkedEdges.right || linkedEdges.bottom && !linkedEdges.left;\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    } else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start: startRect,\n      current: utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous: utils.extend({}, startRect),\n      delta: {\n        left: 0, right: 0, width: 0,\n        top: 0, bottom: 0, height: 0\n      }\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  var resizeOptions = interaction.target.options.resize;\n  var invert = resizeOptions.invert;\n  var invertible = invert === 'reposition' || invert === 'negate';\n\n  var edges = interaction.prepared.edges;\n\n  if (edges) {\n    var start = interaction.resizeRects.start;\n    var current = interaction.resizeRects.current;\n    var restricted = interaction.resizeRects.restricted;\n    var delta = interaction.resizeRects.delta;\n    var previous = utils.extend(interaction.resizeRects.previous, restricted);\n    var originalEdges = edges;\n\n    var dx = resizeEvent.dx;\n    var dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      var startAspectRatio = resizeOptions.preserveAspectRatio ? interaction.resizeStartAspectRatio : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n        dy = -dx / startAspectRatio;\n      } else if (originalEdges.left || originalEdges.right) {\n        dy = dx / startAspectRatio;\n      } else if (originalEdges.top || originalEdges.bottom) {\n        dx = dy * startAspectRatio;\n      }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top) {\n      current.top += dy;\n    }\n    if (edges.bottom) {\n      current.bottom += dy;\n    }\n    if (edges.left) {\n      current.left += dx;\n    }\n    if (edges.right) {\n      current.right += dx;\n    }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        var swap = undefined;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    } else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left = Math.min(current.left, start.right);\n      restricted.right = Math.max(current.right, start.left);\n    }\n\n    restricted.width = restricted.right - restricted.left;\n    restricted.height = restricted.bottom - restricted.top;\n\n    for (var edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false ? false : true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    } else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    } else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge(name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) {\n    return false;\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    var width = utils.isNumber(rect.width) ? rect.width : rect.right - rect.left;\n    var height = utils.isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right';\n      } else if (name === 'right') {\n        name = 'left';\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom';\n      } else if (name === 'bottom') {\n        name = 'top';\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n    }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n  ? value === element\n  // otherwise check if element matches value as selector\n  : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n  var action = _ref4.action;\n\n  if (action !== 'resize' || !interaction.resizeAxes) {\n    return;\n  }\n\n  var options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    } else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  } else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    } else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Eventable.prototype.types, ['resizestart', 'resizemove', 'resizeinertiastart', 'resizeinertiaresume', 'resizeend']);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n\n},{\"../Eventable\":2,\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":15,\"../utils\":36,\"../utils/browser\":29,\"./index\":9}],11:[function(require,module,exports){\nvar raf = require('./utils/raf');\nvar getWindow = require('./utils/window').getWindow;\nvar isWindow = require('./utils/isType').isWindow;\nvar domUtils = require('./utils/domUtils');\nvar Interaction = require('./Interaction');\nvar defaultOptions = require('./defaultOptions');\n\nvar autoScroll = {\n  defaults: {\n    enabled: false,\n    container: null, // the item that is scrolled (Window or HTMLElement)\n    margin: 60,\n    speed: 300 },\n\n  // the scroll speed in pixels per second\n  interaction: null,\n  i: null, // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(autoScroll.interaction.element);\n    var now = new Date().getTime();\n    // change in time in seconds\n    var dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    var s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      } else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    var options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function (_ref) {\n    var interaction = _ref.interaction;\n    var pointer = _ref.pointer;\n\n    if (!(interaction.interacting() && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    var top = undefined;\n    var right = undefined;\n    var bottom = undefined;\n    var left = undefined;\n\n    var options = interaction.target.options[interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left = pointer.clientX < autoScroll.margin;\n      top = pointer.clientY < autoScroll.margin;\n      right = pointer.clientX > container.innerWidth - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    } else {\n      var rect = domUtils.getElementClientRect(container);\n\n      left = pointer.clientX < rect.left + autoScroll.margin;\n      top = pointer.clientY < rect.top + autoScroll.margin;\n      right = pointer.clientX > rect.right - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0;\n    autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  }\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n\n},{\"./Interaction\":5,\"./defaultOptions\":15,\"./utils/domUtils\":31,\"./utils/isType\":38,\"./utils/raf\":42,\"./utils/window\":43}],12:[function(require,module,exports){\nvar autoStart = require('./index');\nvar Interaction = require('../Interaction');\nvar actions = require('../actions');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(function () {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nfor (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n  var _ref;\n\n  if (_isArray) {\n    if (_i >= _iterator.length) break;\n    _ref = _iterator[_i++];\n  } else {\n    _i = _iterator.next();\n    if (_i.done) break;\n    _ref = _i.value;\n  }\n\n  var action = _ref;\n\n  autoStart.signals.on('before-start-' + action, preventImmediateMove);\n}\n\nInteraction.signals.on('move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var duplicate = _ref3.duplicate;\n\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\nfunction preventImmediateMove(_ref4) {\n  var interaction = _ref4.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n}\n\n},{\"../Interaction\":5,\"../actions\":9,\"./index\":14}],13:[function(require,module,exports){\nvar autoStart = require('./index');\nvar scope = require('../scope');\nvar browser = require('../utils/browser');\n\nvar _require = require('../utils/isType');\n\nvar isElement = _require.isElement;\n\nvar _require2 = require('../utils/domUtils');\n\nvar matchesSelector = _require2.matchesSelector;\nvar parentNode = _require2.parentNode;\n\nautoStart.signals.on('before-start-drag', function (_ref) {\n  var interaction = _ref.interaction;\n  var eventTarget = _ref.eventTarget;\n  var dx = _ref.dx;\n  var dy = _ref.dy;\n\n  // check if a drag is in the correct axis\n  var absX = Math.abs(dx);\n  var absY = Math.abs(dy);\n  var dragOptions = interaction.target.options.drag;\n  var startAxis = dragOptions.startAxis;\n  var currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start' ? currentAxis : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n      (function () {\n\n        var element = eventTarget;\n\n        var getDraggable = function (interactable, selector, context) {\n          var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n          if (interactable === interaction.target) {\n            return;\n          }\n\n          var action = null;\n\n          if (interactable.inContext(eventTarget) && !interactable.options.drag.manualStart && !autoStart.testIgnore(interactable, element, eventTarget) && autoStart.testAllow(interactable, element, eventTarget) && matchesSelector(element, selector, elements)) {\n\n            action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, interactable) && autoStart.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n            return interactable;\n          }\n        };\n\n        var action = null;\n\n        // check all interactables\n        while (isElement(element)) {\n          var elementInteractable = scope.interactables.get(element);\n\n          if (elementInteractable && elementInteractable !== interaction.target && !elementInteractable.options.drag.manualStart) {\n\n            action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, elementInteractable)) {\n\n            interaction.prepared.name = 'drag';\n            interaction.target = elementInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          var selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n          if (selectorInteractable) {\n            interaction.prepared.name = 'drag';\n            interaction.target = selectorInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          element = parentNode(element);\n        }\n      })();\n    }\n  }\n});\n\nfunction checkStartAxis(startAxis, interactable) {\n  if (!interactable) {\n    return false;\n  }\n\n  var thisAxis = interactable.options.drag.startAxis;\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis;\n}\n\n},{\"../scope\":26,\"../utils/browser\":29,\"../utils/domUtils\":31,\"../utils/isType\":38,\"./index\":14}],14:[function(require,module,exports){\nvar interact = require('../interact');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar actions = require('../actions');\nvar defaultOptions = require('../defaultOptions');\nvar browser = require('../utils/browser');\nvar scope = require('../scope');\nvar utils = require('../utils');\nvar signals = require('../utils/Signals')['new']();\n\nvar autoStart = {\n  signals: signals,\n  testIgnore: testIgnore,\n  testAllow: testAllow,\n  withinInteractionLimit: withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  perActionDefaults: {\n    manualStart: false,\n    max: 0,\n    maxPerElement: 1\n  },\n  setActionDefaults: function (actionName) {\n    var action = actions[actionName];\n\n    utils.extend(action.defaults, autoStart.perActionDefaults);\n  }\n};\n\nfunction testIgnore(interactable, interactableElement, element) {\n  var ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  } else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n}\n\nfunction testAllow(interactable, interactableElement, element) {\n  var allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) {\n    return true;\n  }\n\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  } else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n}\n\n// mouse move cursor style\nInteraction.signals.on('move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n\n  if (!interaction.mouse || interaction.pointerIsDown) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('down', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n\n  if (interaction.interacting()) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  var interaction = arg.interaction;\n  var event = arg.event;\n\n  if (!(interaction.pointerIsDown && interaction.pointerWasMoved && interaction.prepared.name)) {\n    return;\n  }\n\n  // ignore movement while simulation is active\n  if (!interaction.simulation) {\n\n    if (!interaction.interacting()) {\n      signals.fire('before-start-' + interaction.prepared.name, arg);\n    }\n\n    var starting = !!interaction.prepared.name && !interaction.interacting();\n\n    if (starting && (interaction.target.options[interaction.prepared.name].manualStart || !withinInteractionLimit(interaction.target, interaction.element, interaction.prepared))) {\n      interaction.stop(event);\n      return;\n    }\n\n    if (interaction.prepared.name && interaction.target) {\n      if (starting) {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction(action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector(interaction, pointer, event, matches, matchElements) {\n  for (var i = 0, len = matches.length; i < len; i++) {\n    var match = matches[i];\n    var matchElement = matchElements[i];\n    var action = validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action: action,\n        target: match,\n        element: matchElement\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo(interaction, pointer, event, eventTarget) {\n  var matches = [];\n  var matchElements = [];\n\n  var element = eventTarget;\n  var action = null;\n\n  function pushMatches(interactable, selector, context) {\n    var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    if (interactable.inContext(element) && !module.exports.testIgnore(interactable, element, eventTarget) && module.exports.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    var elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable && (action = validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable)) && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element: element,\n        action: action,\n        target: elementInteractable\n      };\n    } else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      var actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare(interaction, _ref4) {\n  var action = _ref4.action;\n  var target = _ref4.target;\n  var element = _ref4.element;\n\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    var cursor = action ? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  var action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\n/*\\\n * Interactable.ignoreFrom\n [ method ]\n *\n * If the target of the `mousedown`, `pointerdown` or `touchstart`\n * event or any of it's parents match the given CSS selector or\n * Element, no drag/resize/gesture is started.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n = (string | Element | object) The current ignoreFrom value or this Interactable\n **\n | interact(element, { ignoreFrom: document.getElementById('no-action') });\n | // or\n | interact(element).ignoreFrom('input, textarea, a');\n\\*/\nInteractable.prototype.ignoreFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {\n    // CSS selector to match event.target\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {\n    // specific element\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  return this.options.ignoreFrom;\n};\n\n/*\\\n * Interactable.allowFrom\n [ method ]\n *\n * A drag/resize/gesture is started only If the target of the\n * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n * parents match the given CSS selector or Element.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n = (string | Element | object) The current allowFrom value or this Interactable\n **\n | interact(element, { allowFrom: document.getElementById('drag-handle') });\n | // or\n | interact(element).allowFrom('.handle');\n\\*/\nInteractable.prototype.allowFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {\n    // CSS selector to match event.target\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {\n    // specific element\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  return this.options.allowFrom;\n};\n\nInteraction.signals.on('stop', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  var target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  var rect = this.getRect(element);\n  var action = null;\n\n  for (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var actionName = _ref;\n\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nfunction withinInteractionLimit(interactable, element, action) {\n  var options = interactable.options;\n  var maxActions = options[action.name].max;\n  var maxPerElement = options[action.name].maxPerElement;\n  var activeInteractions = 0;\n  var targetCount = 0;\n  var targetElementCount = 0;\n\n  for (var i = 0, len = scope.interactions.length; i < len; i++) {\n    var interaction = scope.interactions[i];\n    var otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) {\n      continue;\n    }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) {\n      continue;\n    }\n\n    targetCount += otherAction === action.name | 0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.perActionDefaults);\n\nmodule.exports = autoStart;\n\n},{\"../Interactable\":4,\"../Interaction\":5,\"../actions\":9,\"../defaultOptions\":15,\"../interact\":18,\"../scope\":26,\"../utils\":36,\"../utils/Signals\":27,\"../utils/browser\":29}],15:[function(require,module,exports){\nmodule.exports = {\n  base: {\n    accept: null,\n    preventDefault: 'auto',\n    origin: { x: 0, y: 0 },\n    deltaSource: 'page',\n    allowFrom: null\n  },\n\n  perAction: {\n    inertia: {\n      enabled: false,\n      resistance: 10, // the lambda in exponential decay\n      minSpeed: 100, // target speed must be above this for inertia to start\n      endSpeed: 10, // the speed at which inertia is slow enough to stop\n      allowResume: true, // allow resuming an action in inertia phase\n      smoothEndDuration: 300 }\n  },\n\n  // animate to snap/restrict endOnly if there's no inertia\n  _holdDuration: 600\n};\n\n},{}],16:[function(require,module,exports){\n/* browser entry point */\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\nrequire('./pointerEvents/interactableTargets');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// autoStart\nvar autoStart = require('./autoStart');\nrequire('./autoStart/drag');\nrequire('./autoStart/delay');\nautoStart.setActionDefaults('drag');\nautoStart.setActionDefaults('resize');\nautoStart.setActionDefaults('gesture');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n\n},{\"./actions/drag\":6,\"./actions/drop\":7,\"./actions/gesture\":8,\"./actions/resize\":10,\"./autoScroll\":11,\"./autoStart\":14,\"./autoStart/delay\":12,\"./autoStart/drag\":13,\"./inertia\":17,\"./interact\":18,\"./interactablePreventDefault.js\":19,\"./legacyBrowsers\":20,\"./modifiers/restrict\":22,\"./modifiers/snap\":23,\"./pointerEvents\":24,\"./pointerEvents/interactableTargets\":25}],17:[function(require,module,exports){\nvar InteractEvent = require('./InteractEvent');\nvar Interaction = require('./Interaction');\nvar modifiers = require('./modifiers');\nvar utils = require('./utils');\nvar animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active: false,\n    smoothEnd: false,\n    allowResume: false,\n    ending: false,\n\n    startEvent: null,\n    upCoords: {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i: null\n  };\n\n  interaction.boundInertiaFrame = function () {\n    return inertiaFrame.apply(interaction);\n  };\n  interaction.boundSmoothEndFrame = function () {\n    return smoothEndFrame.apply(interaction);\n  };\n});\n\nInteraction.signals.on('down', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n  var pointer = _ref.pointer;\n  var eventTarget = _ref.eventTarget;\n\n  var status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    var element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        var signalArg = { interaction: interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume', signalArg);\n\n        // fire a reume event\n        var resumeEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiaresume', interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  var status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) {\n    return;\n  }\n\n  var target = interaction.target;\n  var options = target && target.options;\n  var inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  var now = new Date().getTime();\n  var statuses = {};\n  var page = utils.extend({}, interaction.curCoords.page);\n  var pointerSpeed = interaction.pointerDelta.client.speed;\n  var inertiaPossible = false;\n  var inertia = false;\n  var smoothEnd = false;\n  var modifierResult = undefined;\n\n  // check if inertia should be started\n  inertiaPossible = inertiaOptions && inertiaOptions.enabled && interaction.prepared.name !== 'gesture' && event !== status.startEvent;\n\n  inertia = inertiaPossible && now - interaction.curCoords.timeStamp < 50 && pointerSpeed > inertiaOptions.minSpeed && pointerSpeed > inertiaOptions.endSpeed;\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) {\n    return;\n  }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  } else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  var status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = status.ending = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia(interaction, status) {\n  var inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  var lambda = inertiaOptions.resistance;\n  var inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame() {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  var status = this.inertiaStatus;\n  var options = this.target.options[this.prepared.name].inertia;\n  var lambda = options.resistance;\n  var t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    var progress = 1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    } else {\n      var quadPoint = utils.getQuadraticCurvePoint(0, 0, status.xe, status.ye, status.modifiedXe, status.modifiedYe, progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  } else {\n    status.ending = true;\n\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = status.ending = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame() {\n  updateInertiaCoords(this);\n\n  var status = this.inertiaStatus;\n  var t = new Date().getTime() - status.t0;\n  var duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  } else {\n    status.ending = true;\n\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd = status.active = status.ending = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords(interaction) {\n  var status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) {\n    return;\n  }\n\n  var pageUp = status.upCoords.page;\n  var clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [{\n    pageX: pageUp.x + status.sx,\n    pageY: pageUp.y + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy\n  }]);\n}\n\n},{\"./InteractEvent\":3,\"./Interaction\":5,\"./modifiers\":21,\"./utils\":36,\"./utils/raf\":42}],18:[function(require,module,exports){\n/**\n * interact.js v1.2.5\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n\nvar browser = require('./utils/browser');\nvar events = require('./utils/events');\nvar utils = require('./utils');\nvar scope = require('./scope');\nvar Interactable = require('./Interactable');\nvar Interaction = require('./Interaction');\nvar Eventable = require('./Eventable');\n\nvar globalEvents = {};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact(document.getElementById('draggable')).draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // something cool...\n |     })\n |     .autoScroll(true);\n\\*/\nfunction interact(element, options) {\n  var interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable._iEvents.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator = type, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var eventType = _ref;\n\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Eventable.prototype.types, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    } else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n      events.add(scope.document, type, listener, useCapture);\n    }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator2 = type, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var eventType = _ref2;\n\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Eventable.prototype.types, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  } else {\n    var index = undefined;\n\n    if (type in globalEvents && (index = utils.indexOf(globalEvents[type], listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage = utils.pointerAverage;\ninteract.getTouchBBox = utils.touchBBox;\ninteract.getTouchDistance = utils.touchDistance;\ninteract.getTouchAngle = utils.touchAngle;\n\ninteract.getElementRect = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector = utils.matchesSelector;\ninteract.closest = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (var i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n\n},{\"./Eventable\":2,\"./Interactable\":4,\"./Interaction\":5,\"./scope\":26,\"./utils\":36,\"./utils/browser\":29,\"./utils/events\":32}],19:[function(require,module,exports){\nvar Interactable = require('./Interactable');\nvar Interaction = require('./Interaction');\nvar scope = require('./scope');\nvar isType = require('./utils/isType');\n\nvar _require = require('./utils/domUtils');\n\nvar nodeContains = _require.nodeContains;\n\n/*\\\n * Interactable.preventDefault\n [ method ]\n *\n * Returns or sets whether to prevent the browser's default behaviour\n * in response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n - newValue (string) #optional `true`, `false` or `'auto'`\n = (string | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (isType.isBool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  var setting = this.options.preventDefault;\n\n  if (setting === 'never') {\n    return;\n  }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of pointerdown events\n  if (/down|start/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on input elements\n  if (/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent(_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nvar _arr = ['down', 'move', 'up', 'cancel'];\nfor (var _i = 0; _i < _arr.length; _i++) {\n  var eventSignal = _arr[_i];\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag(event) {\n  for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i2 >= _iterator.length) break;\n      _ref = _iterator[_i2++];\n    } else {\n      _i2 = _iterator.next();\n      if (_i2.done) break;\n      _ref = _i2.value;\n    }\n\n    var interaction = _ref;\n\n    if (interaction.element && (interaction.element === event.target || nodeContains(interaction.element, event.target))) {\n\n      interaction.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n\n},{\"./Interactable\":4,\"./Interaction\":5,\"./scope\":26,\"./utils/domUtils\":31,\"./utils/isType\":38}],20:[function(require,module,exports){\nvar scope = require('./scope');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar iFinder = require('./utils/interactionFinder');\n\nvar toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick(event) {\n  var interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) {\n    return;\n  }\n\n  if (interaction.prevTap && event.clientX === interaction.prevTap.clientX && event.clientY === interaction.prevTap.clientY && event.target === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes[0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  (function () {\n    var selectFix = function (event) {\n      for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var interaction = _ref;\n\n        if (interaction.interacting()) {\n          interaction.checkAndPreventDefault(event);\n        }\n      }\n    };\n\n    var onDocIE8 = function onDocIE8(_ref2, signalName) {\n      var doc = _ref2.doc;\n      var win = _ref2.win;\n\n      var eventMethod = signalName.indexOf('listen') === 0 ? events.add : events.remove;\n\n      // For IE's lack of Event#preventDefault\n      eventMethod(doc, 'selectstart', selectFix);\n\n      if (scope.pointerEvents) {\n        eventMethod(doc, 'dblclick', onIE8Dblclick);\n      }\n    };\n\n    scope.signals.on('add-document', onDocIE8);\n    scope.signals.on('remove-document', onDocIE8);\n  })();\n}\n\nmodule.exports = null;\n\n},{\"./scope\":26,\"./utils/browser\":29,\"./utils/events\":32,\"./utils/interactionFinder\":37}],21:[function(require,module,exports){\nvar InteractEvent = require('../InteractEvent');\nvar Interaction = require('../Interaction');\nvar extend = require('../utils/extend');\n\nvar modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    var target = interaction.target;\n    var element = interaction.element;\n\n    var rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top = coords.page.y - rect.top;\n\n      interaction.startOffset.right = rect.right - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width' in rect)) {\n        rect.width = rect.right - rect.left;\n      }\n      if (!('height' in rect)) {\n        rect.height = rect.bottom - rect.top;\n      }\n    } else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (var i = 0; i < modifiers.names.length; i++) {\n      var modifierName = modifiers.names[i];\n\n      offsets[modifierName] = modifiers[modifiers.names[i]].setOffset(interaction, interactable, element, rect, interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    var result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true\n    };\n    var target = interaction.target;\n    var coords = extend({}, coordsArg);\n\n    var currentStatus = undefined;\n\n    for (var _iterator = modifiers.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var modifierName = _ref;\n\n      var modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) {\n        continue;\n      }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (var _iterator2 = modifiers.names, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var modifierName = _ref2;\n\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function (_ref3, signalName) {\n    var interaction = _ref3.interaction;\n\n    modifiers.setOffsets(interaction, signalName === 'action-resume' ? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  }\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('action-start', modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var preEnd = _ref4.preEnd;\n  var interactingBeforeMove = _ref4.interactingBeforeMove;\n\n  var modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n  var event = _ref5.event;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    // if the endOnly option is true for any modifier\n    if (modifiers[modifiers.names[i]].shouldDo(interaction.target, interaction.prepared.name, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event: event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function (_ref6) {\n  var iEvent = _ref6.iEvent;\n  var interaction = _ref6.interaction;\n  var page = _ref6.page;\n  var client = _ref6.client;\n  var phase = _ref6.phase;\n  var actionName = _ref6.action;\n\n  var target = interaction.target;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    var modifierName = modifiers.names[i];\n    var modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nmodule.exports = modifiers;\n\n},{\"../InteractEvent\":3,\"../Interaction\":5,\"../utils/extend\":33}],22:[function(require,module,exports){\nvar modifiers = require('./index');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar restrict = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    restriction: null,\n    elementRect: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var restrictOptions = interactable.options[actionName].restrict;\n\n    return restrictOptions && restrictOptions.enabled && (preEnd || !restrictOptions.endOnly) && (!requireEndOnly || restrictOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    var offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - rect.width * elementRect.left;\n      offset.top = startOffset.top - rect.height * elementRect.top;\n\n      offset.right = startOffset.right - rect.width * (1 - elementRect.right);\n      offset.bottom = startOffset.bottom - rect.height * (1 - elementRect.bottom);\n    } else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var target = interaction.target;\n    var restrictOptions = target && target.options[interaction.prepared.name].restrict;\n    var restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    var page = status.useStatusXY ? { x: status.x, y: status.y } : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    var rect = undefined;\n    var restrictedX = undefined;\n    var restrictedY = undefined;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentNode(interaction.element);\n      } else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      } else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) {\n        return status;\n      }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    var offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n        restrictedX = Math.max(Math.min(rect.x + rect.width - offset.right, page.x), rect.x + offset.left);\n        restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top);\n      } else {\n        restrictedX = Math.max(Math.min(rect.right - offset.right, page.x), rect.left + offset.left);\n        restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top + offset.top);\n      }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var options = interactable.options[actionName].restrict;\n    var elementRect = options && options.elementRect;\n\n    if (options && options.enabled && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy\n        };\n      }\n    }\n  }\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n\n},{\"../defaultOptions\":15,\"../utils\":36,\"./index\":21}],23:[function(require,module,exports){\nvar modifiers = require('./index');\nvar interact = require('../interact');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range: Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var snapOptions = interactable.options[actionName].snap;\n\n    return snapOptions && snapOptions.enabled && (preEnd || !snapOptions.endOnly) && (!requireEndOnly || snapOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var offsets = [];\n    var origin = utils.getOriginXY(interactable, element);\n    var snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    var snapOffset = undefined;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y\n      };\n    } else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y\n      };\n    } else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (var _iterator = snapOptions.relativePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var relativeX = _ref.x;\n        var relativeY = _ref.y;\n\n        offsets.push({\n          x: startOffset.left - rect.width * relativeX + snapOffset.x,\n          y: startOffset.top - rect.height * relativeY + snapOffset.y\n        });\n      }\n    } else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    var targets = [];\n    var target = undefined;\n    var page = undefined;\n    var i = undefined;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    } else {\n      var origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    var offsets = interaction.modifierOffsets.snap;\n    var len = snapOptions.targets ? snapOptions.targets.length : 0;\n\n    for (var _iterator2 = offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var offsetX = _ref2.x;\n      var offsetY = _ref2.y;\n\n      var relativeX = page.x - offsetX;\n      var relativeY = page.y - offsetY;\n\n      for (var _iterator3 = snapOptions.targets, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var snapTarget = _ref3;\n\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        } else {\n          target = snapTarget;\n        }\n\n        if (!target) {\n          continue;\n        }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? target.x + offsetX : relativeX,\n          y: utils.isNumber(target.y) ? target.y + offsetY : relativeY,\n\n          range: utils.isNumber(target.range) ? target.range : snapOptions.range\n        });\n      }\n    }\n\n    var closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      var range = target.range;\n      var dx = target.x - page.x;\n      var dy = target.y - page.y;\n      var distance = utils.hypot(dx, dy);\n      var inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n      // is the closest target in range?\n      ? closest.inRange && range !== Infinity\n      // the pointer is relatively deeper in this target\n      ? distance / range < closest.distance / closest.range\n      // this target has Infinite range and the closest doesn't\n      : range === Infinity && closest.range !== Infinity ||\n      // OR this target is closer that the previous closest\n      distance < closest.distance :\n      // The other is not in range and the pointer is closer to this target\n      !closest.inRange && distance < closest.distance)) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    var snapChanged = undefined;\n\n    if (closest.target) {\n      snapChanged = status.snappedX !== closest.target.x || status.snappedY !== closest.target.y;\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    } else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = snapChanged || closest.inRange && !status.locked;\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var snapOptions = interactable.options[actionName].snap;\n    var relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range: status.range,\n        locked: status.locked,\n        x: status.snappedX,\n        y: status.snappedY,\n        realX: status.realX,\n        realY: status.realY,\n        dx: status.dx,\n        dy: status.dy\n      };\n    }\n  }\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    var limits = grid.limits || {\n      left: -Infinity,\n      right: Infinity,\n      top: -Infinity,\n      bottom: Infinity\n    };\n    var offsetX = 0;\n    var offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    var gridx = Math.round((x - offsetX) / grid.x);\n    var gridy = Math.round((y - offsetY) / grid.y);\n\n    var newX = Math.max(limits.left, Math.min(limits.right, gridx * grid.x + offsetX));\n    var newY = Math.max(limits.top, Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n\n},{\"../defaultOptions\":15,\"../interact\":18,\"../utils\":36,\"./index\":21}],24:[function(require,module,exports){\nvar scope = require('../scope');\nvar Interaction = require('../Interaction');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar Eventable = require('../Eventable');\nvar defaults = require('../defaultOptions');\nvar signals = require('../utils/Signals')['new']();\n\nvar simpleSignals = ['down', 'up', 'up', 'cancel'];\nvar simpleEvents = ['down', 'up', 'tap', 'cancel'];\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopImmediatePropagation() {\n  this.immediatePropagationStopped = this.propagationStopped = true;\n}\n\nfunction stopPropagation() {\n  this.propagationStopped = true;\n}\n\nfunction firePointers(interaction, pointer, event, eventTarget, targets, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  var pointerEvent = {};\n  var i = undefined;\n  // for tap events\n  var interval = undefined;\n  var createNewDoubleTap = undefined;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  } else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault = preventOriginalDefault;\n    pointerEvent.stopPropagation = stopPropagation;\n    pointerEvent.stopImmediatePropagation = stopImmediatePropagation;\n    pointerEvent.interaction = interaction;\n\n    pointerEvent.timeStamp = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type = eventType;\n    pointerEvent.pointerId = utils.getPointerId(pointer);\n    pointerEvent.pointerType = interaction.mouse ? 'mouse' : !browser.supportsPointerEvent ? 'touch' : utils.isString(pointer.pointerType) ? pointer.pointerType : [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap' && interaction.prevTap.target === pointerEvent.target && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  var signalArg = {\n    pointerEvent: pointerEvent,\n    pointer: pointer,\n    event: event,\n    targets: targets\n  };\n\n  signals.fire('new', signalArg);\n\n  for (i = 0; i < targets.length; i++) {\n    var target = targets[i];\n\n    pointerEvent.currentTarget = target.element;\n\n    for (var prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    target.eventable.fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped || pointerEvent.propagationStopped && i + 1 < targets.length && targets[i + 1].element !== pointerEvent.currentTarget) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (createNewDoubleTap) {\n    var doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  } else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets(interaction, pointer, event, eventTarget, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n  // or if the pointerup target is different to the pointerdown target\n   || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  var targets = [];\n  var path = utils.getPath(eventTarget);\n  var signalArg = {\n    targets: targets,\n    interaction: interaction,\n    pointer: pointer,\n    event: event,\n    eventTarget: eventTarget,\n    eventType: eventType,\n    path: path,\n    element: null\n  };\n\n  for (var _iterator = path, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var element = _ref;\n\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, eventType);\n  }\n}\n\nInteraction.signals.on('move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n  var duplicateMove = _ref2.duplicateMove;\n\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n  var pointerIndex = _ref3.pointerIndex;\n\n  // copy event to be used in timeout for IE8\n  var eventCopy = browser.isIE8 ? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction, browser.isIE8 ? eventCopy : pointer, eventCopy, eventTarget, 'hold');\n  }, defaults._holdDuration);\n});\n\nfunction createSignalListener(event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction, arg.pointer, arg.event, arg.eventTarget, event);\n  };\n}\n\nfor (var i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null; // the most recent tap event on this interaction\n  interaction.tapTime = 0; // time of the most recent tap event\n});\n\nutils.merge(Eventable.prototype.types, ['down', 'move', 'up', 'cancel', 'tap', 'doubletap', 'hold']);\n\nmodule.exports = scope.pointerEvents = {\n  firePointers: firePointers,\n  collectEventTargets: collectEventTargets,\n  preventOriginalDefault: preventOriginalDefault,\n  signals: signals\n};\n\n},{\"../Eventable\":2,\"../Interaction\":5,\"../defaultOptions\":15,\"../scope\":26,\"../utils\":36,\"../utils/Signals\":27,\"../utils/browser\":29}],25:[function(require,module,exports){\nvar pointerEvents = require('./index');\nvar browser = require('../utils/browser');\nvar isType = require('../utils/isType');\nvar domUtils = require('../utils/domUtils');\nvar scope = require('../scope');\n\npointerEvents.signals.on('collect-targets', function (_ref) {\n  var targets = _ref.targets;\n  var element = _ref.element;\n  var eventType = _ref.eventType;\n\n  function collectSelectors(interactable, selector, context) {\n    var els = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    var eventable = interactable._iEvents;\n\n    if (eventable[eventType] && isType.isElement(element) && interactable.inContext(element) && domUtils.matchesSelector(element, selector, els)) {\n\n      targets.push({\n        element: element,\n        eventable: eventable,\n        props: { interactable: interactable }\n      });\n    }\n  }\n\n  var interactable = scope.interactables.get(element);\n\n  if (interactable) {\n    var eventable = interactable._iEvents;\n\n    if (eventable[eventType]) {\n      targets.push({\n        element: element,\n        eventable: eventable,\n        props: { interactable: interactable }\n      });\n    }\n  }\n\n  scope.interactables.forEachSelector(collectSelectors);\n});\n\n},{\"../scope\":26,\"../utils/browser\":29,\"../utils/domUtils\":31,\"../utils/isType\":38,\"./index\":24}],26:[function(require,module,exports){\nvar utils = require('./utils');\nvar extend = require('./utils/extend');\nvar events = require('./utils/events');\nvar signals = require('./utils/Signals')['new']();\n\nvar scope = {\n  signals: signals,\n  events: events,\n  utils: utils,\n\n  documents: [], // all documents being listened to\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) {\n      return false;\n    }\n\n    win = win || scope.getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc: doc, win: win });\n  },\n\n  removeDocument: function (doc, win) {\n    var index = utils.indexOf(scope.documents, doc);\n\n    win = win || scope.getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win: win, doc: doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  }\n};\n\nextend(scope, require('./utils/window'));\nextend(scope, require('./utils/domObjects'));\n\nmodule.exports = scope;\n\n},{\"./utils\":36,\"./utils/Signals\":27,\"./utils/domObjects\":30,\"./utils/events\":32,\"./utils/extend\":33,\"./utils/window\":43}],27:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./arr');\n\nvar indexOf = _require.indexOf;\n\nvar Signals = (function () {\n  function Signals() {\n    _classCallCheck(this, Signals);\n\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  Signals.prototype.on = function on(name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  };\n\n  Signals.prototype.off = function off(name, listener) {\n    if (!this.listeners[name]) {\n      return;\n    }\n\n    var index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  };\n\n  Signals.prototype.fire = function fire(name, arg) {\n    var targetListeners = this.listeners[name];\n\n    if (!targetListeners) {\n      return;\n    }\n\n    for (var i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  };\n\n  return Signals;\n})();\n\nSignals['new'] = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n\n},{\"./arr\":28}],28:[function(require,module,exports){\nfunction indexOf(array, target) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains(array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge(target, source) {\n  for (var i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf: indexOf,\n  contains: contains,\n  merge: merge\n};\n\n},{}],29:[function(require,module,exports){\nvar win = require('./window');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!('ontouchstart' in win.window || isType.isFunction(win.window.DocumentTouch) && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: 'attachEvent' in win.window && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: navigator.appName === 'Opera' && browser.supportsTouch && navigator.userAgent.match('Presto'),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion),\n\n  isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype ? 'matches' : 'webkitMatchesSelector' in Element.prototype ? 'webkitMatchesSelector' : 'mozMatchesSelector' in Element.prototype ? 'mozMatchesSelector' : 'oMatchesSelector' in Element.prototype ? 'oMatchesSelector' : 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: domObjects.PointerEvent ? domObjects.PointerEvent === win.window.MSPointerEvent ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n    out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' } : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n    out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' } : null,\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n\n},{\"./domObjects\":30,\"./isType\":38,\"./window\":43}],30:[function(require,module,exports){\nvar domObjects = {};\nvar win = require('./window').window;\n\nfunction blank() {}\n\ndomObjects.document = win.document;\ndomObjects.DocumentFragment = win.DocumentFragment || blank;\ndomObjects.SVGElement = win.SVGElement || blank;\ndomObjects.SVGSVGElement = win.SVGSVGElement || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement = win.HTMLElement || win.Element;\n\ndomObjects.Event = win.Event;\ndomObjects.Touch = win.Touch || blank;\ndomObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent;\n\nmodule.exports = domObjects;\n\n},{\"./window\":43}],31:[function(require,module,exports){\nvar win = require('./window');\nvar browser = require('./browser');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return element;\n      }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    var parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill ? function (element, selector, elems) {\n    elems = elems || element.parentNode.querySelectorAll(selector);\n\n    for (var i = 0, len = elems.length; i < len; i++) {\n      if (elems[i] === element) {\n        return true;\n      }\n    }\n\n    return false;\n  } : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    var deepestZoneParents = [];\n    var dropzoneParents = [];\n    var dropzone = undefined;\n    var deepestZone = elements[0];\n    var index = deepestZone ? 0 : -1;\n    var parent = undefined;\n    var child = undefined;\n    var i = undefined;\n    var n = undefined;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n          deepestZone = dropzone;\n          index = i;\n          continue;\n        }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement && dropzone instanceof domObjects.SVGElement && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      } else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      var parents = [dropzoneParents[n - 1], dropzoneParents[n], deepestZoneParents[n]];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        } else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return element instanceof domObjects.SVGElementInstance ? element.correspondingUseElement : element;\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop\n    };\n  },\n\n  getElementClientRect: function (element) {\n    var clientRect = element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0];\n\n    return clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top\n    };\n  },\n\n  getElementRect: function (element) {\n    var clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      var _scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left += _scroll.x;\n      clientRect.right += _scroll.x;\n      clientRect.top += _scroll.y;\n      clientRect.bottom += _scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    var path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  }\n};\n\nmodule.exports = domUtils;\n\n},{\"./browser\":29,\"./domObjects\":30,\"./isType\":38,\"./window\":43}],32:[function(require,module,exports){\nvar arr = require('./arr');\nvar isType = require('./isType');\nvar domUtils = require('./domUtils');\nvar indexOf = arr.indexOf;\nvar contains = arr.contains;\nvar getWindow = require('./window').getWindow;\nvar pExtend = require('./pointerExtend');\n\nvar useAttachEvent = 'attachEvent' in window && !('addEventListener' in window);\nvar addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener';\nvar removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener';\nvar on = useAttachEvent ? 'on' : '';\n\nvar elements = [];\nvar targets = [];\nvar attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nvar delegatedEvents = {};\n\nvar documents = [];\n\nfunction add(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push(useAttachEvent ? {\n      supplied: [],\n      wrapped: [],\n      useCount: []\n    } : null);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    var ret = undefined;\n\n    if (useAttachEvent) {\n      var _attachedListeners$elementIndex = attachedListeners[elementIndex];\n      var supplied = _attachedListeners$elementIndex.supplied;\n      var wrapped = _attachedListeners$elementIndex.wrapped;\n      var useCount = _attachedListeners$elementIndex.useCount;\n\n      var listenerIndex = indexOf(supplied, listener);\n\n      var wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault = event.preventDefault || preventDef;\n          event.stopPropagation = event.stopPropagation || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      } else {\n        useCount[listenerIndex]++;\n      }\n    } else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  var wrappedListener = listener;\n  var listeners = undefined;\n  var listenerIndex = undefined;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    var len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (var i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    } else {\n      for (var i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate(selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts: [],\n      listeners: []\n    };\n\n    // add delegate listener functions\n    for (var i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  var delegated = delegatedEvents[type];\n  var index = undefined;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts.push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate(selector, context, type, listener, useCapture) {\n  var delegated = delegatedEvents[type];\n  var matchFound = false;\n  var index = undefined;\n\n  if (!delegated) {\n    return;\n  }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n\n      var listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (var i = listeners.length - 1; i >= 0; i--) {\n        var fn = listeners[i][0];\n        var useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts.splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) {\n        break;\n      }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener(event, useCapture) {\n  var fakeEvent = {};\n  var delegated = delegatedEvents[event.type];\n  var eventTarget = domUtils.getActualElement(event.path ? event.path[0] : event.target);\n  var element = eventTarget;\n\n  useCapture = useCapture ? true : false;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (var i = 0; i < delegated.selectors.length; i++) {\n      var selector = delegated.selectors[i];\n      var context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector) && domUtils.nodeContains(context, eventTarget) && domUtils.nodeContains(context, element)) {\n\n        var listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (var j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture(event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef() {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp() {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp() {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove,\n\n  addDelegate: addDelegate,\n  removeDelegate: removeDelegate,\n\n  delegateListener: delegateListener,\n  delegateUseCapture: delegateUseCapture,\n  delegatedEvents: delegatedEvents,\n  documents: documents,\n\n  useAttachEvent: useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners\n};\n\n},{\"./arr\":28,\"./domUtils\":31,\"./isType\":38,\"./pointerExtend\":40,\"./window\":43}],33:[function(require,module,exports){\nmodule.exports = function extend(dest, source) {\n  for (var prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n\n},{}],34:[function(require,module,exports){\nvar _require = require('./domUtils');\n\nvar closest = _require.closest;\nvar parentNode = _require.parentNode;\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./isType');\n\nvar isElement = _require2.isElement;\nvar isFunction = _require2.isFunction;\nvar trySelector = _require2.trySelector;\n\nmodule.exports = function (interactable, element) {\n  var origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentNode(element);\n  } else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  } else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin)) {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = 'x' in origin ? origin.x : origin.left;\n  origin.y = 'y' in origin ? origin.y : origin.top;\n\n  return origin;\n};\n\n},{\"./domUtils\":31,\"./isType\":38}],35:[function(require,module,exports){\nmodule.exports = function (x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n\n},{}],36:[function(require,module,exports){\nvar extend = require('./extend');\nvar win = require('./window');\n\nvar utils = {\n  warnOnce: function (method, message) {\n    var warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    var iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x: utils._getQBezierValue(position, startX, cpX, endX),\n      y: utils._getQBezierValue(position, startY, cpY, endY)\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t * (t - 2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name = src.name;\n    dest.axis = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  extend: extend,\n  hypot: require('./hypot'),\n  getOriginXY: require('./getOriginXY')\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\nmodule.exports = utils;\n\n},{\"./arr\":28,\"./domUtils\":31,\"./extend\":33,\"./getOriginXY\":34,\"./hypot\":35,\"./isType\":38,\"./pointerUtils\":41,\"./window\":43}],37:[function(require,module,exports){\nvar scope = require('../scope');\nvar utils = require('./index');\nvar browser = require('./browser');\n\nvar finder = {\n  methodOrder: ['simulationResume', 'mouse', 'hasPointer', 'idle'],\n\n  search: function (pointer, eventType, eventTarget) {\n    var mouseEvent = /mouse/i.test(pointer.pointerType || eventType)\n    // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n     || pointer.pointerType === 4;\n    var pointerId = utils.getPointerId(pointer);\n    var details = { pointer: pointer, pointerId: pointerId, mouseEvent: mouseEvent, eventType: eventType, eventTarget: eventTarget };\n\n    for (var _iterator = finder.methodOrder, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var method = _ref;\n\n      var interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function (_ref7) {\n    var mouseEvent = _ref7.mouseEvent;\n    var eventType = _ref7.eventType;\n    var eventTarget = _ref7.eventTarget;\n\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (var _iterator2 = scope.interactions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      var element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume && interaction.mouse === mouseEvent) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function (_ref8) {\n    var mouseEvent = _ref8.mouseEvent;\n    var eventType = _ref8.eventType;\n\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    var firstNonActive = undefined;\n\n    for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (/down/i.test(eventType) && interaction.simulation) {\n          continue;\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n            firstNonActive = interaction;\n          }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (var _iterator4 = scope.interactions, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var interaction = _ref4;\n\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function (_ref9) {\n    var pointerId = _ref9.pointerId;\n\n    for (var _iterator5 = scope.interactions, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var interaction = _ref5;\n\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function (_ref10) {\n    var mouseEvent = _ref10.mouseEvent;\n\n    for (var _iterator6 = scope.interactions, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var interaction = _ref6;\n\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        var target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n          continue;\n        }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  }\n};\n\nmodule.exports = finder;\n\n},{\"../scope\":26,\"./browser\":29,\"./index\":36}],38:[function(require,module,exports){\nvar win = require('./window');\nvar isWindow = require('./isWindow');\nvar domObjects = require('./domObjects');\n\nvar isType = {\n  isElement: function (o) {\n    if (!o || typeof o !== 'object') {\n      return false;\n    }\n\n    var _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element) ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  },\n\n  isArray: null,\n\n  isWindow: function (thing) {\n    return thing === win.window || isWindow(thing);\n  },\n\n  isDocFrag: function (thing) {\n    return isType.isObject(thing) && thing.nodeType === 11;\n  },\n\n  isObject: function (thing) {\n    return !!thing && typeof thing === 'object';\n  },\n\n  isFunction: function (thing) {\n    return typeof thing === 'function';\n  },\n\n  isNumber: function (thing) {\n    return typeof thing === 'number';\n  },\n\n  isBool: function (thing) {\n    return typeof thing === 'boolean';\n  },\n\n  isString: function (thing) {\n    return typeof thing === 'string';\n  },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) {\n      return false;\n    }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  }\n};\n\nisType.isArray = function (thing) {\n  return isType.isObject(thing) && typeof thing.length !== 'undefined' && isType.isFunction(thing.splice);\n};\n\nmodule.exports = isType;\n\n},{\"./domObjects\":30,\"./isWindow\":39,\"./window\":43}],39:[function(require,module,exports){\nmodule.exports = function (thing) {\n  return !!(thing && thing.Window) && thing instanceof thing.Window;\n};\n\n},{}],40:[function(require,module,exports){\nfunction pointerExtend(dest, source) {\n  for (var prop in source) {\n    var prefixedPropREs = module.exports.prefixedPropREs;\n    var deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (var vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated) {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n};\n\nmodule.exports = pointerExtend;\n\n},{}],41:[function(require,module,exports){\nvar hypot = require('./hypot');\nvar browser = require('./browser');\nvar dom = require('./domObjects');\nvar isType = require('./isType');\nvar pointerExtend = require('./pointerExtend');\n\nvar pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x = cur.page.x - prev.page.x;\n    targetObj.page.y = cur.page.y - prev.page.y;\n    targetObj.client.x = cur.client.x - prev.client.x;\n    targetObj.client.y = cur.client.y - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx = targetObj.page.x / dt;\n    targetObj.page.vy = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx = targetObj.client.x / dt;\n    targetObj.client.vy = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function (pointer) {\n    return pointer instanceof dom.Event || pointer instanceof dom.Touch;\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    } else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    } else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    var pointer = pointers.length > 1 ? pointerUtils.pointerAverage(pointers) : pointers[0];\n\n    var tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp : new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    var touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n        if (event.type === 'touchend') {\n          if (event.touches.length === 1) {\n            touches[0] = event.touches[0];\n            touches[1] = event.changedTouches[0];\n          } else if (event.touches.length === 0) {\n            touches[0] = event.changedTouches[0];\n            touches[1] = event.changedTouches[1];\n          }\n        } else {\n          touches[0] = event.touches[0];\n          touches[1] = event.touches[1];\n        }\n      }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    var average = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    };\n\n    for (var _iterator = pointers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref;\n\n      for (var prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (var prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    var touches = pointerUtils.getTouchPair(event);\n    var minX = Math.min(touches[0].pageX, touches[1].pageX);\n    var minY = Math.min(touches[0].pageY, touches[1].pageY);\n    var maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    var maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n\n    var dx = touches[0][sourceX] - touches[1][sourceX];\n    var dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n    var dx = touches[1][sourceX] - touches[0][sourceX];\n    var dy = touches[1][sourceY] - touches[0][sourceY];\n    var angle = 180 * Math.atan2(dy, dx) / Math.PI;\n\n    return angle;\n  }\n};\n\nmodule.exports = pointerUtils;\n\n},{\"./browser\":29,\"./domObjects\":30,\"./hypot\":35,\"./isType\":38,\"./pointerExtend\":40}],42:[function(require,module,exports){\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nvar lastTime = 0;\nvar request = undefined;\nvar cancel = undefined;\n\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = setTimeout(function () {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request: request,\n  cancel: cancel\n};\n\n},{}],43:[function(require,module,exports){\nvar win = module.exports;\nvar isWindow = require('./isWindow');\n\nfunction init(window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  var el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window = undefined;\n  win.realWindow = undefined;\n} else {\n  init(window);\n}\n\nwin.getWindow = function getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var rootNode = node.ownerDocument || node;\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n\n},{\"./isWindow\":39}]},{},[1])(1)\n});\n\n","const { indexOf } = require('./utils/arr');\n\nclass Eventable {\n  fire (event) {\n    let listeners;\n    const onEvent = 'on' + event.type;\n    const global = this.global;\n\n    // Interactable#on() listeners\n    if (event.type in this) {\n      listeners = this[event.type];\n\n      for (let i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n        listeners[i](event);\n      }\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (global && event.type in global && (listeners = global[event.type]))  {\n\n      for (let i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n        listeners[i](event);\n      }\n    }\n  }\n\n  on (eventType, listener) {\n    // if this type of event was never bound\n    if (!(eventType in this)) {\n      this[eventType] = [listener];\n    }\n    else {\n      this[eventType].push(listener);\n    }\n  }\n\n  off (eventType, listener) {\n    // if it is an action event type\n    const eventList = this[eventType];\n    const index     = eventList? indexOf(eventList, listener) : -1;\n\n    if (index !== -1) {\n      this[eventType].splice(index, 1);\n    }\n  }\n}\n\nEventable.prototype.types = [];\n\nmodule.exports = Eventable;\n","const extend      = require('./utils/extend');\nconst getOriginXY = require('./utils/getOriginXY');\nconst defaults    = require('./defaultOptions');\nconst signals     = require('./utils/Signals').new();\n\nclass InteractEvent {\n  constructor (interaction, event, action, phase, element, related) {\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || defaults).deltaSource;\n    const origin      = getOriginXY(target, element);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const coords      = starting? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    const page   = extend({}, coords.page);\n    const client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.t0            = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type          = action + (phase || '');\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    const signalArg = {\n      interaction,\n      event,\n      action,\n      phase,\n      element,\n      related,\n      page,\n      client,\n      coords,\n      starting,\n      ending,\n      deltaSource,\n      iEvent: this,\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      const prevEvent = interaction.prevEvent;\n\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    }\n    else {\n      this.pageX     = page.x;\n      this.pageY     = page.y;\n      this.clientX   = client.x;\n      this.clientY   = client.y;\n    }\n\n    this.x0        = interaction.startCoords.page.x - origin.x;\n    this.y0        = interaction.startCoords.page.y - origin.y;\n    this.clientX0  = interaction.startCoords.client.x - origin.x;\n    this.clientY0  = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt        = interaction.pointerDelta.timeStamp;\n    this.duration  = this.timeStamp - interaction.downTimes[0];\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = (ending || phase === 'inertiastart')? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  getSwipe () {\n    const interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600\n        || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    const overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap;\n    const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    };\n  }\n\n  preventDefault () {}\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nsignals.on('set-delta', function ({ iEvent, interaction, ending, starting, deltaSource }) {\n  if (starting) {\n    iEvent.dx = 0;\n    iEvent.dy = 0;\n  }\n  // end event dx, dy is difference between start and end points\n  else if (ending) {\n    if (deltaSource === 'client') {\n      iEvent.dx = iEvent.clientX - interaction.startCoords.client.x;\n      iEvent.dy = iEvent.clientY - interaction.startCoords.client.y;\n    }\n    else {\n      iEvent.dx = iEvent.pageX - interaction.startCoords.page.x;\n      iEvent.dy = iEvent.pageY - interaction.startCoords.page.y;\n    }\n  }\n  else {\n    if (deltaSource === 'client') {\n      iEvent.dx = iEvent.clientX - interaction.prevEvent.clientX;\n      iEvent.dy = iEvent.clientY - interaction.prevEvent.clientY;\n    }\n    else {\n      iEvent.dx = iEvent.pageX - interaction.prevEvent.pageX;\n      iEvent.dy = iEvent.pageY - interaction.prevEvent.pageY;\n    }\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n","const isType    = require('./utils/isType');\nconst events    = require('./utils/events');\nconst extend    = require('./utils/extend');\nconst actions   = require('./actions');\nconst scope     = require('./scope');\nconst Eventable = require('./Eventable');\nconst defaults  = require('./defaultOptions');\nconst signals   = require('./utils/Signals').new();\n\nconst { getElementRect, nodeContains } = require('./utils/domUtils');\nconst { indexOf, contains }            = require('./utils/arr');\nconst { wheelEvent }                   = require('./utils/browser');\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\nclass Interactable {\n  constructor (target, options) {\n    this.target   = target;\n    this._context = scope.document;\n    this._iEvents = new Eventable();\n\n    let _window;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      const context = options && options.context;\n\n      _window = context? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node\n        ? context instanceof _window.Node\n        : (isType.isElement(context) || context === _window.document))) {\n\n        this._context = context;\n      }\n    }\n    else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target,\n      options,\n      interactable: this,\n      win: _window,\n    });\n\n    scope.addDocument( this._doc, _window );\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  setOnEvents (action, phases) {\n    const onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)       ) { this._iEvents[onAction + 'start'        ] = phases.onstart         ; }\n    if (isType.isFunction(phases.onmove)        ) { this._iEvents[onAction + 'move'         ] = phases.onmove          ; }\n    if (isType.isFunction(phases.onend)         ) { this._iEvents[onAction + 'end'          ] = phases.onend           ; }\n    if (isType.isFunction(phases.oninertiastart)) { this._iEvents[onAction + 'inertiastart' ] = phases.oninertiastart  ; }\n\n    return this;\n  }\n\n  setPerAction (action, options) {\n    // for all the default per-action options\n    for (const option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false? false : true;\n          }\n        }\n        else if (isType.isBool(options[option]) && isType.isObject(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        }\n        else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  }\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n  getRect (element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !(isType.isElement(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n  rectChecker (checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n  origin (newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n    else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  }\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n  context () {\n    return this._context;\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument\n            || nodeContains(this._context, element));\n  }\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n  fire (iEvent) {\n    if (!(iEvent && iEvent.type) || !contains(this._iEvents.types, iEvent.type)) {\n      return this;\n    }\n\n    this._iEvents.fire(iEvent);\n\n    return this;\n  }\n\n  _onOffMultiple (method, eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this[method](eventType[i], listener, useCapture);\n      }\n\n      return true;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  }\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n  on (eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('on', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    if (contains(this._iEvents.types, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n      events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    else {\n      events.add(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n  off (eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('off', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    // if it is an action event type\n    if (contains(this._iEvents.types, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n      events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    // remove listener from this Interatable's element\n    else {\n      events.remove(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n  set (options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, defaults.base);\n\n    const perActions = extend({}, defaults.perAction);\n\n    for (const actionName in actions.methodDict) {\n      const methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (const setting of Interactable.settingsMethods) {\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        for (let i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target\n              && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts .splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    }\n    else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (const interaction of scope.interactions || []) {\n      if (interaction.target === this && interaction.interacting()) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  }\n}\n\nscope.interactables.indexOfElement = function indexOfElement (target, context) {\n  context = context || scope.document;\n\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    if (interactable.target === target\n        && (!isType.isString(target) || (interactable._context === context))) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet (element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!isType.isString(interactable.target)) {\n      continue;\n    }\n\n    const ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = [ 'deltaSource', 'origin', 'preventDefault', 'rectChecker' ];\n\nmodule.exports = Interactable;\n","const scope   = require('./scope');\nconst utils   = require('./utils');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst finder  = require('./utils/interactionFinder');\nconst signals = require('./utils/Signals').new();\n\nconst listeners   = {};\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer',\n];\n\n// for ignoring browser's simulated mouse events\nlet prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nclass Interaction {\n  constructor () {\n    this.target        = null; // current interactable being interacted with\n    this.element       = null; // the target element of the interactable\n\n    this.prepared      = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    // keep track of added pointers\n    this.pointers    = [];\n    this.pointerIds  = [];\n    this.downTargets = [];\n    this.downTimes   = [];\n    this.holdTimers  = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0,\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget    = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null;      // previous action event\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords , this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = this.curCoords.timeStamp;\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n    }\n\n    signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n  }\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action  (object)  The action to be performed - drag, resize, etc.\n   - target  (Interactable) The Interactable to target\n   - element (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n  start (action, target, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    // set the startCoords if there was no prepared action\n    if (!this.prepared.name) {\n      utils.setCoords(this.startCoords, this.pointers);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target         = target;\n    this.element        = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent,\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    const duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n                           && this.curCoords.page.y === this.prevCoords.page.y\n                           && this.curCoords.client.x === this.prevCoords.client.x\n                           && this.curCoords.client.y === this.prevCoords.client.y);\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    const signalArg = {\n      pointer,\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting(),\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  }\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n  doMove (signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this,\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.mouse? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire(/cancel$/i.test(event.type)? 'cancel' : 'up', {\n      pointer,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n      this.removePointer(pointer);\n    }\n  }\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n  end (event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.stop();\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  stop () {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  }\n\n  updatePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    let index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  }\n\n  removePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    const index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) { return; }\n\n    this.pointers   .splice(index, 1);\n    this.pointerIds .splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes  .splice(index, 1);\n    this.holdTimers .splice(index, 1);\n  }\n\n  _updateEventTargets (target, currentTarget) {\n    this._eventTarget    = target;\n    this._curEventTarget = currentTarget;\n  }\n}\n\nfor (let i = 0, len = methodNames.length; i < len; i++) {\n  const method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions (method) {\n  return (function (event) {\n    const eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    const curEventTarget = utils.getActualElement(event.currentTarget);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (let i = 0; i < event.changedTouches.length; i++) {\n        const pointer = event.changedTouches[i];\n        const interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || (new Date().getTime() - prevTouchTime < 500);\n      }\n\n      if (!invalidPointer) {\n        let interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = (/mouse/i.test(event.pointerType || event.type)\n                               // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                               || event.pointerType === 4);\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (const [pointer, interaction] of matches) {\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\nfunction endAll (event) {\n  for (let i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].end(event);\n  }\n}\n\nconst docEvents = { /* 'eventType': listenerFunc */ };\nconst pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down  ] = listeners.pointerDown;\n  docEvents[pEventTypes.move  ] = listeners.pointerMove;\n  docEvents[pEventTypes.up    ] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n}\nelse {\n  docEvents.mousedown   = listeners.pointerDown;\n  docEvents.mousemove   = listeners.pointerMove;\n  docEvents.mouseup     = listeners.pointerUp;\n\n  docEvents.touchstart  = listeners.pointerDown;\n  docEvents.touchmove   = listeners.pointerMove;\n  docEvents.touchend    = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal ({ doc }, signalName) {\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove;\n\n  // delegate event listener\n  for (const eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (const eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document'   , onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst Eventable      = require('../Eventable');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drag = {\n  defaults: {\n    enabled   : false,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  },\n\n  checker: function (pointer, event, interactable) {\n    const dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled\n      ? { name: 'drag', axis: (dragOptions.lockAxis === 'start'\n                               ? dragOptions.startAxis\n                               : dragOptions.lockAxis)}\n      : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y   = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy   = 0;\n  }\n  else if (axis === 'y') {\n    interaction.curCoords.page.x   = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx   = 0;\n  }\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY   = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  }\n  else if (axis === 'y') {\n    dragEvent.pageX   = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Eventable.prototype.types, [\n  'dragstart',\n  'dragmove',\n  'draginertiastart',\n  'draginertiaresume',\n  'dragend',\n]);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst scope          = require('../scope');\nconst interact       = require('../interact');\nconst Eventable      = require('../Eventable');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drop = {\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nlet dynamicDrop = false;\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements  = [];\n  interaction.activeDrops.rects     = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  const dragEvent = interaction.prevEvent;\n  const dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function ({ interaction, iEvent, event }) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const draggableElement = interaction.element;\n  const dragEvent = iEvent;\n  const dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget  = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function ({ interaction }) {\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function ({ interaction }) {\n  interaction.activeDrops.dropzones =\n    interaction.activeDrops.elements =\n    interaction.activeDrops.rects =\n    interaction.dropEvents = null;\n});\n\nfunction collectDrops (interaction, element) {\n  const drops = [];\n  const elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const current of scope.interactables) {\n    if (!current.options.drop.enabled) { continue; }\n\n    const accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if ((utils.isElement(accept) && accept !== element)\n        || (utils.isString(accept)\n        && !utils.matchesSelector(element, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.isString(current.target)\n      ? current._context.querySelectorAll(current.target)\n      : [current.target];\n\n    for (let i = 0; i < dropElements.length; i++) {\n      const currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements,\n    dropzones: drops,\n  };\n}\n\nfunction fireActiveDrops (interaction, event) {\n  let prevElement;\n\n  // loop through all active dropzones and trigger event\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    const current = interaction.activeDrops.dropzones[i];\n    const currentElement = interaction.activeDrops.elements [i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops (interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements  = possibleDrops.elements;\n  interaction.activeDrops.rects     = [];\n\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] =\n      interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop (dragEvent, event, dragElement) {\n  const interaction = dragEvent.interaction;\n  const validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (let j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    const current        = interaction.activeDrops.dropzones[j];\n    const currentElement = interaction.activeDrops.elements [j];\n    const rect           = interaction.activeDrops.rects    [j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect)\n      ? currentElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element : interaction.activeDrops.elements [dropIndex] || null,\n  };\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  const tmpl = {\n    dragEvent,\n    interaction,\n    target       : interaction.dropElement,\n    dropzone     : interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable    : dragEvent.interactable,\n    timeStamp    : dragEvent.timeStamp,\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent,\n        interaction,\n        target       : interaction.dropElement,\n        dropzone     : interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragenter',\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target   = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target   = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove     : dragEvent,\n      type         : 'dropmove',\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, dropEvents) {\n  if (dropEvents.leave) { interaction.prevDropTarget.fire(dropEvents.leave); }\n  if (dropEvents.enter) {     interaction.dropTarget.fire(dropEvents.enter); }\n  if (dropEvents.drop ) {     interaction.dropTarget.fire(dropEvents.drop ); }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget  = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.isFunction(options.ondrop)          ) { this._iEvents.ondrop           = options.ondrop          ; }\n    if (utils.isFunction(options.ondropactivate)  ) { this._iEvents.ondropactivate   = options.ondropactivate  ; }\n    if (utils.isFunction(options.ondropdeactivate)) { this._iEvents.ondropdeactivate = options.ondropdeactivate; }\n    if (utils.isFunction(options.ondragenter)     ) { this._iEvents.ondragenter      = options.ondragenter     ; }\n    if (utils.isFunction(options.ondragleave)     ) { this._iEvents.ondragleave      = options.ondragleave     ; }\n    if (utils.isFunction(options.ondropmove)      ) { this._iEvents.ondropmove       = options.ondropmove      ; }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    }\n    else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return (this.options.drop.checker\n      ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement);\n    const page = utils.getPageXY(dragEvent);\n    let horizontal;\n    let vertical;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = (page.x > rect.left) && (page.x < rect.right);\n    vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function ({ interactable }) {\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget      = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement     = null; // the element at the time of checking\n  interaction.prevDropTarget  = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents      = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [],      // the dropzones that are mentioned below\n    elements : [],      // elements of dropzones that accept the target draggable\n    rects    : [],      // the rects of the elements mentioned above\n  };\n\n});\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  interaction.dropTarget = interaction.dropElement =\n    interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Eventable.prototype.types, [\n  'dragenter',\n  'dragleave',\n  'dropactivate',\n  'dropdeactivate',\n  'dropmove',\n  'drop',\n]);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst Eventable      = require('../Eventable');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst gesture = {\n  defaults: {\n    enabled : false,\n    restrict: null,\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  let gestureEvent;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity\n      && gestureEvent.scale !== null\n      && gestureEvent.scale !== undefined\n      && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false? false: true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action, event, starting, ending, deltaSource }) {\n  if (action !== 'gesture') { return; }\n\n  const pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0,   // distance between two touches of touchStart\n    prevDistance : 0,\n    distance     : 0,\n\n    scale: 1,           // gesture.distance / gesture.startDistance\n\n    startAngle: 0,      // angle of line joining two touches\n    prevAngle : 0,      // angle of the previous gesture event\n  };\n});\n\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Eventable.prototype.types, [\n  'gesturestart',\n  'gesturemove',\n  'gestureend',\n]);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n","const actions = {\n  names: [],\n  methodDict: {},\n};\n\nmodule.exports = actions;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst browser        = require('../utils/browser');\nconst Eventable      = require('../Eventable');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nconst defaultMargin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\nconst resize = {\n  defaults: {\n    enabled   : false,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) { return null; }\n\n    const page = utils.extend({}, interaction.curCoords.page);\n    const options = interactable.options;\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize;\n      const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n                                              resizeOptions.edges[edge],\n                                              page,\n                                              interaction._eventTarget,\n                                              element,\n                                              rect,\n                                              resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          };\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - defaultMargin);\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - defaultMargin);\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right? 'x' : '') + (bottom? 'y' : ''),\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: (browser.isIe9OrOlder ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  }),\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    }\n    else if (action.edges) {\n      let cursorKey = '';\n      const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    const startRect = interaction.target.getRect(interaction.element);\n    const resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n      linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n      linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n      linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    }\n    else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start     : startRect,\n      current   : utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous  : utils.extend({}, startRect),\n      delta     : {\n        left: 0, right : 0, width : 0,\n        top : 0, bottom: 0, height: 0,\n      },\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  if (edges) {\n    const start      = interaction.resizeRects.start;\n    const current    = interaction.resizeRects.current;\n    const restricted = interaction.resizeRects.restricted;\n    const delta      = interaction.resizeRects.delta;\n    const previous   = utils.extend(interaction.resizeRects.previous, restricted);\n    const originalEdges = edges;\n\n    let dx = resizeEvent.dx;\n    let dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      const startAspectRatio = resizeOptions.preserveAspectRatio\n        ? interaction.resizeStartAspectRatio\n        : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if ((originalEdges.left && originalEdges.bottom)\n          || (originalEdges.right && originalEdges.top)) {\n        dy = -dx / startAspectRatio;\n      }\n      else if (originalEdges.left || originalEdges.right ) { dy = dx / startAspectRatio; }\n      else if (originalEdges.top  || originalEdges.bottom) { dx = dy * startAspectRatio; }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top   ) { current.top    += dy; }\n    if (edges.bottom) { current.bottom += dy; }\n    if (edges.left  ) { current.left   += dx; }\n    if (edges.right ) { current.right  += dx; }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        let swap;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    }\n    else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top    = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left   = Math.min(current.left, start.right);\n      restricted.right  = Math.max(current.right, start.left);\n    }\n\n    restricted.width  = restricted.right  - restricted.left;\n    restricted.height = restricted.bottom - restricted.top ;\n\n    for (const edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false? false: true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    }\n    else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.isNumber(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.isNumber(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) { return false; }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    }\n    else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Eventable.prototype.types, [\n  'resizestart',\n  'resizemove',\n  'resizeinertiastart',\n  'resizeinertiaresume',\n  'resizeend',\n]);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n","const raf            = require('./utils/raf');\nconst getWindow      = require('./utils/window').getWindow;\nconst isWindow       = require('./utils/isType').isWindow;\nconst domUtils       = require('./utils/domUtils');\nconst Interaction    = require('./Interaction');\nconst defaultOptions = require('./defaultOptions');\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    container: null,     // the item that is scrolled (Window or HTMLElement)\n    margin   : 60,\n    speed    : 300,      // the scroll speed in pixels per second\n  },\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(autoScroll.interaction.element);\n    const now = new Date().getTime();\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    const s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      }\n      else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop  += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    const options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function ({ interaction, pointer }) {\n    if (!(interaction.interacting()\n          && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const options = interaction.target.options[interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left   = pointer.clientX < autoScroll.margin;\n      top    = pointer.clientY < autoScroll.margin;\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container);\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin;\n      top    = pointer.clientY < rect.top    + autoScroll.margin;\n      right  = pointer.clientX > rect.right  - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = (right ? 1: left? -1: 0);\n    autoScroll.y = (bottom? 1:  top? -1: 0);\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed  = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  },\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n","const autoStart   = require('./index');\nconst Interaction = require('../Interaction');\nconst actions     = require('../actions');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(() => {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nfor (const action of actions.names) {\n  autoStart.signals.on('before-start-' + action, preventImmediateMove);\n}\n\nInteraction.signals.on('move', function ({ interaction, duplicate }) {\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\nfunction preventImmediateMove ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n}\n","const autoStart = require('./index');\nconst scope     = require('../scope');\nconst browser   = require('../utils/browser');\n\nconst { isElement } = require('../utils/isType');\nconst { matchesSelector, parentNode } = require('../utils/domUtils');\n\nautoStart.signals.on('before-start-drag',  function ({ interaction, eventTarget, dx, dy }) {\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx);\n  const absY = Math.abs(dy);\n  const dragOptions = interaction.target.options.drag;\n  const startAxis = dragOptions.startAxis;\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start'\n    ? currentAxis\n    : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n\n      let element = eventTarget;\n\n      const getDraggable = function (interactable, selector, context) {\n        const elements = browser.useMatchesSelectorPolyfill\n            ? context.querySelectorAll(selector)\n            : undefined;\n\n        if (interactable === interaction.target) { return; }\n\n        let action = null;\n\n        if (interactable.inContext(eventTarget)\n            && !interactable.options.drag.manualStart\n            && !autoStart.testIgnore(interactable, element, eventTarget)\n            && autoStart.testAllow(interactable, element, eventTarget)\n            && matchesSelector(element, selector, elements)) {\n\n          action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, interactable)\n            && autoStart.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n          return interactable;\n        }\n      };\n\n      let action = null;\n\n      // check all interactables\n      while (isElement(element)) {\n        const elementInteractable = scope.interactables.get(element);\n\n        if (elementInteractable\n            && elementInteractable !== interaction.target\n            && !elementInteractable.options.drag.manualStart) {\n\n          action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, elementInteractable)) {\n\n          interaction.prepared.name = 'drag';\n          interaction.target = elementInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        const selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n        if (selectorInteractable) {\n          interaction.prepared.name = 'drag';\n          interaction.target = selectorInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        element = parentNode(element);\n      }\n    }\n  }\n});\n\nfunction checkStartAxis (startAxis, interactable) {\n  if (!interactable) { return false; }\n\n  const thisAxis = interactable.options.drag.startAxis;\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis);\n}\n","const interact       = require('../interact');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst actions        = require('../actions');\nconst defaultOptions = require('../defaultOptions');\nconst browser        = require('../utils/browser');\nconst scope          = require('../scope');\nconst utils          = require('../utils');\nconst signals        = require('../utils/Signals').new();\n\nconst autoStart = {\n  signals,\n  testIgnore,\n  testAllow,\n  withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  perActionDefaults: {\n    manualStart: false,\n    max: 0,\n    maxPerElement: 1,\n  },\n  setActionDefaults: function (actionName) {\n    const action = actions[actionName];\n\n    utils.extend(action.defaults, autoStart.perActionDefaults);\n  },\n};\n\nfunction testIgnore (interactable, interactableElement, element) {\n  const ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) { return false; }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  }\n  else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n}\n\nfunction testAllow (interactable, interactableElement, element) {\n  const allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) { return true; }\n\n  if (!utils.isElement(element)) { return false; }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  }\n  else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n}\n\n// mouse move cursor style\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n  if (!interaction.mouse || interaction.pointerIsDown) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n  if (interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  const { interaction, event } = arg;\n\n  if (!(interaction.pointerIsDown && interaction.pointerWasMoved && interaction.prepared.name)) {\n    return;\n  }\n\n  // ignore movement while simulation is active\n  if (!interaction.simulation) {\n\n    if (!interaction.interacting()) {\n      signals.fire('before-start-' + interaction.prepared.name, arg);\n    }\n\n    const starting = !!interaction.prepared.name && !interaction.interacting();\n\n    if (starting\n        && (interaction.target.options[interaction.prepared.name].manualStart\n        || !withinInteractionLimit(interaction.target, interaction.element, interaction.prepared))) {\n      interaction.stop(event);\n      return;\n    }\n\n    if (interaction.prepared.name && interaction.target) {\n      if (starting) {\n        interaction.start(interaction.prepared, interaction.target, interaction.element);\n      }\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n  let action = null;\n\n  function pushMatches (interactable, selector, context) {\n    const elements = (browser.useMatchesSelectorPolyfill\n      ? context.querySelectorAll(selector)\n      : undefined);\n\n    if (interactable.inContext(element)\n        && !module.exports.testIgnore(interactable, element, eventTarget)\n      && module.exports.testAllow(interactable, element, eventTarget)\n      && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    const elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable\n        && (action = validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable))\n        && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element,\n        action,\n        target: elementInteractable,\n      };\n    }\n    else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action\n          && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\n/*\\\n * Interactable.ignoreFrom\n [ method ]\n *\n * If the target of the `mousedown`, `pointerdown` or `touchstart`\n * event or any of it's parents match the given CSS selector or\n * Element, no drag/resize/gesture is started.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n = (string | Element | object) The current ignoreFrom value or this Interactable\n **\n | interact(element, { ignoreFrom: document.getElementById('no-action') });\n | // or\n | interact(element).ignoreFrom('input, textarea, a');\n\\*/\nInteractable.prototype.ignoreFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {            // CSS selector to match event.target\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {              // specific element\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  return this.options.ignoreFrom;\n};\n\n/*\\\n * Interactable.allowFrom\n [ method ]\n *\n * A drag/resize/gesture is started only If the target of the\n * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n * parents match the given CSS selector or Element.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n = (string | Element | object) The current allowFrom value or this Interactable\n **\n | interact(element, { allowFrom: document.getElementById('drag-handle') });\n | // or\n | interact(element).allowFrom('.handle');\n\\*/\nInteractable.prototype.allowFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {            // CSS selector to match event.target\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {              // specific element\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  return this.options.allowFrom;\n};\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  const target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  const rect = this.getRect(element);\n  let action = null;\n\n  for (const actionName of actions.names) {\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nfunction withinInteractionLimit (interactable, element, action) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  for (let i = 0, len = scope.interactions.length; i < len; i++) {\n    const interaction = scope.interactions[i];\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.perActionDefaults);\n\nmodule.exports = autoStart;\n","module.exports = {\n  base: {\n    accept        : null,\n    preventDefault: 'auto',\n    origin        : { x: 0, y: 0 },\n    deltaSource   : 'page',\n    allowFrom     : null,\n  },\n\n  perAction: {\n    inertia: {\n      enabled          : false,\n      resistance       : 10,    // the lambda in exponential decay\n      minSpeed         : 100,   // target speed must be above this for inertia to start\n      endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n      allowResume      : true,  // allow resuming an action in inertia phase\n      smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n    },\n  },\n\n  _holdDuration: 600,\n};\n","/* browser entry point */\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\nrequire('./pointerEvents/interactableTargets');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// autoStart\nconst autoStart = require('./autoStart');\nrequire('./autoStart/drag');\nrequire('./autoStart/delay');\nautoStart.setActionDefaults('drag');\nautoStart.setActionDefaults('resize');\nautoStart.setActionDefaults('gesture');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n","const InteractEvent  = require('./InteractEvent');\nconst Interaction    = require('./Interaction');\nconst modifiers      = require('./modifiers');\nconst utils          = require('./utils');\nconst animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active     : false,\n    smoothEnd  : false,\n    allowResume: false,\n    ending     : false,\n\n    startEvent: null,\n    upCoords  : {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i  : null,\n  };\n\n  interaction.boundInertiaFrame   = () => inertiaFrame  .apply(interaction);\n  interaction.boundSmoothEndFrame = () => smoothEndFrame.apply(interaction);\n});\n\nInteraction.signals.on('down', function ({ interaction, event, pointer, eventTarget }) {\n  const status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    let element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        const signalArg = { interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume'     , signalArg);\n\n        // fire a reume event\n        const resumeEvent = new InteractEvent(interaction,\n                                              event,\n                                              interaction.prepared.name,\n                                              'inertiaresume',\n                                              interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function ({ interaction, event }) {\n  const status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) { return; }\n\n  const target = interaction.target;\n  const options = target && target.options;\n  const inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  const now = new Date().getTime();\n  const statuses = {};\n  const page = utils.extend({}, interaction.curCoords.page);\n  const pointerSpeed = interaction.pointerDelta.client.speed;\n  let inertiaPossible = false;\n  let inertia = false;\n  let smoothEnd = false;\n  let modifierResult;\n\n  // check if inertia should be started\n  inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                     && interaction.prepared.name !== 'gesture'\n                     && event !== status.startEvent);\n\n  inertia = (inertiaPossible\n            && (now - interaction.curCoords.timeStamp) < 50\n            && pointerSpeed > inertiaOptions.minSpeed\n            && pointerSpeed > inertiaOptions.endSpeed);\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return; }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent =\n    new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  }\n  else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function ({ interaction }) {\n  const status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = status.ending = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia (interaction, status) {\n  const inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  const lambda = inertiaOptions.resistance;\n  const inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame () {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  const status = this.inertiaStatus;\n  const options = this.target.options[this.prepared.name].inertia;\n  const lambda = options.resistance;\n  const t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    const progress =  1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(0, 0,\n                                                     status.xe,\n                                                     status.ye,\n                                                     status.modifiedXe,\n                                                     status.modifiedYe,\n                                                     progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  }\n  else {\n    status.ending = true;\n\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = status.ending = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame () {\n  updateInertiaCoords(this);\n\n  const status = this.inertiaStatus;\n  const t = new Date().getTime() - status.t0;\n  const duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  }\n  else {\n    status.ending = true;\n\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd =\n      status.active = status.ending = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords (interaction) {\n  const status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) { return; }\n\n  const pageUp   = status.upCoords.page;\n  const clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [ {\n    pageX  : pageUp.x   + status.sx,\n    pageY  : pageUp.y   + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy,\n  } ]);\n}\n","/**\n * interact.js v1.2.5\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n\nconst browser      = require('./utils/browser');\nconst events       = require('./utils/events');\nconst utils        = require('./utils');\nconst scope        = require('./scope');\nconst Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\nconst Eventable    = require('./Eventable');\n\nconst globalEvents = {};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact(document.getElementById('draggable')).draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // something cool...\n |     })\n |     .autoScroll(true);\n\\*/\nfunction interact (element, options) {\n  let interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable._iEvents.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Eventable.prototype.types, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    }\n    else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, useCapture);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Eventable.prototype.types, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  }\n  else {\n    let index;\n\n    if (type in globalEvents\n        && (index = utils.indexOf(globalEvents[type], listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointerAverage;\ninteract.getTouchBBox       = utils.touchBBox;\ninteract.getTouchDistance   = utils.touchDistance;\ninteract.getTouchAngle      = utils.touchAngle;\n\ninteract.getElementRect       = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector      = utils.matchesSelector;\ninteract.closest              = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (let i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument    = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n","const Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\nconst scope        = require('./scope');\nconst isType       = require('./utils/isType');\n\nconst { nodeContains } = require('./utils/domUtils');\n\n/*\\\n * Interactable.preventDefault\n [ method ]\n *\n * Returns or sets whether to prevent the browser's default behaviour\n * in response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n - newValue (string) #optional `true`, `false` or `'auto'`\n = (string | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (isType.isBool(newValue)) {\n    this.options.preventDefault = newValue? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  const setting = this.options.preventDefault;\n\n  if (setting === 'never') { return; }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of pointerdown events\n  if (/down|start/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on input elements\n  if (/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nfor (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag (event) {\n  for (const interaction of scope.interactions) {\n\n    if (interaction.element\n        && (interaction.element === event.target\n            || nodeContains(interaction.element, event.target))) {\n\n      interaction.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n","const scope   = require('./scope');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst iFinder = require('./utils/interactionFinder');\n\nconst toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick (event) {\n  const interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) { return; }\n\n  if (interaction.prevTap\n      && event.clientX === interaction.prevTap.clientX\n      && event.clientY === interaction.prevTap.clientY\n      && event.target  === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes  [0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  const selectFix = function (event) {\n    for (const interaction of scope.interactions) {\n      if (interaction.interacting()) {\n        interaction.checkAndPreventDefault(event);\n      }\n    }\n  };\n\n  const onDocIE8 = function onDocIE8 ({ doc, win }, signalName) {\n    const eventMethod = signalName.indexOf('listen') === 0\n      ? events.add : events.remove;\n\n    // For IE's lack of Event#preventDefault\n    eventMethod(doc, 'selectstart', selectFix);\n\n    if (scope.pointerEvents) {\n      eventMethod(doc, 'dblclick', onIE8Dblclick);\n    }\n  };\n\n  scope.signals.on('add-document'   , onDocIE8);\n  scope.signals.on('remove-document', onDocIE8);\n}\n\nmodule.exports = null;\n","const InteractEvent = require('../InteractEvent');\nconst Interaction   = require('../Interaction');\nconst extend        = require('../utils/extend');\n\nconst modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    const { target, element } = interaction;\n    const rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top  = coords.page.y - rect.top;\n\n      interaction.startOffset.right  = rect.right  - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n      if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n    }\n    else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n\n      offsets[modifierName] =\n        modifiers[modifiers.names[i]].setOffset(interaction,\n                                                interactable, element, rect,\n                                                interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    const result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true,\n    };\n    const target = interaction.target;\n    const coords = extend({}, coordsArg);\n\n    let currentStatus;\n\n    for (const modifierName of modifiers.names) {\n      const modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) { continue; }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (const modifierName of modifiers.names) {\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function ({ interaction }, signalName) {\n    modifiers.setOffsets(interaction, signalName === 'action-resume'? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  },\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset      = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets  = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('action-start' , modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function ({ interaction, preEnd, interactingBeforeMove }) {\n  const modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  for (let i = 0; i < modifiers.names.length; i++) {\n    // if the endOnly option is true for any modifier\n    if (modifiers[modifiers.names[i]].shouldDo(interaction.target, interaction.prepared.name, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function ({ iEvent, interaction, page, client, phase, action: actionName }) {\n  const target = interaction.target;\n\n  for (let i = 0; i < modifiers.names.length; i++) {\n    const modifierName = modifiers.names[i];\n    const modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nmodule.exports = modifiers;\n","const modifiers      = require('./index');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst restrict = {\n  defaults: {\n    enabled    : false,\n    endOnly    : false,\n    restriction: null,\n    elementRect: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const restrictOptions = interactable.options[actionName].restrict;\n\n    return (restrictOptions && restrictOptions.enabled\n            && (preEnd || !restrictOptions.endOnly)\n            && (!requireEndOnly || restrictOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    const offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - (rect.width  * elementRect.left);\n      offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n      offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n      offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n    }\n    else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const target    = interaction.target;\n    const restrictOptions  = target && target.options[interaction.prepared.name].restrict;\n    let restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    let rect;\n    let restrictedX;\n    let restrictedY;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentNode(interaction.element);\n      }\n      else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      }\n      else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) { return status; }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    const offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n      restrictedX = Math.max(Math.min(rect.x + rect.width  - offset.right , page.x), rect.x + offset.left);\n      restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top );\n    }\n    else {\n      restrictedX = Math.max(Math.min(rect.right  - offset.right , page.x), rect.left + offset.left);\n      restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top  + offset.top );\n    }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const options = interactable.options[actionName].restrict;\n    const elementRect = options && options.elementRect;\n\n    if (options && options.enabled\n        && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n","const modifiers      = require('./index');\nconst interact       = require('../interact');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const snapOptions = interactable.options[actionName].snap;\n\n    return (snapOptions && snapOptions.enabled\n            && (preEnd || !snapOptions.endOnly)\n            && (!requireEndOnly || snapOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const offsets = [];\n    const origin = utils.getOriginXY(interactable, element);\n    const snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    let snapOffset;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y,\n      };\n    }\n    else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y,\n      };\n    }\n    else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (const { x: relativeX, y: relativeY } of snapOptions.relativePoints) {\n        offsets.push({\n          x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n          y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n        });\n      }\n    }\n    else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    const targets = [];\n    let target;\n    let page;\n    let i;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    }\n    else {\n      const origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    const offsets = interaction.modifierOffsets.snap;\n    let len = snapOptions.targets? snapOptions.targets.length : 0;\n\n    for (const { x: offsetX, y: offsetY } of offsets) {\n      const relativeX = page.x - offsetX;\n      const relativeY = page.y - offsetY;\n\n      for (const snapTarget of snapOptions.targets) {\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        }\n        else {\n          target = snapTarget;\n        }\n\n        if (!target) { continue; }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? (target.x + offsetX) : relativeX,\n          y: utils.isNumber(target.y) ? (target.y + offsetY) : relativeY,\n\n          range: utils.isNumber(target.range)? target.range: snapOptions.range,\n        });\n      }\n    }\n\n    const closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0,\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      const range = target.range;\n      const dx = target.x - page.x;\n      const dy = target.y - page.y;\n      const distance = utils.hypot(dx, dy);\n      let inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n          // is the closest target in range?\n          ? (closest.inRange && range !== Infinity\n          // the pointer is relatively deeper in this target\n          ? distance / range < closest.distance / closest.range\n          // this target has Infinite range and the closest doesn't\n          : (range === Infinity && closest.range !== Infinity)\n          // OR this target is closer that the previous closest\n        || distance < closest.distance)\n          // The other is not in range and the pointer is closer to this target\n          : (!closest.inRange && distance < closest.distance))) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    let snapChanged;\n\n    if (closest.target) {\n      snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    }\n    else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = (snapChanged || (closest.inRange && !status.locked));\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const snapOptions = interactable.options[actionName].snap;\n    const relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled\n        && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range  : status.range,\n        locked : status.locked,\n        x      : status.snappedX,\n        y      : status.snappedY,\n        realX  : status.realX,\n        realY  : status.realY,\n        dx     : status.dx,\n        dy     : status.dy,\n      };\n    }\n  },\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    const limits = grid.limits || {\n      left  : -Infinity,\n      right :  Infinity,\n      top   : -Infinity,\n      bottom:  Infinity,\n    };\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    const gridx = Math.round((x - offsetX) / grid.x);\n    const gridy = Math.round((y - offsetY) / grid.y);\n\n    const newX = Math.max(limits.left, Math.min(limits.right , gridx * grid.x + offsetX));\n    const newY = Math.max(limits.top , Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range,\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n","const scope       = require('../scope');\nconst Interaction = require('../Interaction');\nconst utils       = require('../utils');\nconst browser     = require('../utils/browser');\nconst Eventable   = require('../Eventable');\nconst defaults    = require('../defaultOptions');\nconst signals     = require('../utils/Signals').new();\n\nconst simpleSignals = [ 'down', 'up', 'up', 'cancel' ];\nconst simpleEvents = [ 'down', 'up', 'tap', 'cancel' ];\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopImmediatePropagation () {\n  this.immediatePropagationStopped = this.propagationStopped = true;\n}\n\nfunction stopPropagation () {\n  this.propagationStopped = true;\n}\n\nfunction firePointers (interaction, pointer, event, eventTarget, targets, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  let pointerEvent = {};\n  let i;\n  // for tap events\n  let interval;\n  let createNewDoubleTap;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  }\n  else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault           = preventOriginalDefault;\n    pointerEvent.stopPropagation          = stopPropagation;\n    pointerEvent.stopImmediatePropagation = stopImmediatePropagation;\n    pointerEvent.interaction              = interaction;\n\n    pointerEvent.timeStamp     = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type          = eventType;\n    pointerEvent.pointerId     = utils.getPointerId(pointer);\n    pointerEvent.pointerType   = interaction.mouse? 'mouse' : !browser.supportsPointerEvent? 'touch'\n      : utils.isString(pointer.pointerType)\n        ? pointer.pointerType\n        : [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap'\n                            && interaction.prevTap.target === pointerEvent.target\n                            && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  const signalArg = {\n    pointerEvent,\n    pointer,\n    event,\n    targets,\n  };\n\n  signals.fire('new', signalArg);\n\n  for (i = 0; i < targets.length; i++) {\n    const target = targets[i];\n\n    pointerEvent.currentTarget = target.element;\n\n    for (const prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    target.eventable.fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (createNewDoubleTap) {\n    const doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt   = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  }\n  else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets (interaction, pointer, event, eventTarget, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  const targets = [];\n  const path = utils.getPath(eventTarget);\n  const signalArg = {\n    targets,\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    eventType,\n    path,\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, eventType);\n  }\n}\n\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n  const pointerIndex = (interaction.mouse\n    ? 0\n    : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer)));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n  // copy event to be used in timeout for IE8\n  const eventCopy = browser.isIE8? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction,\n                        browser.isIE8? eventCopy : pointer,\n                        eventCopy,\n                        eventTarget,\n                        'hold');\n\n  }, defaults._holdDuration);\n});\n\nfunction createSignalListener (event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction,\n                        arg.pointer,\n                        arg.event,\n                        arg.eventTarget,\n                        event);\n  };\n}\n\nfor (let i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null;  // the most recent tap event on this interaction\n  interaction.tapTime = 0;     // time of the most recent tap event\n});\n\nutils.merge(Eventable.prototype.types, [\n  'down',\n  'move',\n  'up',\n  'cancel',\n  'tap',\n  'doubletap',\n  'hold',\n]);\n\nmodule.exports = scope.pointerEvents = {\n  firePointers,\n  collectEventTargets,\n  preventOriginalDefault,\n  signals,\n};\n","const pointerEvents = require('./index');\nconst browser       = require('../utils/browser');\nconst isType        = require('../utils/isType');\nconst domUtils      = require('../utils/domUtils');\nconst scope         = require('../scope');\n\npointerEvents.signals.on('collect-targets', function ({ targets, element, eventType }) {\n  function collectSelectors (interactable, selector, context) {\n    const els = browser.useMatchesSelectorPolyfill\n        ? context.querySelectorAll(selector)\n        : undefined;\n\n    const eventable = interactable._iEvents;\n\n    if (eventable[eventType]\n        && isType.isElement(element)\n        && interactable.inContext(element)\n        && domUtils.matchesSelector(element, selector, els)) {\n\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  }\n\n  const interactable = scope.interactables.get(element);\n\n  if (interactable) {\n    const eventable = interactable._iEvents;\n\n    if (eventable[eventType]) {\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  }\n\n  scope.interactables.forEachSelector(collectSelectors);\n});\n","const utils   = require('./utils');\nconst extend  = require('./utils/extend');\nconst events  = require('./utils/events');\nconst signals = require('./utils/Signals').new();\n\nconst scope = {\n  signals,\n  events,\n  utils,\n\n  documents: [],  // all documents being listened to\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) { return false; }\n\n    win = win || scope.getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc, win });\n  },\n\n  removeDocument: function (doc, win) {\n    const index = utils.indexOf(scope.documents, doc);\n\n    win = win || scope.getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win, doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  },\n};\n\nextend(scope, require('./utils/window'));\nextend(scope, require('./utils/domObjects'));\n\nmodule.exports = scope;\n","const { indexOf } = require('./arr');\n\nclass Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (let i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  }\n}\n\nSignals.new = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n","function indexOf (array, target) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains (array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge (target, source) {\n  for (let i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf,\n  contains,\n  merge,\n};\n","const win        = require('./window');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!(('ontouchstart' in win.window) || isType.isFunction(win.window.DocumentTouch)\n                     && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: ('attachEvent' in win.window) && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: (navigator.appName === 'Opera'\n      && browser.supportsTouch\n      && navigator.userAgent.match('Presto')),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n  isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype\n    ? 'matches': 'webkitMatchesSelector' in Element.prototype\n    ? 'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype\n    ? 'mozMatchesSelector': 'oMatchesSelector' in Element.prototype\n    ? 'oMatchesSelector': 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === win.window.MSPointerEvent\n      ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n          out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' }\n      : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n          out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' })\n    : null),\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document? 'mousewheel': 'wheel',\n\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n","const domObjects = {};\nconst win = require('./window').window;\n\nfunction blank () {}\n\ndomObjects.document           = win.document;\ndomObjects.DocumentFragment   = win.DocumentFragment   || blank;\ndomObjects.SVGElement         = win.SVGElement         || blank;\ndomObjects.SVGSVGElement      = win.SVGSVGElement      || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement        = win.HTMLElement        || win.Element;\n\ndomObjects.Event        = win.Event;\ndomObjects.Touch        = win.Touch || blank;\ndomObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent);\n\nmodule.exports = domObjects;\n","const win        = require('./window');\nconst browser    = require('./browser');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) { return element; }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    let parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill\n    ? function (element, selector, elems) {\n      elems = elems || element.parentNode.querySelectorAll(selector);\n\n      for (let i = 0, len = elems.length; i < len; i++) {\n        if (elems[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    let deepestZoneParents = [];\n    let dropzoneParents = [];\n    let dropzone;\n    let deepestZone = elements[0];\n    let index = deepestZone? 0: -1;\n    let parent;\n    let child;\n    let i;\n    let n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement\n          && dropzone instanceof domObjects.SVGElement\n          && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      }\n      else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      const parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n],\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        }\n        else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return (element instanceof domObjects.SVGElementInstance\n      ? element.correspondingUseElement\n      : element);\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n    };\n  },\n\n  getElementClientRect: function (element) {\n    const clientRect = (element instanceof domObjects.SVGElement\n      ? element.getBoundingClientRect()\n      : element.getClientRects()[0]);\n\n    return clientRect && {\n      left  : clientRect.left,\n      right : clientRect.right,\n      top   : clientRect.top,\n      bottom: clientRect.bottom,\n      width : clientRect.width  || clientRect.right  - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    };\n  },\n\n  getElementRect: function (element) {\n    const clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      const scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left   += scroll.x;\n      clientRect.right  += scroll.x;\n      clientRect.top    += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    const path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  },\n};\n\nmodule.exports = domUtils;\n","const arr       = require('./arr');\nconst isType    = require('./isType');\nconst domUtils  = require('./domUtils');\nconst indexOf   = arr.indexOf;\nconst contains  = arr.contains;\nconst getWindow = require('./window').getWindow;\nconst pExtend   = require('./pointerExtend');\n\nconst useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window);\nconst addEvent       = useAttachEvent?  'attachEvent': 'addEventListener';\nconst removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener';\nconst on             = useAttachEvent? 'on': '';\n\nconst elements          = [];\nconst targets           = [];\nconst attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nconst delegatedEvents = {};\n\nconst documents = [];\n\nfunction add (element, type, listener, useCapture) {\n  let elementIndex = indexOf(elements, element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push((useAttachEvent ? {\n      supplied: [],\n      wrapped : [],\n      useCount: [],\n    } : null));\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    let ret;\n\n    if (useAttachEvent) {\n      const { supplied, wrapped, useCount } = attachedListeners[elementIndex];\n      const listenerIndex = indexOf(supplied, listener);\n\n      const wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault           = event.preventDefault           || preventDef;\n          event.stopPropagation          = event.stopPropagation          || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      }\n      else {\n        useCount[listenerIndex]++;\n      }\n    }\n    else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove (element, type, listener, useCapture) {\n  const elementIndex = indexOf(elements, element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  let wrappedListener = listener;\n  let listeners;\n  let listenerIndex;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (let i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate (selector, context, type, listener, useCapture) {\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const fn = listeners[i][0];\n        const useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, useCapture) {\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const eventTarget = (domUtils.getActualElement(event.path\n    ? event.path[0]\n    : event.target));\n  let element = eventTarget;\n\n  useCapture = useCapture? true: false;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef () {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp () {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp () {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners,\n};\n","module.exports = function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n","const { closest, parentNode, getElementRect } = require('./domUtils');\nconst { isElement, isFunction, trySelector }  = require('./isType');\n\nmodule.exports = function (interactable, element) {\n  let origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentNode(element);\n  }\n  else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  }\n  else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin))  {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = ('x' in origin)? origin.x : origin.left;\n  origin.y = ('y' in origin)? origin.y : origin.top;\n\n  return origin;\n};\n","module.exports = (x, y) =>  Math.sqrt(x * x + y * y);\n","const extend = require('./extend');\nconst win    = require('./window');\n\nconst utils = {\n  warnOnce: function (method, message) {\n    let warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    const iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x:  utils._getQBezierValue(position, startX, cpX, endX),\n      y:  utils._getQBezierValue(position, startY, cpY, endY),\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t*(t-2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name  = src.name;\n    dest.axis  = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  extend     : extend,\n  hypot      : require('./hypot'),\n  getOriginXY: require('./getOriginXY'),\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\nmodule.exports = utils;\n","const scope   = require('../scope');\nconst utils   = require('./index');\nconst browser = require('./browser');\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouse', 'hasPointer', 'idle' ],\n\n  search: function (pointer, eventType, eventTarget) {\n    const mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n                        // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                        || pointer.pointerType === 4);\n    const pointerId = utils.getPointerId(pointer);\n    const details = { pointer, pointerId, mouseEvent, eventType, eventTarget };\n\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function ({ mouseEvent, eventType, eventTarget }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions) {\n      let element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume\n          && (interaction.mouse === mouseEvent)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function ({ mouseEvent, eventType }) {\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    let firstNonActive;\n\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (/down/i.test(eventType) && interaction.simulation) { continue; }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction;\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId }) {\n    for (const interaction of scope.interactions) {\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function ({ mouseEvent }) {\n    for (const interaction of scope.interactions) {\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        const target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n        continue;\n      }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nmodule.exports = finder;\n","const win        = require('./window');\nconst isWindow   = require('./isWindow');\nconst domObjects = require('./domObjects');\n\nconst isType = {\n  isElement  : function (o) {\n    if (!o || (typeof o !== 'object')) { return false; }\n\n    const _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element)\n      ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string');\n  },\n\n  isArray    : null,\n\n  isWindow   : function (thing) { return thing === win.window || isWindow(thing); },\n\n  isDocFrag  : function (thing) { return isType.isObject(thing) && thing.nodeType === 11; },\n\n  isObject   : function (thing) { return !!thing && (typeof thing === 'object'); },\n\n  isFunction : function (thing) { return typeof thing === 'function'; },\n\n  isNumber   : function (thing) { return typeof thing === 'number'  ; },\n\n  isBool     : function (thing) { return typeof thing === 'boolean' ; },\n\n  isString   : function (thing) { return typeof thing === 'string'  ; },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) { return false; }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  },\n};\n\nisType.isArray = function (thing) {\n  return (isType.isObject(thing)\n      && (typeof thing.length !== 'undefined')\n      && isType.isFunction(thing.splice));\n};\n\nmodule.exports = isType;\n","module.exports = (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","function pointerExtend (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = module.exports.prefixedPropREs;\n    let deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated) {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n};\n\nmodule.exports = pointerExtend;\n","const hypot         = require('./hypot');\nconst browser       = require('./browser');\nconst dom           = require('./domObjects');\nconst isType        = require('./isType');\nconst pointerExtend = require('./pointerExtend');\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x;\n    targetObj.page.y    = cur.page.y    - prev.page.y;\n    targetObj.client.x  = cur.client.x  - prev.client.x;\n    targetObj.client.y  = cur.client.y  - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    const dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx      = targetObj.page.x / dt;\n    targetObj.page.vy      = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx    = targetObj.client.x / dt;\n    targetObj.client.vy    = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    const pointer = (pointers.length > 1\n                     ? pointerUtils.pointerAverage(pointers)\n                     : pointers[0]);\n\n    const tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp :new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[1][sourceX] - touches[0][sourceX];\n    const dy = touches[1][sourceY] - touches[0][sourceY];\n    const angle = 180 * Math.atan2(dy , dx) / Math.PI;\n\n    return  angle;\n  },\n};\n\nmodule.exports = pointerUtils;\n","const vendors = ['ms', 'moz', 'webkit', 'o'];\nlet lastTime = 0;\nlet request;\nlet cancel;\n\nfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] +'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = setTimeout(function () { callback(currTime + timeToCall); },\n                          timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request,\n  cancel,\n};\n","const win = module.exports;\nconst isWindow = require('./isWindow');\n\nfunction init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nwin.getWindow = function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n"],"sourceRoot":"/source/"}