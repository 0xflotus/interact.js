{"version":3,"sources":["src/header.js","index.js","interact.js","src/Eventable.js","src/InteractEvent.js","src/Interactable.js","src/Interaction.js","src/actions/drag.js","src/actions/drop.js","src/actions/gesture.js","src/actions/index.js","src/actions/resize.js","src/autoScroll.js","src/autoStart/delay.js","src/autoStart/drag.js","src/autoStart/gesture.js","src/autoStart/index.js","src/autoStart/resize.js","src/defaultOptions.js","src/index.js","src/inertia.js","src/interact.js","src/interactablePreventDefault.js","src/legacyBrowsers.js","src/modifiers/index.js","src/modifiers/restrict.js","src/modifiers/snap.js","src/pointerEvents/index.js","src/pointerEvents/interactableTargets.js","src/scope.js","src/utils/Signals.js","src/utils/arr.js","src/utils/browser.js","src/utils/domObjects.js","src/utils/domUtils.js","src/utils/events.js","src/utils/extend.js","src/utils/getOriginXY.js","src/utils/hypot.js","src/utils/index.js","src/utils/interactionFinder.js","src/utils/isType.js","src/utils/isWindow.js","src/utils/pointerExtend.js","src/utils/pointerUtils.js","src/utils/raf.js","src/utils/window.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","interact","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"init","./src/index","./src/utils/window",2,"_classCallCheck","instance","Constructor","TypeError","fireUntilImmediateStopped","event","listeners","len","immediatePropagationStopped","_require","indexOf","Eventable","prototype","fire","undefined","onEvent","type","propagationStopped","on","eventType","listener","push","off","eventList","index","splice","./utils/arr",3,"extend","getOriginXY","defaults","signals","InteractEvent","interaction","action","phase","element","related","target","deltaSource","options","origin","starting","ending","coords","startCoords","curCoords","page","client","x","y","ctrlKey","altKey","shiftKey","metaKey","button","buttons","currentTarget","relatedTarget","t0","downTimes","interactable","signalArg","iEvent","prevEvent","pageX","pageY","clientX","clientY","x0","y0","clientX0","clientY0","timeStamp","dt","pointerDelta","duration","speed","velocityX","vx","velocityY","vy","swipe","getSwipe","angle","Math","atan2","PI","overlap","left","up","right","down","velocity","preventDefault","stopImmediatePropagation","stopPropagation","_ref","dx","dy","./defaultOptions","./utils/Signals","./utils/extend","./utils/getOriginXY",4,"isType","events","actions","scope","getElementRect","nodeContains","_require2","contains","_require3","wheelEvent","interactables","Interactable","_context","document","_iEvents","_window","trySelector","context","getWindow","Node","isElement","_doc","win","addDocument","set","setOnEvents","phases","onAction","isFunction","onstart","onmove","onend","oninertiastart","setPerAction","option","isObject","perAction","enabled","isBool","getRect","isString","querySelector","rectChecker","checker","newValue","inContext","ownerDocument","_onOffMultiple","method","useCapture","search","trim","split","isArray","prop","eventTypes","addDelegate","add","removeDelegate","remove","base","perActions","actionName","methodDict","methodName","_iterator","settingsMethods","_isArray","Array","_i","Symbol","iterator","next","done","value","setting","unset","delegatedEvents","delegated","selectors","contexts","delegateListener","delegateUseCapture","_iterator2","interactions","_isArray2","_i2","_ref2","interacting","stop","indexOfElement","get","forEachSelector","callback","ret","./Eventable","./actions","./scope","./utils/browser","./utils/domUtils","./utils/events","./utils/isType",5,"doOnInteractions","eventTarget","utils","getActualElement","path","curEventTarget","matches","browser","supportsTouch","test","prevTouchTime","Date","getTime","changedTouches","pointer","finder","Interaction","invalidPointer","supportsPointerEvent","mouse","pointerIsDown","pointerType","_updateEventTargets","endAll","end","onDocSignal","signalName","doc","eventMethod","docEvents","methodNames","prepared","name","axis","edges","pointers","pointerIds","downTargets","holdTimers","prevCoords","downEvent","downPointer","_eventTarget","_curEventTarget","pointerWasMoved","_interacting","pointerDown","pointerIndex","updatePointer","setCoords","copyCoords","pointerExtend","start","copyAction","pointerMove","simulation","duplicateMove","hypot","pointerMoveTolerance","duplicate","interactingBeforeMove","setCoordDeltas","doMove","_dontFireMove","pointerUp","getPointerId","clearTimeout","removePointer","currentAction","id","pEventTypes","PointerEvent","move","cancel","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","touchcancel","blur","endAllInteractions","./utils","./utils/interactionFinder",6,"defaultOptions","drag","snap","restrict","inertia","autoScroll","startAxis","lockAxis","dragOptions","getCursor","dragEvent","abs","_ref3","_ref4","draggable","names","merge","../InteractEvent","../Interactable","../Interaction","../defaultOptions","../utils","./index",7,"collectDrops","drops","elements","current","drop","accept","matchesSelector","dropElements","querySelectorAll","currentElement","dropzones","fireActiveDrops","prevElement","activeDrops","setActiveDrops","dragElement","possibleDrops","rects","getDrop","validDrops","dynamicDrop","j","rect","dropCheck","dropIndex","indexOfDeepestElement","dropzone","getDropEvents","pointerEvent","dropEvents","enter","leave","activate","deactivate","tmpl","dropElement","dropTarget","prevDropElement","prevDropTarget","dragLeave","prevDropzone","dragEnter","dragmove","fireDropEvents","draggableElement","dropResult","_ref5","_ref6","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","isNumber","max","min","dropped","dropOverlap","getPageXY","horizontal","vertical","top","bottom","dragRect","cx","width","cy","height","overlapArea","overlapRatio","_ref7","_ref8","../interact","../scope",8,"gesture","gestureEvent","ds","startDistance","prevDistance","distance","startAngle","prevAngle","scale","Infinity","isNaN","gesturable","touches","touchDistance","box","touchBBox","touchAngle","da","prevScale",9,10,"checkResizeEdge","interactableElement","margin","matchesUpTo","defaultMargin","resize","square","preserveAspectRatio","NaN","invert","resizeOptions","resizeEdges","edge","axes","cursors","isIe9OrOlder","xy","topleft","bottomright","topright","bottomleft","cursorKey","edgeNames","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","restricted","previous","delta","deltaRect","invertible","originalEdges","startAspectRatio","swap","resizable","resizeAxes","../utils/browser",11,"raf","isWindow","domUtils","container","isScrolling","prevTime","request","scroll","now","scrollBy","scrollLeft","scrollTop","check","onInteractionMove","innerWidth","innerHeight","getElementClientRect","./Interaction","./utils/raf","./utils/window",12,"autoStart","delayTimer","delay","setTimeout",13,"checkStartAxis","thisAxis","parentNode","setActionDefaults","absX","absY","currentAxis","getDraggable","selector","useMatchesSelectorPolyfill","manualStart","testIgnore","testAllow","getAction","withinInteractionLimit","elementInteractable","selectorInteractable","../actions/drag","../utils/domUtils","../utils/isType",14,"../actions/gesture",15,"ignoreFrom","allowFrom","validateAction","validateSelector","matchElements","match","matchElement","getActionInfo","pushMatches","actionInfo","prepare","styleCursor","documentElement","style","cursor","maxActions","maxPerElement","activeInteractions","targetCount","targetElementCount","maxInteractions","otherAction","perActionDefaults","arg","defaultActionChecker","actionChecker","../actions","../utils/Signals",16,"../actions/resize",17,"resistance","minSpeed","endSpeed","allowResume","smoothEndDuration","_holdDuration",18,"./actions/drop","./autoScroll","./autoStart/delay","./autoStart/drag","./autoStart/gesture","./autoStart/resize","./inertia","./interact","./interactablePreventDefault.js","./legacyBrowsers","./modifiers/restrict","./modifiers/snap","./pointerEvents","./pointerEvents/interactableTargets",19,"calcInertia","status","inertiaOptions","lambda","inertiaDur","log","v0","startEvent","sx","sy","modifiedXe","xe","vx0","modifiedYe","ye","vy0","te","lambda_v0","one_ve_v0","inertiaFrame","updateInertiaCoords","inertiaStatus","progress","exp","quadPoint","getQuadraticCurvePoint","animationFrame","boundInertiaFrame","active","smoothEndFrame","easeOutQuad","boundSmoothEndFrame","smoothEnd","pageUp","upCoords","clientUp","modifiers","vys","apply","resumeEvent","resetStatuses","modifierStatuses","statuses","pointerSpeed","inertiaPossible","modifierResult","setAll","shouldMove","locked","./InteractEvent","./modifiers",20,"globalEvents","isSet","debug","getPointerAverage","pointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","closest","removeDocument","./Interactable",21,"onInteractionEvent","checkAndPreventDefault","nodeName","_arr","eventSignal","dragstart",22,"onIE8Dblclick","iFinder","prevTap","pointerEvents","collectEventTargets","toString","Object","obj","String","replace","isIE8","selectFix","onDocIE8",23,"setOffsets","startOffset","setModifierOffsets","modifierOffsets","offsets","modifierName","setOffset","coordsArg","preEnd","requireEndOnly","result","changed","currentStatus","modifier","shouldDo","reset","modifyCoords","../utils/extend",24,"endOnly","restriction","elementRect","restrictOptions","offset","pageCoords","useStatusXY","restrictedX","restrictedY","modifiedX","modifiedY",25,"range","targets","relativePoints","snapOptions","snapOffset","relativeX","relativeY","realX","realY","offsetX","offsetY","_iterator3","_isArray3","_i3","snapTarget","inRange","snapChanged","snappedX","snappedY","createSnapGrid","grid","limits","gridx","round","gridy","newX","newY",26,"preventOriginalDefault","originalEvent","firePointers","interval","createNewDoubleTap","pointerId","tapTime","props","eventable","doubleTap","getPath","createSignalListener","simpleSignals","simpleEvents","eventCopy","types",27,"collectSelectors","els","../utils/arr",28,"documents","onWindowUnload","./utils/domObjects",29,"Signals","targetListeners","./arr",30,"array","source",31,"domObjects","DocumentTouch","isOperaMobile","navigator","appName","userAgent","isIOS7","platform","appVersion","all","atob","prefixedMatchesSelector","Element","MSPointerEvent","over","out","./domObjects","./isType","./window",32,"blank","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch",33,"parent","child","node","isDocFrag","host","matchesSelectorPolyfill","elems","nodeList","realWindow","deepestZoneParents","dropzoneParents","deepestZone","unshift","ownerSVGElement","parents","lastChild","previousSibling","limit","correspondingUseElement","getScrollXY","relevantWindow","scrollX","scrollY","clientRect","getBoundingClientRect","getClientRects","_scroll","./browser",34,"elementIndex","typeCount","attachedListeners","useAttachEvent","supplied","wrapped","useCount","_attachedListeners$elementIndex","listenerIndex","wrappedListener","srcElement","preventDef","stopProp","stopImmProp","addEvent","removeEvent","hasOwnProperty","matchFound","fn","useCap","fakeEvent","pExtend","returnValue","cancelBubble","arr","_elements","_targets","_attachedListeners","./domUtils","./pointerExtend",35,"dest",36,37,"sqrt",38,"warnOnce","message","warned","console","warn","arguments","_getQBezierValue","p1","p2","p3","iT","startX","startY","cpX","cpY","endX","endY","position","b","c","d","src","./extend","./getOriginXY","./hypot","./pointerUtils",39,"methodOrder","mouseEvent","details","simulationResume","firstNonActive","_iterator4","_isArray4","_i4","hasPointer","_ref9","_iterator5","_isArray5","_i5","idle","_ref10","_iterator6","_isArray6","_i6",40,"nodeType","thing","./isWindow",41,"Window",42,"prefixedPropREs","deprecated","vendor","webkit",43,"dom","pointerUtils","targetObj","prev","cur","isNativePointer","getXY","getClientXY","identifier","tmpXY","getTouchPair","average","screenX","screenY","minX","minY","maxX","maxY","sourceX","sourceY",44,"vendors","lastTime","requestAnimationFrame","currTime","timeToCall",45,"el","createTextNode","wrap","rootNode","defaultView","parentWindow"],"mappings":"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","file":"interact.min.js","sourcesContent":["/**\n * interact.js 1.2.6\n *\n * Copyright (c) 2012-2016 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n}\nelse {\n  module.exports = require('./src/index');\n}\n","/**\n * interact.js 1.2.6\n *\n * Copyright (c) 2012-2016 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n} else {\n  module.exports = require('./src/index');\n}\n\n},{\"./src/index\":18,\"./src/utils/window\":45}],2:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./utils/arr');\n\nvar indexOf = _require.indexOf;\n\nfunction fireUntilImmediateStopped(event, listeners) {\n  for (var i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n    listeners[i](event);\n  }\n}\n\nvar Eventable = (function () {\n  function Eventable() {\n    _classCallCheck(this, Eventable);\n  }\n\n  Eventable.prototype.fire = function fire(event) {\n    var listeners = undefined;\n    var onEvent = 'on' + event.type;\n    var global = this.global;\n\n    // Interactable#on() listeners\n    if (listeners = this[event.type]) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n  };\n\n  Eventable.prototype.on = function on(eventType, listener) {\n    // if this type of event was never bound\n    if (!(eventType in this)) {\n      this[eventType] = [listener];\n    } else {\n      this[eventType].push(listener);\n    }\n  };\n\n  Eventable.prototype.off = function off(eventType, listener) {\n    // if it is an action event type\n    var eventList = this[eventType];\n    var index = eventList ? indexOf(eventList, listener) : -1;\n\n    if (index !== -1) {\n      this[eventType].splice(index, 1);\n    }\n  };\n\n  return Eventable;\n})();\n\nmodule.exports = Eventable;\n\n},{\"./utils/arr\":30}],3:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar extend = require('./utils/extend');\nvar getOriginXY = require('./utils/getOriginXY');\nvar defaults = require('./defaultOptions');\nvar signals = require('./utils/Signals')['new']();\n\nvar InteractEvent = (function () {\n  function InteractEvent(interaction, event, action, phase, element, related) {\n    _classCallCheck(this, InteractEvent);\n\n    var target = interaction.target;\n    var deltaSource = (target && target.options || defaults).deltaSource;\n    var origin = getOriginXY(target, element);\n    var starting = phase === 'start';\n    var ending = phase === 'end';\n    var coords = starting ? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    var page = extend({}, coords.page);\n    var client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    this.shiftKey = event.shiftKey;\n    this.metaKey = event.metaKey;\n    this.button = event.button;\n    this.buttons = event.buttons;\n    this.target = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.t0 = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type = action + (phase || '');\n    this.interaction = interaction;\n    this.interactable = target;\n\n    var signalArg = {\n      interaction: interaction,\n      event: event,\n      action: action,\n      phase: phase,\n      element: element,\n      related: related,\n      page: page,\n      client: client,\n      coords: coords,\n      starting: starting,\n      ending: ending,\n      deltaSource: deltaSource,\n      iEvent: this\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      var prevEvent = interaction.prevEvent;\n\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    } else {\n      this.pageX = page.x;\n      this.pageY = page.y;\n      this.clientX = client.x;\n      this.clientY = client.y;\n    }\n\n    this.x0 = interaction.startCoords.page.x - origin.x;\n    this.y0 = interaction.startCoords.page.y - origin.y;\n    this.clientX0 = interaction.startCoords.client.x - origin.x;\n    this.clientY0 = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt = interaction.pointerDelta.timeStamp;\n    this.duration = this.timeStamp - interaction.downTimes[0];\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  InteractEvent.prototype.getSwipe = function getSwipe() {\n    var interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    var overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    var left = 135 - overlap <= angle && angle < 225 + overlap;\n    var up = 225 - overlap <= angle && angle < 315 + overlap;\n\n    var right = !left && (315 - overlap <= angle || angle < 45 + overlap);\n    var down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up: up,\n      down: down,\n      left: left,\n      right: right,\n      angle: angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY\n      }\n    };\n  };\n\n  InteractEvent.prototype.preventDefault = function preventDefault() {};\n\n  InteractEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  InteractEvent.prototype.stopPropagation = function stopPropagation() {\n    this.propagationStopped = true;\n  };\n\n  return InteractEvent;\n})();\n\nsignals.on('set-delta', function (_ref) {\n  var iEvent = _ref.iEvent;\n  var interaction = _ref.interaction;\n  var starting = _ref.starting;\n  var deltaSource = _ref.deltaSource;\n\n  var prevEvent = starting ? iEvent : interaction.prevEvent;\n\n  if (deltaSource === 'client') {\n    iEvent.dx = iEvent.clientX - prevEvent.clientX;\n    iEvent.dy = iEvent.clientY - prevEvent.clientY;\n  } else {\n    iEvent.dx = iEvent.pageX - prevEvent.pageX;\n    iEvent.dy = iEvent.pageY - prevEvent.pageY;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n\n},{\"./defaultOptions\":17,\"./utils/Signals\":29,\"./utils/extend\":35,\"./utils/getOriginXY\":36}],4:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar isType = require('./utils/isType');\nvar events = require('./utils/events');\nvar extend = require('./utils/extend');\nvar actions = require('./actions');\nvar scope = require('./scope');\nvar Eventable = require('./Eventable');\nvar defaults = require('./defaultOptions');\nvar signals = require('./utils/Signals')['new']();\n\nvar _require = require('./utils/domUtils');\n\nvar getElementRect = _require.getElementRect;\nvar nodeContains = _require.nodeContains;\n\nvar _require2 = require('./utils/arr');\n\nvar indexOf = _require2.indexOf;\nvar contains = _require2.contains;\n\nvar _require3 = require('./utils/browser');\n\nvar wheelEvent = _require3.wheelEvent;\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\n\nvar Interactable = (function () {\n  function Interactable(target, options) {\n    _classCallCheck(this, Interactable);\n\n    this.target = target;\n    this._context = scope.document;\n    this._iEvents = new Eventable();\n\n    var _window = undefined;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      var context = options && options.context;\n\n      _window = context ? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node ? context instanceof _window.Node : isType.isElement(context) || context === _window.document)) {\n\n        this._context = context;\n      }\n    } else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target: target,\n      options: options,\n      interactable: this,\n      win: _window\n    });\n\n    scope.addDocument(this._doc, _window);\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  Interactable.prototype.setOnEvents = function setOnEvents(action, phases) {\n    var onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)) {\n      this._iEvents[onAction + 'start'] = phases.onstart;\n    }\n    if (isType.isFunction(phases.onmove)) {\n      this._iEvents[onAction + 'move'] = phases.onmove;\n    }\n    if (isType.isFunction(phases.onend)) {\n      this._iEvents[onAction + 'end'] = phases.onend;\n    }\n    if (isType.isFunction(phases.oninertiastart)) {\n      this._iEvents[onAction + 'inertiastart'] = phases.oninertiastart;\n    }\n\n    return this;\n  };\n\n  Interactable.prototype.setPerAction = function setPerAction(action, options) {\n    // for all the default per-action options\n    for (var option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false ? false : true;\n          }\n        } else if (isType.isBool(options[option]) && isType.isObject(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        } else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  };\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n\n  Interactable.prototype.getRect = function getRect(element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !isType.isElement(element)) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  };\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n\n  Interactable.prototype.rectChecker = function rectChecker(checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  };\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n\n  Interactable.prototype.origin = function origin(newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    } else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  };\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n\n  Interactable.prototype.deltaSource = function deltaSource(newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  };\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n\n  Interactable.prototype.context = function context() {\n    return this._context;\n  };\n\n  Interactable.prototype.inContext = function inContext(element) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element);\n  };\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n\n  Interactable.prototype.fire = function fire(iEvent) {\n    this._iEvents.fire(iEvent);\n\n    return this;\n  };\n\n  Interactable.prototype._onOffMultiple = function _onOffMultiple(method, eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this[method](eventType[i], listener, useCapture);\n      }\n\n      return true;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  };\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.on = function on(eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('on', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = wheelEvent;\n    }\n\n    if (contains(Interactable.eventTypes, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n        events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n      } else {\n        events.add(this.target, eventType, listener, useCapture);\n      }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.off = function off(eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('off', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(Interactable.eventTypes, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n        events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n      }\n      // remove listener from this Interatable's element\n      else {\n          events.remove(this.target, eventType, listener, useCapture);\n        }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.set = function set(options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, defaults.base);\n\n    var perActions = extend({}, defaults.perAction);\n\n    for (var actionName in actions.methodDict) {\n      var methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (var _iterator = Interactable.settingsMethods, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var setting = _ref;\n\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n\n  Interactable.prototype.unset = function unset() {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (var type in events.delegatedEvents) {\n        var delegated = events.delegatedEvents[type];\n\n        for (var i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts.splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    } else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (var _iterator2 = scope.interactions || [], _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      if (interaction.target === this && interaction.interacting()) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  };\n\n  return Interactable;\n})();\n\nscope.interactables.indexOfElement = function indexOfElement(target, context) {\n  context = context || scope.document;\n\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    if (interactable.target === target && (!isType.isString(target) || interactable._context === context)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet(element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!isType.isString(interactable.target)) {\n      continue;\n    }\n\n    var ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n// all interact.js eventTypes\nInteractable.eventTypes = scope.eventTypes = [];\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = ['deltaSource', 'origin', 'preventDefault', 'rectChecker'];\n\nmodule.exports = Interactable;\n\n},{\"./Eventable\":2,\"./actions\":9,\"./defaultOptions\":17,\"./scope\":28,\"./utils/Signals\":29,\"./utils/arr\":30,\"./utils/browser\":31,\"./utils/domUtils\":33,\"./utils/events\":34,\"./utils/extend\":35,\"./utils/isType\":40}],5:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar scope = require('./scope');\nvar utils = require('./utils');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar finder = require('./utils/interactionFinder');\nvar signals = require('./utils/Signals')['new']();\n\nvar listeners = {};\nvar methodNames = ['pointerDown', 'pointerMove', 'pointerUp', 'updatePointer', 'removePointer'];\n\n// for ignoring browser's simulated mouse events\nvar prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nvar Interaction = (function () {\n  function Interaction() {\n    _classCallCheck(this, Interaction);\n\n    this.target = null; // current interactable being interacted with\n    this.element = null; // the target element of the interactable\n\n    this.prepared = { // action that's ready to be fired on next move event\n      name: null,\n      axis: null,\n      edges: null\n    };\n\n    // keep track of added pointers\n    this.pointers = [];\n    this.pointerIds = [];\n    this.downTargets = [];\n    this.downTimes = [];\n    this.holdTimers = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0\n    };\n\n    this.downEvent = null; // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null; // previous action event\n\n    this.pointerIsDown = false;\n    this.pointerWasMoved = false;\n    this._interacting = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  Interaction.prototype.pointerDown = function pointerDown(pointer, event, eventTarget) {\n    var pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords, this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = this.curCoords.timeStamp;\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n    }\n\n    signals.fire('down', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      pointerIndex: pointerIndex,\n      interaction: this\n    });\n  };\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action  (object)  The action to be performed - drag, resize, etc.\n   - target  (Interactable) The Interactable to target\n   - element (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n\n  Interaction.prototype.start = function start(action, target, element) {\n    if (this.interacting() || !this.pointerIsDown || this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target = target;\n    this.element = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent\n    });\n  };\n\n  Interaction.prototype.pointerMove = function pointerMove(pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    var duplicateMove = this.curCoords.page.x === this.prevCoords.page.x && this.curCoords.page.y === this.prevCoords.page.y && this.curCoords.client.x === this.prevCoords.client.x && this.curCoords.client.y === this.prevCoords.client.y;\n\n    var dx = undefined;\n    var dy = undefined;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    var signalArg = {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      dx: dx,\n      dy: dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting()\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  };\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.doMove = function doMove(signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  };\n\n  // End interact move events and stop auto-scroll unless simulation is running\n\n  Interaction.prototype.pointerUp = function pointerUp(pointer, event, eventTarget, curEventTarget) {\n    var pointerIndex = this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire(/cancel$/i.test(event.type) ? 'cancel' : 'up', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      curEventTarget: curEventTarget,\n      interaction: this\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n      this.removePointer(pointer);\n    }\n  };\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.end = function end(event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event: event,\n        interaction: this\n      });\n    }\n\n    this.stop();\n  };\n\n  Interaction.prototype.currentAction = function currentAction() {\n    return this._interacting ? this.prepared.name : null;\n  };\n\n  Interaction.prototype.interacting = function interacting() {\n    return this._interacting;\n  };\n\n  Interaction.prototype.stop = function stop() {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  };\n\n  Interaction.prototype.updatePointer = function updatePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  };\n\n  Interaction.prototype.removePointer = function removePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.pointers.splice(index, 1);\n    this.pointerIds.splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes.splice(index, 1);\n    this.holdTimers.splice(index, 1);\n  };\n\n  Interaction.prototype._updateEventTargets = function _updateEventTargets(target, currentTarget) {\n    this._eventTarget = target;\n    this._curEventTarget = currentTarget;\n  };\n\n  return Interaction;\n})();\n\nfor (var i = 0, len = methodNames.length; i < len; i++) {\n  var method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions(method) {\n  return function (event) {\n    var eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    var curEventTarget = utils.getActualElement(event.currentTarget);\n    var matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (var i = 0; i < event.changedTouches.length; i++) {\n        var pointer = event.changedTouches[i];\n        var interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    } else {\n      var invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (var i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || new Date().getTime() - prevTouchTime < 500;\n      }\n\n      if (!invalidPointer) {\n        var interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = /mouse/i.test(event.pointerType || event.type)\n          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n           || event.pointerType === 4;\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (var _iterator = matches, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref[0];\n      var interaction = _ref[1];\n\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  };\n}\n\nfunction endAll(event) {\n  for (var i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].end(event);\n  }\n}\n\nvar docEvents = {/* 'eventType': listenerFunc */};\nvar pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down] = listeners.pointerDown;\n  docEvents[pEventTypes.move] = listeners.pointerMove;\n  docEvents[pEventTypes.up] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n} else {\n  docEvents.mousedown = listeners.pointerDown;\n  docEvents.mousemove = listeners.pointerMove;\n  docEvents.mouseup = listeners.pointerUp;\n\n  docEvents.touchstart = listeners.pointerDown;\n  docEvents.touchmove = listeners.pointerMove;\n  docEvents.touchend = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal(_ref2, signalName) {\n  var doc = _ref2.doc;\n\n  var eventMethod = signalName.indexOf('add') === 0 ? events.add : events.remove;\n\n  // delegate event listener\n  for (var eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (var eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document', onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n\n},{\"./scope\":28,\"./utils\":38,\"./utils/Signals\":29,\"./utils/browser\":31,\"./utils/events\":34,\"./utils/interactionFinder\":39}],6:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drag = {\n  defaults: {\n    enabled: false,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    startAxis: 'xy',\n    lockAxis: 'xy'\n  },\n\n  checker: function (pointer, event, interactable) {\n    var dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled ? { name: 'drag', axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis } : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy = 0;\n  } else if (axis === 'y') {\n    interaction.curCoords.page.x = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx = 0;\n  }\n});\n\nInteraction.signals.on('action-move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  } else if (axis === 'y') {\n    dragEvent.pageX = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var event = _ref4.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false ? false : true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Interactable.eventTypes, ['dragstart', 'dragmove', 'draginertiastart', 'draginertiaresume', 'dragend']);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../utils\":38,\"./index\":9}],7:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar scope = require('../scope');\nvar interact = require('../interact');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drop = {\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer'\n  }\n};\n\nvar dynamicDrop = false;\n\nInteraction.signals.on('action-start', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements = [];\n  interaction.activeDrops.rects = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  var dragEvent = interaction.prevEvent;\n  var dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var iEvent = _ref3.iEvent;\n  var event = _ref3.event;\n\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return;\n  }\n\n  var draggableElement = interaction.element;\n  var dragEvent = iEvent;\n  var dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function (_ref6) {\n  var interaction = _ref6.interaction;\n\n  interaction.activeDrops.dropzones = interaction.activeDrops.elements = interaction.activeDrops.rects = interaction.dropEvents = null;\n});\n\nfunction collectDrops(interaction, element) {\n  var drops = [];\n  var elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var _iterator = scope.interactables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var current = _ref;\n\n    if (!current.options.drop.enabled) {\n      continue;\n    }\n\n    var accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if (utils.isElement(accept) && accept !== element || utils.isString(accept) && !utils.matchesSelector(element, accept)) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    var dropElements = utils.isString(current.target) ? current._context.querySelectorAll(current.target) : [current.target];\n\n    for (var i = 0; i < dropElements.length; i++) {\n      var currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements: elements,\n    dropzones: drops\n  };\n}\n\nfunction fireActiveDrops(interaction, event) {\n  var prevElement = undefined;\n\n  // loop through all active dropzones and trigger event\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    var current = interaction.activeDrops.dropzones[i];\n    var currentElement = interaction.activeDrops.elements[i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops(interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  var possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements = possibleDrops.elements;\n  interaction.activeDrops.rects = [];\n\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] = interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop(dragEvent, event, dragElement) {\n  var interaction = dragEvent.interaction;\n  var validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    var current = interaction.activeDrops.dropzones[j];\n    var currentElement = interaction.activeDrops.elements[j];\n    var rect = interaction.activeDrops.rects[j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect) ? currentElement : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  var dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element: interaction.activeDrops.elements[dropIndex] || null\n  };\n}\n\nfunction getDropEvents(interaction, pointerEvent, dragEvent) {\n  var dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null\n  };\n\n  var tmpl = {\n    dragEvent: dragEvent,\n    interaction: interaction,\n    target: interaction.dropElement,\n    dropzone: interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable: dragEvent.interactable,\n    timeStamp: dragEvent.timeStamp\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave = dropEvents.leave.target = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent: dragEvent,\n        interaction: interaction,\n        target: interaction.dropElement,\n        dropzone: interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable: dragEvent.interactable,\n        timeStamp: dragEvent.timeStamp,\n        type: 'dragenter'\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove: dragEvent,\n      type: 'dropmove'\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents(interaction, dropEvents) {\n  if (dropEvents.leave) {\n    interaction.prevDropTarget.fire(dropEvents.leave);\n  }\n  if (dropEvents.enter) {\n    interaction.dropTarget.fire(dropEvents.enter);\n  }\n  if (dropEvents.drop) {\n    interaction.dropTarget.fire(dropEvents.drop);\n  }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false ? false : true;\n\n    if (utils.isFunction(options.ondrop)) {\n      this._iEvents.ondrop = options.ondrop;\n    }\n    if (utils.isFunction(options.ondropactivate)) {\n      this._iEvents.ondropactivate = options.ondropactivate;\n    }\n    if (utils.isFunction(options.ondropdeactivate)) {\n      this._iEvents.ondropdeactivate = options.ondropdeactivate;\n    }\n    if (utils.isFunction(options.ondragenter)) {\n      this._iEvents.ondragenter = options.ondragenter;\n    }\n    if (utils.isFunction(options.ondragleave)) {\n      this._iEvents.ondragleave = options.ondragleave;\n    }\n    if (utils.isFunction(options.ondropmove)) {\n      this._iEvents.ondropmove = options.ondropmove;\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    } else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  var dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return this.options.drop.checker ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement) : false;\n  }\n\n  var dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    var origin = utils.getOriginXY(draggable, draggableElement);\n    var page = utils.getPageXY(dragEvent);\n    var horizontal = undefined;\n    var vertical = undefined;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = page.x > rect.left && page.x < rect.right;\n    vertical = page.y > rect.top && page.y < rect.bottom;\n\n    dropped = horizontal && vertical;\n  }\n\n  var dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    var cx = dragRect.left + dragRect.width / 2;\n    var cy = dragRect.top + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    var overlapArea = Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top));\n\n    var overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function (_ref7) {\n  var interactable = _ref7.interactable;\n\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement = null; // the element at the time of checking\n  interaction.prevDropTarget = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [], // the dropzones that are mentioned below\n    elements: [], // elements of dropzones that accept the target draggable\n    rects: [] };\n});\n\n// the rects of the elements mentioned above\nInteraction.signals.on('stop', function (_ref8) {\n  var interaction = _ref8.interaction;\n\n  interaction.dropTarget = interaction.dropElement = interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n    //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Interactable.eventTypes, ['dragenter', 'dragleave', 'dropactivate', 'dropdeactivate', 'dropmove', 'drop']);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../interact\":20,\"../scope\":28,\"../utils\":38,\"./index\":9}],8:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar gesture = {\n  defaults: {\n    enabled: false,\n    restrict: null\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = undefined;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity && gestureEvent.scale !== null && gestureEvent.scale !== undefined && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false ? false : true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n  var action = _ref4.action;\n  var event = _ref4.event;\n  var starting = _ref4.starting;\n  var ending = _ref4.ending;\n  var deltaSource = _ref4.deltaSource;\n\n  if (action !== 'gesture') {\n    return;\n  }\n\n  var pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = 1;\n    iEvent.ds = 0;\n    iEvent.angle = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da = 0;\n  } else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box = interaction.prevEvent.box;\n    iEvent.scale = interaction.prevEvent.scale;\n    iEvent.ds = iEvent.scale - 1;\n    iEvent.angle = interaction.prevEvent.angle;\n    iEvent.da = iEvent.angle - interaction.gesture.startAngle;\n  } else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0, // distance between two touches of touchStart\n    prevDistance: 0,\n    distance: 0,\n\n    scale: 1, // gesture.distance / gesture.startDistance\n\n    startAngle: 0, // angle of line joining two touches\n    prevAngle: 0 };\n});\n\n// angle of the previous gesture event\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Interactable.eventTypes, ['gesturestart', 'gesturemove', 'gestureend']);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../utils\":38,\"./index\":9}],9:[function(require,module,exports){\nvar actions = {\n  names: [],\n  methodDict: {}\n};\n\nmodule.exports = actions;\n\n},{}],10:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nvar defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10;\n\nvar resize = {\n  defaults: {\n    enabled: false,\n\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none'\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) {\n      return null;\n    }\n\n    var page = utils.extend({}, interaction.curCoords.page);\n    var options = interactable.options;\n\n    if (options.resize.enabled) {\n      var resizeOptions = options.resize;\n      var resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (var edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge, resizeOptions.edges[edge], page, interaction._eventTarget, element, rect, resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges\n          };\n        }\n      } else {\n        var right = options.resize.axis !== 'y' && page.x > rect.right - defaultMargin;\n        var bottom = options.resize.axis !== 'x' && page.y > rect.bottom - defaultMargin;\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : '')\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: browser.isIe9OrOlder ? {\n    x: 'e-resize',\n    y: 's-resize',\n    xy: 'se-resize',\n\n    top: 'n-resize',\n    left: 'w-resize',\n    bottom: 's-resize',\n    right: 'e-resize',\n    topleft: 'se-resize',\n    bottomright: 'se-resize',\n    topright: 'ne-resize',\n    bottomleft: 'ne-resize'\n  } : {\n    x: 'ew-resize',\n    y: 'ns-resize',\n    xy: 'nwse-resize',\n\n    top: 'ns-resize',\n    left: 'ew-resize',\n    bottom: 'ns-resize',\n    right: 'ew-resize',\n    topleft: 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright: 'nesw-resize',\n    bottomleft: 'nesw-resize'\n  },\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    } else if (action.edges) {\n      var cursorKey = '';\n      var edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (var i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    var startRect = interaction.target.getRect(interaction.element);\n    var resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      var linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top = linkedEdges.top || linkedEdges.left && !linkedEdges.bottom;\n      linkedEdges.left = linkedEdges.left || linkedEdges.top && !linkedEdges.right;\n      linkedEdges.bottom = linkedEdges.bottom || linkedEdges.right && !linkedEdges.top;\n      linkedEdges.right = linkedEdges.right || linkedEdges.bottom && !linkedEdges.left;\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    } else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start: startRect,\n      current: utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous: utils.extend({}, startRect),\n      delta: {\n        left: 0, right: 0, width: 0,\n        top: 0, bottom: 0, height: 0\n      }\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  var resizeOptions = interaction.target.options.resize;\n  var invert = resizeOptions.invert;\n  var invertible = invert === 'reposition' || invert === 'negate';\n\n  var edges = interaction.prepared.edges;\n\n  if (edges) {\n    var start = interaction.resizeRects.start;\n    var current = interaction.resizeRects.current;\n    var restricted = interaction.resizeRects.restricted;\n    var delta = interaction.resizeRects.delta;\n    var previous = utils.extend(interaction.resizeRects.previous, restricted);\n    var originalEdges = edges;\n\n    var dx = resizeEvent.dx;\n    var dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      var startAspectRatio = resizeOptions.preserveAspectRatio ? interaction.resizeStartAspectRatio : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n        dy = -dx / startAspectRatio;\n      } else if (originalEdges.left || originalEdges.right) {\n        dy = dx / startAspectRatio;\n      } else if (originalEdges.top || originalEdges.bottom) {\n        dx = dy * startAspectRatio;\n      }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top) {\n      current.top += dy;\n    }\n    if (edges.bottom) {\n      current.bottom += dy;\n    }\n    if (edges.left) {\n      current.left += dx;\n    }\n    if (edges.right) {\n      current.right += dx;\n    }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        var swap = undefined;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    } else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left = Math.min(current.left, start.right);\n      restricted.right = Math.max(current.right, start.left);\n    }\n\n    restricted.width = restricted.right - restricted.left;\n    restricted.height = restricted.bottom - restricted.top;\n\n    for (var edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false ? false : true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    } else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    } else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge(name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) {\n    return false;\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    var width = utils.isNumber(rect.width) ? rect.width : rect.right - rect.left;\n    var height = utils.isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right';\n      } else if (name === 'right') {\n        name = 'left';\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom';\n      } else if (name === 'bottom') {\n        name = 'top';\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n    }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n  ? value === element\n  // otherwise check if element matches value as selector\n  : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n  var action = _ref4.action;\n\n  if (action !== 'resize' || !interaction.resizeAxes) {\n    return;\n  }\n\n  var options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    } else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  } else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    } else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Interactable.eventTypes, ['resizestart', 'resizemove', 'resizeinertiastart', 'resizeinertiaresume', 'resizeend']);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../utils\":38,\"../utils/browser\":31,\"./index\":9}],11:[function(require,module,exports){\nvar raf = require('./utils/raf');\nvar getWindow = require('./utils/window').getWindow;\nvar isWindow = require('./utils/isType').isWindow;\nvar domUtils = require('./utils/domUtils');\nvar Interaction = require('./Interaction');\nvar defaultOptions = require('./defaultOptions');\n\nvar autoScroll = {\n  defaults: {\n    enabled: false,\n    container: null, // the item that is scrolled (Window or HTMLElement)\n    margin: 60,\n    speed: 300 },\n\n  // the scroll speed in pixels per second\n  interaction: null,\n  i: null, // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(autoScroll.interaction.element);\n    var now = new Date().getTime();\n    // change in time in seconds\n    var dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    var s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      } else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    var options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function (_ref) {\n    var interaction = _ref.interaction;\n    var pointer = _ref.pointer;\n\n    if (!(interaction.interacting() && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    var top = undefined;\n    var right = undefined;\n    var bottom = undefined;\n    var left = undefined;\n\n    var options = interaction.target.options[interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left = pointer.clientX < autoScroll.margin;\n      top = pointer.clientY < autoScroll.margin;\n      right = pointer.clientX > container.innerWidth - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    } else {\n      var rect = domUtils.getElementClientRect(container);\n\n      left = pointer.clientX < rect.left + autoScroll.margin;\n      top = pointer.clientY < rect.top + autoScroll.margin;\n      right = pointer.clientX > rect.right - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0;\n    autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  }\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n\n},{\"./Interaction\":5,\"./defaultOptions\":17,\"./utils/domUtils\":33,\"./utils/isType\":40,\"./utils/raf\":44,\"./utils/window\":45}],12:[function(require,module,exports){\nvar autoStart = require('./index');\nvar Interaction = require('../Interaction');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function (_ref) {\n  var interaction = _ref.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(function () {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nInteraction.signals.on('move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var duplicate = _ref2.duplicate;\n\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\n// prevent regular down->move autoStart\nautoStart.signals.on('before-start', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n});\n\n},{\"../Interaction\":5,\"./index\":15}],13:[function(require,module,exports){\nvar autoStart = require('./index');\nvar scope = require('../scope');\nvar browser = require('../utils/browser');\n\nvar _require = require('../utils/isType');\n\nvar isElement = _require.isElement;\n\nvar _require2 = require('../utils/domUtils');\n\nvar matchesSelector = _require2.matchesSelector;\nvar parentNode = _require2.parentNode;\n\nrequire('./index').setActionDefaults(require('../actions/drag'));\n\nautoStart.signals.on('before-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var eventTarget = _ref.eventTarget;\n  var dx = _ref.dx;\n  var dy = _ref.dy;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  // check if a drag is in the correct axis\n  var absX = Math.abs(dx);\n  var absY = Math.abs(dy);\n  var dragOptions = interaction.target.options.drag;\n  var startAxis = dragOptions.startAxis;\n  var currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start' ? currentAxis : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n      (function () {\n\n        var element = eventTarget;\n\n        var getDraggable = function (interactable, selector, context) {\n          var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n          if (interactable === interaction.target) {\n            return;\n          }\n\n          var action = null;\n\n          if (interactable.inContext(eventTarget) && !interactable.options.drag.manualStart && !autoStart.testIgnore(interactable, element, eventTarget) && autoStart.testAllow(interactable, element, eventTarget) && matchesSelector(element, selector, elements)) {\n\n            action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, interactable) && autoStart.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n            return interactable;\n          }\n        };\n\n        var action = null;\n\n        // check all interactables\n        while (isElement(element)) {\n          var elementInteractable = scope.interactables.get(element);\n\n          if (elementInteractable && elementInteractable !== interaction.target && !elementInteractable.options.drag.manualStart) {\n\n            action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, elementInteractable)) {\n\n            interaction.prepared.name = 'drag';\n            interaction.target = elementInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          var selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n          if (selectorInteractable) {\n            interaction.prepared.name = 'drag';\n            interaction.target = selectorInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          element = parentNode(element);\n        }\n      })();\n    }\n  }\n});\n\nfunction checkStartAxis(startAxis, interactable) {\n  if (!interactable) {\n    return false;\n  }\n\n  var thisAxis = interactable.options.drag.startAxis;\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis;\n}\n\n},{\"../actions/drag\":6,\"../scope\":28,\"../utils/browser\":31,\"../utils/domUtils\":33,\"../utils/isType\":40,\"./index\":15}],14:[function(require,module,exports){\nrequire('./index').setActionDefaults(require('../actions/gesture'));\n\n},{\"../actions/gesture\":8,\"./index\":15}],15:[function(require,module,exports){\nvar interact = require('../interact');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar actions = require('../actions');\nvar defaultOptions = require('../defaultOptions');\nvar browser = require('../utils/browser');\nvar scope = require('../scope');\nvar utils = require('../utils');\nvar signals = require('../utils/Signals')['new']();\n\nvar autoStart = {\n  signals: signals,\n  testIgnore: testIgnore,\n  testAllow: testAllow,\n  withinInteractionLimit: withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  perActionDefaults: {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1\n  },\n  setActionDefaults: function (action) {\n    utils.extend(action.defaults, autoStart.perActionDefaults);\n  }\n};\n\nfunction testIgnore(interactable, interactableElement, element) {\n  var ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  } else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n}\n\nfunction testAllow(interactable, interactableElement, element) {\n  var allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) {\n    return true;\n  }\n\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  } else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n}\n\n// set cursor style on mousedown\nInteraction.signals.on('down', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n\n  if (interaction.interacting()) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\n// set cursor style on mousemove\nInteraction.signals.on('move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n\n  if (!interaction.mouse || interaction.pointerIsDown) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  var interaction = arg.interaction;\n  var event = arg.event;\n\n  if (!interaction.pointerIsDown || interaction.interacting() || !interaction.pointerWasMoved || !interaction.prepared.name) {\n    return;\n  }\n\n  signals.fire('before-start', arg);\n\n  var target = interaction.target;\n\n  if (interaction.prepared.name && target) {\n    // check manualStart and interaction limit\n    if (target.options[interaction.prepared.name].manualStart || !withinInteractionLimit(target, interaction.element, interaction.prepared)) {\n      interaction.stop(event);\n    } else {\n      interaction.start(interaction.prepared, target, interaction.element);\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction(action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector(interaction, pointer, event, matches, matchElements) {\n  for (var i = 0, len = matches.length; i < len; i++) {\n    var match = matches[i];\n    var matchElement = matchElements[i];\n    var action = validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action: action,\n        target: match,\n        element: matchElement\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo(interaction, pointer, event, eventTarget) {\n  var matches = [];\n  var matchElements = [];\n\n  var element = eventTarget;\n  var action = null;\n\n  function pushMatches(interactable, selector, context) {\n    var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    if (interactable.inContext(element) && !module.exports.testIgnore(interactable, element, eventTarget) && module.exports.testAllow(interactable, element, eventTarget) && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    var elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable && (action = validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable)) && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element: element,\n        action: action,\n        target: elementInteractable\n      };\n    } else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      var actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare(interaction, _ref4) {\n  var action = _ref4.action;\n  var target = _ref4.target;\n  var element = _ref4.element;\n\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    var cursor = action ? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  var action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\n/*\\\n * Interactable.ignoreFrom\n [ method ]\n *\n * If the target of the `mousedown`, `pointerdown` or `touchstart`\n * event or any of it's parents match the given CSS selector or\n * Element, no drag/resize/gesture is started.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n = (string | Element | object) The current ignoreFrom value or this Interactable\n **\n | interact(element, { ignoreFrom: document.getElementById('no-action') });\n | // or\n | interact(element).ignoreFrom('input, textarea, a');\n\\*/\nInteractable.prototype.ignoreFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {\n    // CSS selector to match event.target\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {\n    // specific element\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  return this.options.ignoreFrom;\n};\n\n/*\\\n * Interactable.allowFrom\n [ method ]\n *\n * A drag/resize/gesture is started only If the target of the\n * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n * parents match the given CSS selector or Element.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n = (string | Element | object) The current allowFrom value or this Interactable\n **\n | interact(element, { allowFrom: document.getElementById('drag-handle') });\n | // or\n | interact(element).allowFrom('.handle');\n\\*/\nInteractable.prototype.allowFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {\n    // CSS selector to match event.target\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {\n    // specific element\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  return this.options.allowFrom;\n};\n\nInteraction.signals.on('stop', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  var target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  var rect = this.getRect(element);\n  var action = null;\n\n  for (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var actionName = _ref;\n\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nfunction withinInteractionLimit(interactable, element, action) {\n  var options = interactable.options;\n  var maxActions = options[action.name].max;\n  var maxPerElement = options[action.name].maxPerElement;\n  var activeInteractions = 0;\n  var targetCount = 0;\n  var targetElementCount = 0;\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStart.maxInteractions)) {\n    return;\n  }\n\n  for (var i = 0, len = scope.interactions.length; i < len; i++) {\n    var interaction = scope.interactions[i];\n    var otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) {\n      continue;\n    }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) {\n      continue;\n    }\n\n    targetCount += otherAction === action.name | 0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.perActionDefaults);\n\nmodule.exports = autoStart;\n\n},{\"../Interactable\":4,\"../Interaction\":5,\"../actions\":9,\"../defaultOptions\":17,\"../interact\":20,\"../scope\":28,\"../utils\":38,\"../utils/Signals\":29,\"../utils/browser\":31}],16:[function(require,module,exports){\nrequire('./index').setActionDefaults(require('../actions/resize'));\n\n},{\"../actions/resize\":10,\"./index\":15}],17:[function(require,module,exports){\nmodule.exports = {\n  base: {\n    accept: null,\n    preventDefault: 'auto',\n    origin: { x: 0, y: 0 },\n    deltaSource: 'page',\n    allowFrom: null\n  },\n\n  perAction: {\n    inertia: {\n      enabled: false,\n      resistance: 10, // the lambda in exponential decay\n      minSpeed: 100, // target speed must be above this for inertia to start\n      endSpeed: 10, // the speed at which inertia is slow enough to stop\n      allowResume: true, // allow resuming an action in inertia phase\n      smoothEndDuration: 300 }\n  },\n\n  // animate to snap/restrict endOnly if there's no inertia\n  _holdDuration: 600\n};\n\n},{}],18:[function(require,module,exports){\n/* browser entry point */\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\nrequire('./pointerEvents/interactableTargets');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// delay\nrequire('./autoStart/delay');\n\n// actions\nrequire('./autoStart/gesture');\nrequire('./autoStart/resize');\nrequire('./autoStart/drag');\n\nrequire('./actions/drop');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n\n},{\"./actions/drop\":7,\"./autoScroll\":11,\"./autoStart/delay\":12,\"./autoStart/drag\":13,\"./autoStart/gesture\":14,\"./autoStart/resize\":16,\"./inertia\":19,\"./interact\":20,\"./interactablePreventDefault.js\":21,\"./legacyBrowsers\":22,\"./modifiers/restrict\":24,\"./modifiers/snap\":25,\"./pointerEvents\":26,\"./pointerEvents/interactableTargets\":27}],19:[function(require,module,exports){\nvar InteractEvent = require('./InteractEvent');\nvar Interaction = require('./Interaction');\nvar modifiers = require('./modifiers');\nvar utils = require('./utils');\nvar animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active: false,\n    smoothEnd: false,\n    allowResume: false,\n\n    startEvent: null,\n    upCoords: {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i: null\n  };\n\n  interaction.boundInertiaFrame = function () {\n    return inertiaFrame.apply(interaction);\n  };\n  interaction.boundSmoothEndFrame = function () {\n    return smoothEndFrame.apply(interaction);\n  };\n});\n\nInteraction.signals.on('down', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n  var pointer = _ref.pointer;\n  var eventTarget = _ref.eventTarget;\n\n  var status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    var element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        var signalArg = { interaction: interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume', signalArg);\n\n        // fire a reume event\n        var resumeEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiaresume', interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n\n  var status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) {\n    return;\n  }\n\n  var target = interaction.target;\n  var options = target && target.options;\n  var inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  var now = new Date().getTime();\n  var statuses = {};\n  var page = utils.extend({}, interaction.curCoords.page);\n  var pointerSpeed = interaction.pointerDelta.client.speed;\n  var inertiaPossible = false;\n  var inertia = false;\n  var smoothEnd = false;\n  var modifierResult = undefined;\n\n  // check if inertia should be started\n  inertiaPossible = inertiaOptions && inertiaOptions.enabled && interaction.prepared.name !== 'gesture' && event !== status.startEvent;\n\n  inertia = inertiaPossible && now - interaction.curCoords.timeStamp < 50 && pointerSpeed > inertiaOptions.minSpeed && pointerSpeed > inertiaOptions.endSpeed;\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) {\n    return;\n  }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  } else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n\n  interaction.removePointer(pointer);\n});\n\nInteraction.signals.on('stop-active', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  var status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia(interaction, status) {\n  var inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  var lambda = inertiaOptions.resistance;\n  var inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame() {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  var status = this.inertiaStatus;\n  var options = this.target.options[this.prepared.name].inertia;\n  var lambda = options.resistance;\n  var t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    var progress = 1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    } else {\n      var quadPoint = utils.getQuadraticCurvePoint(0, 0, status.xe, status.ye, status.modifiedXe, status.modifiedYe, progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  } else {\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame() {\n  updateInertiaCoords(this);\n\n  var status = this.inertiaStatus;\n  var t = new Date().getTime() - status.t0;\n  var duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  } else {\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd = status.active = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords(interaction) {\n  var status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) {\n    return;\n  }\n\n  var pageUp = status.upCoords.page;\n  var clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [{\n    pageX: pageUp.x + status.sx,\n    pageY: pageUp.y + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy\n  }]);\n}\n\n},{\"./InteractEvent\":3,\"./Interaction\":5,\"./modifiers\":23,\"./utils\":38,\"./utils/raf\":44}],20:[function(require,module,exports){\nvar browser = require('./utils/browser');\nvar events = require('./utils/events');\nvar utils = require('./utils');\nvar scope = require('./scope');\nvar Interactable = require('./Interactable');\nvar Interaction = require('./Interaction');\n\nvar globalEvents = {};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact('#draggable').draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // ...\n |     });\n\\*/\nfunction interact(element, options) {\n  var interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable._iEvents.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator = type, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var eventType = _ref;\n\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Interactable.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    } else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n      events.add(scope.document, type, listener, useCapture);\n    }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator2 = type, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var eventType = _ref2;\n\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Interactable.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  } else {\n    var index = undefined;\n\n    if (type in globalEvents && (index = utils.indexOf(globalEvents[type], listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage = utils.pointerAverage;\ninteract.getTouchBBox = utils.touchBBox;\ninteract.getTouchDistance = utils.touchDistance;\ninteract.getTouchAngle = utils.touchAngle;\n\ninteract.getElementRect = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector = utils.matchesSelector;\ninteract.closest = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (var i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n\n},{\"./Interactable\":4,\"./Interaction\":5,\"./scope\":28,\"./utils\":38,\"./utils/browser\":31,\"./utils/events\":34}],21:[function(require,module,exports){\nvar Interactable = require('./Interactable');\nvar Interaction = require('./Interaction');\nvar scope = require('./scope');\nvar isType = require('./utils/isType');\n\nvar _require = require('./utils/domUtils');\n\nvar nodeContains = _require.nodeContains;\n\n/*\\\n * Interactable.preventDefault\n [ method ]\n *\n * Returns or sets whether to prevent the browser's default behaviour\n * in response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n - newValue (string) #optional `true`, `false` or `'auto'`\n = (string | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (isType.isBool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  var setting = this.options.preventDefault;\n\n  if (setting === 'never') {\n    return;\n  }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on input elements\n  if (/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent(_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nvar _arr = ['down', 'move', 'up', 'cancel'];\nfor (var _i = 0; _i < _arr.length; _i++) {\n  var eventSignal = _arr[_i];\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag(event) {\n  for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i2 >= _iterator.length) break;\n      _ref = _iterator[_i2++];\n    } else {\n      _i2 = _iterator.next();\n      if (_i2.done) break;\n      _ref = _i2.value;\n    }\n\n    var interaction = _ref;\n\n    if (interaction.element && (interaction.element === event.target || nodeContains(interaction.element, event.target))) {\n\n      interaction.target.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n\n},{\"./Interactable\":4,\"./Interaction\":5,\"./scope\":28,\"./utils/domUtils\":33,\"./utils/isType\":40}],22:[function(require,module,exports){\nvar scope = require('./scope');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar iFinder = require('./utils/interactionFinder');\n\nvar toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick(event) {\n  var interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) {\n    return;\n  }\n\n  if (interaction.prevTap && event.clientX === interaction.prevTap.clientX && event.clientY === interaction.prevTap.clientY && event.target === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes[0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  (function () {\n    var selectFix = function (event) {\n      for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var interaction = _ref;\n\n        if (interaction.interacting()) {\n          interaction.target.checkAndPreventDefault(event);\n        }\n      }\n    };\n\n    var onDocIE8 = function onDocIE8(_ref2, signalName) {\n      var doc = _ref2.doc;\n      var win = _ref2.win;\n\n      var eventMethod = signalName.indexOf('listen') === 0 ? events.add : events.remove;\n\n      // For IE's lack of Event#preventDefault\n      eventMethod(doc, 'selectstart', selectFix);\n\n      if (scope.pointerEvents) {\n        eventMethod(doc, 'dblclick', onIE8Dblclick);\n      }\n    };\n\n    scope.signals.on('add-document', onDocIE8);\n    scope.signals.on('remove-document', onDocIE8);\n  })();\n}\n\nmodule.exports = null;\n\n},{\"./scope\":28,\"./utils/browser\":31,\"./utils/events\":34,\"./utils/interactionFinder\":39}],23:[function(require,module,exports){\nvar InteractEvent = require('../InteractEvent');\nvar Interaction = require('../Interaction');\nvar extend = require('../utils/extend');\n\nvar modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    var target = interaction.target;\n    var element = interaction.element;\n\n    var rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top = coords.page.y - rect.top;\n\n      interaction.startOffset.right = rect.right - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width' in rect)) {\n        rect.width = rect.right - rect.left;\n      }\n      if (!('height' in rect)) {\n        rect.height = rect.bottom - rect.top;\n      }\n    } else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (var i = 0; i < modifiers.names.length; i++) {\n      var modifierName = modifiers.names[i];\n\n      offsets[modifierName] = modifiers[modifiers.names[i]].setOffset(interaction, interactable, element, rect, interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    var result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true\n    };\n    var target = interaction.target;\n    var coords = extend({}, coordsArg);\n\n    var currentStatus = undefined;\n\n    for (var _iterator = modifiers.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var modifierName = _ref;\n\n      var modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) {\n        continue;\n      }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (var _iterator2 = modifiers.names, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var modifierName = _ref2;\n\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function (_ref3, signalName) {\n    var interaction = _ref3.interaction;\n\n    modifiers.setOffsets(interaction, signalName === 'action-resume' ? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  }\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('action-start', modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var preEnd = _ref4.preEnd;\n  var interactingBeforeMove = _ref4.interactingBeforeMove;\n\n  var modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n  var event = _ref5.event;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    // if the endOnly option is true for any modifier\n    if (modifiers[modifiers.names[i]].shouldDo(interaction.target, interaction.prepared.name, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event: event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function (_ref6) {\n  var iEvent = _ref6.iEvent;\n  var interaction = _ref6.interaction;\n  var page = _ref6.page;\n  var client = _ref6.client;\n  var phase = _ref6.phase;\n  var actionName = _ref6.action;\n\n  var target = interaction.target;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    var modifierName = modifiers.names[i];\n    var modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nmodule.exports = modifiers;\n\n},{\"../InteractEvent\":3,\"../Interaction\":5,\"../utils/extend\":35}],24:[function(require,module,exports){\nvar modifiers = require('./index');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar restrict = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    restriction: null,\n    elementRect: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var restrictOptions = interactable.options[actionName].restrict;\n\n    return restrictOptions && restrictOptions.enabled && (preEnd || !restrictOptions.endOnly) && (!requireEndOnly || restrictOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    var offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - rect.width * elementRect.left;\n      offset.top = startOffset.top - rect.height * elementRect.top;\n\n      offset.right = startOffset.right - rect.width * (1 - elementRect.right);\n      offset.bottom = startOffset.bottom - rect.height * (1 - elementRect.bottom);\n    } else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var target = interaction.target;\n    var restrictOptions = target && target.options[interaction.prepared.name].restrict;\n    var restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    var page = status.useStatusXY ? { x: status.x, y: status.y } : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    var rect = undefined;\n    var restrictedX = undefined;\n    var restrictedY = undefined;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentNode(interaction.element);\n      } else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      } else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) {\n        return status;\n      }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    var offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n        restrictedX = Math.max(Math.min(rect.x + rect.width - offset.right, page.x), rect.x + offset.left);\n        restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top);\n      } else {\n        restrictedX = Math.max(Math.min(rect.right - offset.right, page.x), rect.left + offset.left);\n        restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top + offset.top);\n      }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var options = interactable.options[actionName].restrict;\n    var elementRect = options && options.elementRect;\n\n    if (options && options.enabled && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy\n        };\n      }\n    }\n  }\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n\n},{\"../defaultOptions\":17,\"../utils\":38,\"./index\":23}],25:[function(require,module,exports){\nvar modifiers = require('./index');\nvar interact = require('../interact');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range: Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    var snapOptions = interactable.options[actionName].snap;\n\n    return snapOptions && snapOptions.enabled && (preEnd || !snapOptions.endOnly) && (!requireEndOnly || snapOptions.endOnly);\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var offsets = [];\n    var origin = utils.getOriginXY(interactable, element);\n    var snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    var snapOffset = undefined;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y\n      };\n    } else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y\n      };\n    } else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (var _iterator = snapOptions.relativePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var relativeX = _ref.x;\n        var relativeY = _ref.y;\n\n        offsets.push({\n          x: startOffset.left - rect.width * relativeX + snapOffset.x,\n          y: startOffset.top - rect.height * relativeY + snapOffset.y\n        });\n      }\n    } else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    var targets = [];\n    var target = undefined;\n    var page = undefined;\n    var i = undefined;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    } else {\n      var origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    var offsets = interaction.modifierOffsets.snap;\n    var len = snapOptions.targets ? snapOptions.targets.length : 0;\n\n    for (var _iterator2 = offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var offsetX = _ref2.x;\n      var offsetY = _ref2.y;\n\n      var relativeX = page.x - offsetX;\n      var relativeY = page.y - offsetY;\n\n      for (var _iterator3 = snapOptions.targets, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var snapTarget = _ref3;\n\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        } else {\n          target = snapTarget;\n        }\n\n        if (!target) {\n          continue;\n        }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? target.x + offsetX : relativeX,\n          y: utils.isNumber(target.y) ? target.y + offsetY : relativeY,\n\n          range: utils.isNumber(target.range) ? target.range : snapOptions.range\n        });\n      }\n    }\n\n    var closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      var range = target.range;\n      var dx = target.x - page.x;\n      var dy = target.y - page.y;\n      var distance = utils.hypot(dx, dy);\n      var inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n      // is the closest target in range?\n      ? closest.inRange && range !== Infinity\n      // the pointer is relatively deeper in this target\n      ? distance / range < closest.distance / closest.range\n      // this target has Infinite range and the closest doesn't\n      : range === Infinity && closest.range !== Infinity ||\n      // OR this target is closer that the previous closest\n      distance < closest.distance :\n      // The other is not in range and the pointer is closer to this target\n      !closest.inRange && distance < closest.distance)) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    var snapChanged = undefined;\n\n    if (closest.target) {\n      snapChanged = status.snappedX !== closest.target.x || status.snappedY !== closest.target.y;\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    } else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = snapChanged || closest.inRange && !status.locked;\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var snapOptions = interactable.options[actionName].snap;\n    var relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range: status.range,\n        locked: status.locked,\n        x: status.snappedX,\n        y: status.snappedY,\n        realX: status.realX,\n        realY: status.realY,\n        dx: status.dx,\n        dy: status.dy\n      };\n    }\n  }\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    var limits = grid.limits || {\n      left: -Infinity,\n      right: Infinity,\n      top: -Infinity,\n      bottom: Infinity\n    };\n    var offsetX = 0;\n    var offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    var gridx = Math.round((x - offsetX) / grid.x);\n    var gridy = Math.round((y - offsetY) / grid.y);\n\n    var newX = Math.max(limits.left, Math.min(limits.right, gridx * grid.x + offsetX));\n    var newY = Math.max(limits.top, Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n\n},{\"../defaultOptions\":17,\"../interact\":20,\"../utils\":38,\"./index\":23}],26:[function(require,module,exports){\nvar scope = require('../scope');\nvar Interaction = require('../Interaction');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar defaults = require('../defaultOptions');\nvar signals = require('../utils/Signals')['new']();\n\nvar simpleSignals = ['down', 'up', 'up', 'cancel'];\nvar simpleEvents = ['down', 'up', 'tap', 'cancel'];\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopImmediatePropagation() {\n  this.immediatePropagationStopped = this.propagationStopped = true;\n}\n\nfunction stopPropagation() {\n  this.propagationStopped = true;\n}\n\nfunction firePointers(interaction, pointer, event, eventTarget, targets, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  var pointerEvent = {};\n  var i = undefined;\n  // for tap events\n  var interval = undefined;\n  var createNewDoubleTap = undefined;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  } else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault = preventOriginalDefault;\n    pointerEvent.stopPropagation = stopPropagation;\n    pointerEvent.stopImmediatePropagation = stopImmediatePropagation;\n    pointerEvent.interaction = interaction;\n\n    pointerEvent.timeStamp = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type = eventType;\n    pointerEvent.pointerId = utils.getPointerId(pointer);\n    pointerEvent.pointerType = interaction.mouse ? 'mouse' : !browser.supportsPointerEvent ? 'touch' : utils.isString(pointer.pointerType) ? pointer.pointerType : [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap' && interaction.prevTap.target === pointerEvent.target && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  var signalArg = {\n    pointerEvent: pointerEvent,\n    pointer: pointer,\n    event: event,\n    targets: targets\n  };\n\n  signals.fire('new', signalArg);\n\n  for (i = 0; i < targets.length; i++) {\n    var target = targets[i];\n\n    pointerEvent.currentTarget = target.element;\n\n    for (var prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    target.eventable.fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped || pointerEvent.propagationStopped && i + 1 < targets.length && targets[i + 1].element !== pointerEvent.currentTarget) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (createNewDoubleTap) {\n    var doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  } else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets(interaction, pointer, event, eventTarget, eventType) {\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n  // or if the pointerup target is different to the pointerdown target\n   || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  var targets = [];\n  var path = utils.getPath(eventTarget);\n  var signalArg = {\n    targets: targets,\n    interaction: interaction,\n    pointer: pointer,\n    event: event,\n    eventTarget: eventTarget,\n    eventType: eventType,\n    path: path,\n    element: null\n  };\n\n  for (var _iterator = path, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var element = _ref;\n\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, eventType);\n  }\n}\n\nInteraction.signals.on('move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n  var duplicateMove = _ref2.duplicateMove;\n\n  var pointerIndex = interaction.mouse ? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n  var pointerIndex = _ref3.pointerIndex;\n\n  // copy event to be used in timeout for IE8\n  var eventCopy = browser.isIE8 ? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction, browser.isIE8 ? eventCopy : pointer, eventCopy, eventTarget, 'hold');\n  }, defaults._holdDuration);\n});\n\nfunction createSignalListener(event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction, arg.pointer, arg.event, arg.eventTarget, event);\n  };\n}\n\nfor (var i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null; // the most recent tap event on this interaction\n  interaction.tapTime = 0; // time of the most recent tap event\n});\n\nmodule.exports = scope.pointerEvents = {\n  firePointers: firePointers,\n  collectEventTargets: collectEventTargets,\n  preventOriginalDefault: preventOriginalDefault,\n  signals: signals,\n  types: ['down', 'move', 'up', 'cancel', 'tap', 'doubletap', 'hold']\n};\n\n},{\"../Interaction\":5,\"../defaultOptions\":17,\"../scope\":28,\"../utils\":38,\"../utils/Signals\":29,\"../utils/browser\":31}],27:[function(require,module,exports){\nvar pointerEvents = require('./index');\nvar Interactable = require('../Interactable');\nvar browser = require('../utils/browser');\nvar isType = require('../utils/isType');\nvar domUtils = require('../utils/domUtils');\nvar scope = require('../scope');\n\nvar _require = require('../utils/arr');\n\nvar merge = _require.merge;\n\npointerEvents.signals.on('collect-targets', function (_ref) {\n  var targets = _ref.targets;\n  var element = _ref.element;\n  var eventType = _ref.eventType;\n\n  function collectSelectors(interactable, selector, context) {\n    var els = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    var eventable = interactable._iEvents;\n\n    if (eventable[eventType] && isType.isElement(element) && interactable.inContext(element) && domUtils.matchesSelector(element, selector, els)) {\n\n      targets.push({\n        element: element,\n        eventable: eventable,\n        props: { interactable: interactable }\n      });\n    }\n  }\n\n  var interactable = scope.interactables.get(element);\n\n  if (interactable) {\n    var eventable = interactable._iEvents;\n\n    if (eventable[eventType]) {\n      targets.push({\n        element: element,\n        eventable: eventable,\n        props: { interactable: interactable }\n      });\n    }\n  }\n\n  scope.interactables.forEachSelector(collectSelectors);\n});\n\nmerge(Interactable.eventTypes, pointerEvents.types);\n\n},{\"../Interactable\":4,\"../scope\":28,\"../utils/arr\":30,\"../utils/browser\":31,\"../utils/domUtils\":33,\"../utils/isType\":40,\"./index\":26}],28:[function(require,module,exports){\nvar utils = require('./utils');\nvar extend = require('./utils/extend');\nvar events = require('./utils/events');\nvar signals = require('./utils/Signals')['new']();\n\nvar scope = {\n  signals: signals,\n  events: events,\n  utils: utils,\n\n  documents: [], // all documents being listened to\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) {\n      return false;\n    }\n\n    win = win || scope.getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc: doc, win: win });\n  },\n\n  removeDocument: function (doc, win) {\n    var index = utils.indexOf(scope.documents, doc);\n\n    win = win || scope.getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win: win, doc: doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  }\n};\n\nextend(scope, require('./utils/window'));\nextend(scope, require('./utils/domObjects'));\n\nmodule.exports = scope;\n\n},{\"./utils\":38,\"./utils/Signals\":29,\"./utils/domObjects\":32,\"./utils/events\":34,\"./utils/extend\":35,\"./utils/window\":45}],29:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./arr');\n\nvar indexOf = _require.indexOf;\n\nvar Signals = (function () {\n  function Signals() {\n    _classCallCheck(this, Signals);\n\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  Signals.prototype.on = function on(name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  };\n\n  Signals.prototype.off = function off(name, listener) {\n    if (!this.listeners[name]) {\n      return;\n    }\n\n    var index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  };\n\n  Signals.prototype.fire = function fire(name, arg) {\n    var targetListeners = this.listeners[name];\n\n    if (!targetListeners) {\n      return;\n    }\n\n    for (var i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  };\n\n  return Signals;\n})();\n\nSignals['new'] = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n\n},{\"./arr\":30}],30:[function(require,module,exports){\nfunction indexOf(array, target) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains(array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge(target, source) {\n  for (var i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf: indexOf,\n  contains: contains,\n  merge: merge\n};\n\n},{}],31:[function(require,module,exports){\nvar win = require('./window');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!('ontouchstart' in win.window || isType.isFunction(win.window.DocumentTouch) && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: 'attachEvent' in win.window && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: navigator.appName === 'Opera' && browser.supportsTouch && navigator.userAgent.match('Presto'),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion),\n\n  isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype ? 'matches' : 'webkitMatchesSelector' in Element.prototype ? 'webkitMatchesSelector' : 'mozMatchesSelector' in Element.prototype ? 'mozMatchesSelector' : 'oMatchesSelector' in Element.prototype ? 'oMatchesSelector' : 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: domObjects.PointerEvent ? domObjects.PointerEvent === win.window.MSPointerEvent ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n    out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' } : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n    out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' } : null,\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n\n},{\"./domObjects\":32,\"./isType\":40,\"./window\":45}],32:[function(require,module,exports){\nvar domObjects = {};\nvar win = require('./window').window;\n\nfunction blank() {}\n\ndomObjects.document = win.document;\ndomObjects.DocumentFragment = win.DocumentFragment || blank;\ndomObjects.SVGElement = win.SVGElement || blank;\ndomObjects.SVGSVGElement = win.SVGSVGElement || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement = win.HTMLElement || win.Element;\n\ndomObjects.Event = win.Event;\ndomObjects.Touch = win.Touch || blank;\ndomObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent;\n\nmodule.exports = domObjects;\n\n},{\"./window\":45}],33:[function(require,module,exports){\nvar win = require('./window');\nvar browser = require('./browser');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return element;\n      }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    var parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill ? function (element, selector, elems) {\n    elems = elems || element.parentNode.querySelectorAll(selector);\n\n    for (var i = 0, len = elems.length; i < len; i++) {\n      if (elems[i] === element) {\n        return true;\n      }\n    }\n\n    return false;\n  } : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    var deepestZoneParents = [];\n    var dropzoneParents = [];\n    var dropzone = undefined;\n    var deepestZone = elements[0];\n    var index = deepestZone ? 0 : -1;\n    var parent = undefined;\n    var child = undefined;\n    var i = undefined;\n    var n = undefined;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n          deepestZone = dropzone;\n          index = i;\n          continue;\n        }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement && dropzone instanceof domObjects.SVGElement && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      } else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      var parents = [dropzoneParents[n - 1], dropzoneParents[n], deepestZoneParents[n]];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        } else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return element instanceof domObjects.SVGElementInstance ? element.correspondingUseElement : element;\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop\n    };\n  },\n\n  getElementClientRect: function (element) {\n    var clientRect = element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0];\n\n    return clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top\n    };\n  },\n\n  getElementRect: function (element) {\n    var clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      var _scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left += _scroll.x;\n      clientRect.right += _scroll.x;\n      clientRect.top += _scroll.y;\n      clientRect.bottom += _scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    var path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  }\n};\n\nmodule.exports = domUtils;\n\n},{\"./browser\":31,\"./domObjects\":32,\"./isType\":40,\"./window\":45}],34:[function(require,module,exports){\nvar arr = require('./arr');\nvar isType = require('./isType');\nvar domUtils = require('./domUtils');\nvar indexOf = arr.indexOf;\nvar contains = arr.contains;\nvar getWindow = require('./window').getWindow;\nvar pExtend = require('./pointerExtend');\n\nvar useAttachEvent = 'attachEvent' in window && !('addEventListener' in window);\nvar addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener';\nvar removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener';\nvar on = useAttachEvent ? 'on' : '';\n\nvar elements = [];\nvar targets = [];\nvar attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nvar delegatedEvents = {};\n\nvar documents = [];\n\nfunction add(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push(useAttachEvent ? {\n      supplied: [],\n      wrapped: [],\n      useCount: []\n    } : null);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    var ret = undefined;\n\n    if (useAttachEvent) {\n      var _attachedListeners$elementIndex = attachedListeners[elementIndex];\n      var supplied = _attachedListeners$elementIndex.supplied;\n      var wrapped = _attachedListeners$elementIndex.wrapped;\n      var useCount = _attachedListeners$elementIndex.useCount;\n\n      var listenerIndex = indexOf(supplied, listener);\n\n      var wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault = event.preventDefault || preventDef;\n          event.stopPropagation = event.stopPropagation || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      } else {\n        useCount[listenerIndex]++;\n      }\n    } else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  var wrappedListener = listener;\n  var listeners = undefined;\n  var listenerIndex = undefined;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    var len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (var i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    } else {\n      for (var i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate(selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts: [],\n      listeners: []\n    };\n\n    // add delegate listener functions\n    for (var i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  var delegated = delegatedEvents[type];\n  var index = undefined;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts.push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate(selector, context, type, listener, useCapture) {\n  var delegated = delegatedEvents[type];\n  var matchFound = false;\n  var index = undefined;\n\n  if (!delegated) {\n    return;\n  }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n\n      var listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (var i = listeners.length - 1; i >= 0; i--) {\n        var fn = listeners[i][0];\n        var useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts.splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) {\n        break;\n      }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener(event, useCapture) {\n  var fakeEvent = {};\n  var delegated = delegatedEvents[event.type];\n  var eventTarget = domUtils.getActualElement(event.path ? event.path[0] : event.target);\n  var element = eventTarget;\n\n  useCapture = useCapture ? true : false;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (var i = 0; i < delegated.selectors.length; i++) {\n      var selector = delegated.selectors[i];\n      var context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector) && domUtils.nodeContains(context, eventTarget) && domUtils.nodeContains(context, element)) {\n\n        var listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (var j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture(event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef() {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp() {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp() {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove,\n\n  addDelegate: addDelegate,\n  removeDelegate: removeDelegate,\n\n  delegateListener: delegateListener,\n  delegateUseCapture: delegateUseCapture,\n  delegatedEvents: delegatedEvents,\n  documents: documents,\n\n  useAttachEvent: useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners\n};\n\n},{\"./arr\":30,\"./domUtils\":33,\"./isType\":40,\"./pointerExtend\":42,\"./window\":45}],35:[function(require,module,exports){\nmodule.exports = function extend(dest, source) {\n  for (var prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n\n},{}],36:[function(require,module,exports){\nvar _require = require('./domUtils');\n\nvar closest = _require.closest;\nvar parentNode = _require.parentNode;\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./isType');\n\nvar isElement = _require2.isElement;\nvar isFunction = _require2.isFunction;\nvar trySelector = _require2.trySelector;\n\nmodule.exports = function (interactable, element) {\n  var origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentNode(element);\n  } else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  } else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin)) {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = 'x' in origin ? origin.x : origin.left;\n  origin.y = 'y' in origin ? origin.y : origin.top;\n\n  return origin;\n};\n\n},{\"./domUtils\":33,\"./isType\":40}],37:[function(require,module,exports){\nmodule.exports = function (x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n\n},{}],38:[function(require,module,exports){\nvar extend = require('./extend');\nvar win = require('./window');\n\nvar utils = {\n  warnOnce: function (method, message) {\n    var warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    var iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x: utils._getQBezierValue(position, startX, cpX, endX),\n      y: utils._getQBezierValue(position, startY, cpY, endY)\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t * (t - 2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name = src.name;\n    dest.axis = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  extend: extend,\n  hypot: require('./hypot'),\n  getOriginXY: require('./getOriginXY')\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\nmodule.exports = utils;\n\n},{\"./arr\":30,\"./domUtils\":33,\"./extend\":35,\"./getOriginXY\":36,\"./hypot\":37,\"./isType\":40,\"./pointerUtils\":43,\"./window\":45}],39:[function(require,module,exports){\nvar scope = require('../scope');\nvar utils = require('./index');\nvar browser = require('./browser');\n\nvar finder = {\n  methodOrder: ['simulationResume', 'mouse', 'hasPointer', 'idle'],\n\n  search: function (pointer, eventType, eventTarget) {\n    var mouseEvent = /mouse/i.test(pointer.pointerType || eventType)\n    // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n     || pointer.pointerType === 4;\n    var pointerId = utils.getPointerId(pointer);\n    var details = { pointer: pointer, pointerId: pointerId, mouseEvent: mouseEvent, eventType: eventType, eventTarget: eventTarget };\n\n    for (var _iterator = finder.methodOrder, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var method = _ref;\n\n      var interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function (_ref7) {\n    var mouseEvent = _ref7.mouseEvent;\n    var eventType = _ref7.eventType;\n    var eventTarget = _ref7.eventTarget;\n\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (var _iterator2 = scope.interactions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      var element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume && interaction.mouse === mouseEvent) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function (_ref8) {\n    var pointerId = _ref8.pointerId;\n    var mouseEvent = _ref8.mouseEvent;\n    var eventType = _ref8.eventType;\n\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    var firstNonActive = undefined;\n\n    for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !utils.contains(interaction.pointerIds, pointerId)) {\n          continue;\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n            firstNonActive = interaction;\n          }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (var _iterator4 = scope.interactions, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var interaction = _ref4;\n\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function (_ref9) {\n    var pointerId = _ref9.pointerId;\n\n    for (var _iterator5 = scope.interactions, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var interaction = _ref5;\n\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function (_ref10) {\n    var mouseEvent = _ref10.mouseEvent;\n\n    for (var _iterator6 = scope.interactions, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var interaction = _ref6;\n\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        var target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n          continue;\n        }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  }\n};\n\nmodule.exports = finder;\n\n},{\"../scope\":28,\"./browser\":31,\"./index\":38}],40:[function(require,module,exports){\nvar win = require('./window');\nvar isWindow = require('./isWindow');\nvar domObjects = require('./domObjects');\n\nvar isType = {\n  isElement: function (o) {\n    if (!o || typeof o !== 'object') {\n      return false;\n    }\n\n    var _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element) ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  },\n\n  isArray: null,\n\n  isWindow: function (thing) {\n    return thing === win.window || isWindow(thing);\n  },\n\n  isDocFrag: function (thing) {\n    return isType.isObject(thing) && thing.nodeType === 11;\n  },\n\n  isObject: function (thing) {\n    return !!thing && typeof thing === 'object';\n  },\n\n  isFunction: function (thing) {\n    return typeof thing === 'function';\n  },\n\n  isNumber: function (thing) {\n    return typeof thing === 'number';\n  },\n\n  isBool: function (thing) {\n    return typeof thing === 'boolean';\n  },\n\n  isString: function (thing) {\n    return typeof thing === 'string';\n  },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) {\n      return false;\n    }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  }\n};\n\nisType.isArray = function (thing) {\n  return isType.isObject(thing) && typeof thing.length !== 'undefined' && isType.isFunction(thing.splice);\n};\n\nmodule.exports = isType;\n\n},{\"./domObjects\":32,\"./isWindow\":41,\"./window\":45}],41:[function(require,module,exports){\nmodule.exports = function (thing) {\n  return !!(thing && thing.Window) && thing instanceof thing.Window;\n};\n\n},{}],42:[function(require,module,exports){\nfunction pointerExtend(dest, source) {\n  for (var prop in source) {\n    var prefixedPropREs = module.exports.prefixedPropREs;\n    var deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (var vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated) {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n};\n\nmodule.exports = pointerExtend;\n\n},{}],43:[function(require,module,exports){\nvar hypot = require('./hypot');\nvar browser = require('./browser');\nvar dom = require('./domObjects');\nvar isType = require('./isType');\nvar pointerExtend = require('./pointerExtend');\n\nvar pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x = cur.page.x - prev.page.x;\n    targetObj.page.y = cur.page.y - prev.page.y;\n    targetObj.client.x = cur.client.x - prev.client.x;\n    targetObj.client.y = cur.client.y - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx = targetObj.page.x / dt;\n    targetObj.page.vy = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx = targetObj.client.x / dt;\n    targetObj.client.vy = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function (pointer) {\n    return pointer instanceof dom.Event || pointer instanceof dom.Touch;\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    } else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    } else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    var pointer = pointers.length > 1 ? pointerUtils.pointerAverage(pointers) : pointers[0];\n\n    var tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp : new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    var touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n        if (event.type === 'touchend') {\n          if (event.touches.length === 1) {\n            touches[0] = event.touches[0];\n            touches[1] = event.changedTouches[0];\n          } else if (event.touches.length === 0) {\n            touches[0] = event.changedTouches[0];\n            touches[1] = event.changedTouches[1];\n          }\n        } else {\n          touches[0] = event.touches[0];\n          touches[1] = event.touches[1];\n        }\n      }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    var average = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    };\n\n    for (var _iterator = pointers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref;\n\n      for (var prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (var prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    var touches = pointerUtils.getTouchPair(event);\n    var minX = Math.min(touches[0].pageX, touches[1].pageX);\n    var minY = Math.min(touches[0].pageY, touches[1].pageY);\n    var maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    var maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n\n    var dx = touches[0][sourceX] - touches[1][sourceX];\n    var dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n    var dx = touches[1][sourceX] - touches[0][sourceX];\n    var dy = touches[1][sourceY] - touches[0][sourceY];\n    var angle = 180 * Math.atan2(dy, dx) / Math.PI;\n\n    return angle;\n  }\n};\n\nmodule.exports = pointerUtils;\n\n},{\"./browser\":31,\"./domObjects\":32,\"./hypot\":37,\"./isType\":40,\"./pointerExtend\":42}],44:[function(require,module,exports){\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nvar lastTime = 0;\nvar request = undefined;\nvar cancel = undefined;\n\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = setTimeout(function () {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request: request,\n  cancel: cancel\n};\n\n},{}],45:[function(require,module,exports){\nvar win = module.exports;\nvar isWindow = require('./isWindow');\n\nfunction init(window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  var el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window = undefined;\n  win.realWindow = undefined;\n} else {\n  init(window);\n}\n\nwin.getWindow = function getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var rootNode = node.ownerDocument || node;\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n\n},{\"./isWindow\":41}]},{},[1])(1)\n});\n\n","const { indexOf } = require('./utils/arr');\n\nfunction fireUntilImmediateStopped (event, listeners) {\n  for (let i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n    listeners[i](event);\n  }\n}\n\nclass Eventable {\n  fire (event) {\n    let listeners;\n    const onEvent = 'on' + event.type;\n    const global = this.global;\n\n    // Interactable#on() listeners\n    if ((listeners = this[event.type])) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners);\n    }\n  }\n\n  on (eventType, listener) {\n    // if this type of event was never bound\n    if (!(eventType in this)) {\n      this[eventType] = [listener];\n    }\n    else {\n      this[eventType].push(listener);\n    }\n  }\n\n  off (eventType, listener) {\n    // if it is an action event type\n    const eventList = this[eventType];\n    const index     = eventList? indexOf(eventList, listener) : -1;\n\n    if (index !== -1) {\n      this[eventType].splice(index, 1);\n    }\n  }\n}\n\nmodule.exports = Eventable;\n","const extend      = require('./utils/extend');\nconst getOriginXY = require('./utils/getOriginXY');\nconst defaults    = require('./defaultOptions');\nconst signals     = require('./utils/Signals').new();\n\nclass InteractEvent {\n  constructor (interaction, event, action, phase, element, related) {\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || defaults).deltaSource;\n    const origin      = getOriginXY(target, element);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const coords      = starting? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    const page   = extend({}, coords.page);\n    const client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.t0            = interaction.downTimes[interaction.downTimes.length - 1];\n    this.type          = action + (phase || '');\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    const signalArg = {\n      interaction,\n      event,\n      action,\n      phase,\n      element,\n      related,\n      page,\n      client,\n      coords,\n      starting,\n      ending,\n      deltaSource,\n      iEvent: this,\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      const prevEvent = interaction.prevEvent;\n\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    }\n    else {\n      this.pageX     = page.x;\n      this.pageY     = page.y;\n      this.clientX   = client.x;\n      this.clientY   = client.y;\n    }\n\n    this.x0        = interaction.startCoords.page.x - origin.x;\n    this.y0        = interaction.startCoords.page.y - origin.y;\n    this.clientX0  = interaction.startCoords.client.x - origin.x;\n    this.clientY0  = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt        = interaction.pointerDelta.timeStamp;\n    this.duration  = this.timeStamp - interaction.downTimes[0];\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = (ending || phase === 'inertiastart')? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  getSwipe () {\n    const interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600\n        || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    const overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap;\n    const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    };\n  }\n\n  preventDefault () {}\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nsignals.on('set-delta', function ({ iEvent, interaction, starting, deltaSource }) {\n  const prevEvent = starting? iEvent : interaction.prevEvent;\n\n  if (deltaSource === 'client') {\n    iEvent.dx = iEvent.clientX - prevEvent.clientX;\n    iEvent.dy = iEvent.clientY - prevEvent.clientY;\n  }\n  else {\n    iEvent.dx = iEvent.pageX - prevEvent.pageX;\n    iEvent.dy = iEvent.pageY - prevEvent.pageY;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n","const isType    = require('./utils/isType');\nconst events    = require('./utils/events');\nconst extend    = require('./utils/extend');\nconst actions   = require('./actions');\nconst scope     = require('./scope');\nconst Eventable = require('./Eventable');\nconst defaults  = require('./defaultOptions');\nconst signals   = require('./utils/Signals').new();\n\nconst { getElementRect, nodeContains } = require('./utils/domUtils');\nconst { indexOf, contains }            = require('./utils/arr');\nconst { wheelEvent }                   = require('./utils/browser');\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\nclass Interactable {\n  constructor (target, options) {\n    this.target   = target;\n    this._context = scope.document;\n    this._iEvents = new Eventable();\n\n    let _window;\n\n    if (isType.trySelector(target)) {\n      this.target = target;\n\n      const context = options && options.context;\n\n      _window = context? scope.getWindow(context) : scope.window;\n\n      if (context && (_window.Node\n        ? context instanceof _window.Node\n        : (isType.isElement(context) || context === _window.document))) {\n\n        this._context = context;\n      }\n    }\n    else {\n      _window = scope.getWindow(target);\n    }\n\n    this._doc = _window.document;\n\n    signals.fire('new', {\n      target,\n      options,\n      interactable: this,\n      win: _window,\n    });\n\n    scope.addDocument( this._doc, _window );\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  setOnEvents (action, phases) {\n    const onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)       ) { this._iEvents[onAction + 'start'        ] = phases.onstart         ; }\n    if (isType.isFunction(phases.onmove)        ) { this._iEvents[onAction + 'move'         ] = phases.onmove          ; }\n    if (isType.isFunction(phases.onend)         ) { this._iEvents[onAction + 'end'          ] = phases.onend           ; }\n    if (isType.isFunction(phases.oninertiastart)) { this._iEvents[onAction + 'inertiastart' ] = phases.oninertiastart  ; }\n\n    return this;\n  }\n\n  setPerAction (action, options) {\n    // for all the default per-action options\n    for (const option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false? false : true;\n          }\n        }\n        else if (isType.isBool(options[option]) && isType.isObject(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        }\n        else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  }\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n  getRect (element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !(isType.isElement(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n  rectChecker (checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n  origin (newValue) {\n    if (isType.trySelector(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n    else if (isType.isObject(newValue)) {\n      this.options.origin = newValue;\n      return this;\n    }\n\n    return this.options.origin;\n  }\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n  context () {\n    return this._context;\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument\n            || nodeContains(this._context, element));\n  }\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n  fire (iEvent) {\n    this._iEvents.fire(iEvent);\n\n    return this;\n  }\n\n  _onOffMultiple (method, eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this[method](eventType[i], listener, useCapture);\n      }\n\n      return true;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  }\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n  on (eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('on', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    if (contains(Interactable.eventTypes, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n      events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    else {\n      events.add(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n  off (eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('off', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    // if it is an action event type\n    if (contains(Interactable.eventTypes, eventType)) {\n      this._iEvents.on(eventType, listener);\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n      events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    // remove listener from this Interatable's element\n    else {\n      events.remove(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n  set (options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, defaults.base);\n\n    const perActions = extend({}, defaults.perAction);\n\n    for (const actionName in actions.methodDict) {\n      const methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (const setting of Interactable.settingsMethods) {\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        for (let i = 0; i < delegated.selectors.length; i++) {\n          if (delegated.selectors[i] === this.target\n              && delegated.contexts[i] === this._context) {\n\n            delegated.selectors.splice(i, 1);\n            delegated.contexts .splice(i, 1);\n            delegated.listeners.splice(i, 1);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegated[type] = null;\n            }\n          }\n\n          events.remove(this._context, type, events.delegateListener);\n          events.remove(this._context, type, events.delegateUseCapture, true);\n\n          break;\n        }\n      }\n    }\n    else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (const interaction of scope.interactions || []) {\n      if (interaction.target === this && interaction.interacting()) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  }\n}\n\nscope.interactables.indexOfElement = function indexOfElement (target, context) {\n  context = context || scope.document;\n\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    if (interactable.target === target\n        && (!isType.isString(target) || (interactable._context === context))) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet (element, options) {\n  return this[this.indexOfElement(element, options && options.context)];\n};\n\nscope.interactables.forEachSelector = function (callback) {\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    // skip non CSS selector targets\n    if (!isType.isString(interactable.target)) {\n      continue;\n    }\n\n    const ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n// all interact.js eventTypes\nInteractable.eventTypes = scope.eventTypes = [];\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = [ 'deltaSource', 'origin', 'preventDefault', 'rectChecker' ];\n\nmodule.exports = Interactable;\n","const scope   = require('./scope');\nconst utils   = require('./utils');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst finder  = require('./utils/interactionFinder');\nconst signals = require('./utils/Signals').new();\n\nconst listeners   = {};\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer',\n];\n\n// for ignoring browser's simulated mouse events\nlet prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nclass Interaction {\n  constructor () {\n    this.target        = null; // current interactable being interacted with\n    this.element       = null; // the target element of the interactable\n\n    this.prepared      = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    // keep track of added pointers\n    this.pointers    = [];\n    this.pointerIds  = [];\n    this.downTargets = [];\n    this.downTimes   = [];\n    this.holdTimers  = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0,\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget    = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null;      // previous action event\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords , this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = this.curCoords.timeStamp;\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n    }\n\n    signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n  }\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action  (object)  The action to be performed - drag, resize, etc.\n   - target  (Interactable) The Interactable to target\n   - element (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n  start (action, target, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target         = target;\n    this.element        = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent,\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    const duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n                           && this.curCoords.page.y === this.prevCoords.page.y\n                           && this.curCoords.client.x === this.prevCoords.client.x\n                           && this.curCoords.client.y === this.prevCoords.client.y);\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    const signalArg = {\n      pointer,\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting(),\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  }\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n  doMove (signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this,\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.mouse? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n\n    clearTimeout(this.holdTimers[pointerIndex]);\n\n    signals.fire(/cancel$/i.test(event.type)? 'cancel' : 'up', {\n      pointer,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n      this.removePointer(pointer);\n    }\n  }\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n  end (event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.stop();\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  stop () {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  }\n\n  updatePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    let index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  }\n\n  removePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    const index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) { return; }\n\n    this.pointers   .splice(index, 1);\n    this.pointerIds .splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes  .splice(index, 1);\n    this.holdTimers .splice(index, 1);\n  }\n\n  _updateEventTargets (target, currentTarget) {\n    this._eventTarget    = target;\n    this._curEventTarget = currentTarget;\n  }\n}\n\nfor (let i = 0, len = methodNames.length; i < len; i++) {\n  const method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions (method) {\n  return (function (event) {\n    const eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    const curEventTarget = utils.getActualElement(event.currentTarget);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (let i = 0; i < event.changedTouches.length; i++) {\n        const pointer = event.changedTouches[i];\n        const interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || (new Date().getTime() - prevTouchTime < 500);\n      }\n\n      if (!invalidPointer) {\n        let interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = (/mouse/i.test(event.pointerType || event.type)\n                               // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                               || event.pointerType === 4);\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (const [pointer, interaction] of matches) {\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\nfunction endAll (event) {\n  for (let i = 0; i < scope.interactions.length; i++) {\n    scope.interactions[i].end(event);\n  }\n}\n\nconst docEvents = { /* 'eventType': listenerFunc */ };\nconst pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down  ] = listeners.pointerDown;\n  docEvents[pEventTypes.move  ] = listeners.pointerMove;\n  docEvents[pEventTypes.up    ] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n}\nelse {\n  docEvents.mousedown   = listeners.pointerDown;\n  docEvents.mousemove   = listeners.pointerMove;\n  docEvents.mouseup     = listeners.pointerUp;\n\n  docEvents.touchstart  = listeners.pointerDown;\n  docEvents.touchmove   = listeners.pointerMove;\n  docEvents.touchend    = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal ({ doc }, signalName) {\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove;\n\n  // delegate event listener\n  for (const eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (const eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document'   , onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drag = {\n  defaults: {\n    enabled   : false,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  },\n\n  checker: function (pointer, event, interactable) {\n    const dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled\n      ? { name: 'drag', axis: (dragOptions.lockAxis === 'start'\n                               ? dragOptions.startAxis\n                               : dragOptions.lockAxis)}\n      : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y   = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy   = 0;\n  }\n  else if (axis === 'y') {\n    interaction.curCoords.page.x   = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx   = 0;\n  }\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY   = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  }\n  else if (axis === 'y') {\n    dragEvent.pageX   = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Interactable.eventTypes, [\n  'dragstart',\n  'dragmove',\n  'draginertiastart',\n  'draginertiaresume',\n  'dragend',\n]);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst scope          = require('../scope');\nconst interact       = require('../interact');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drop = {\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nlet dynamicDrop = false;\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements  = [];\n  interaction.activeDrops.rects     = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  const dragEvent = interaction.prevEvent;\n  const dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function ({ interaction, iEvent, event }) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const draggableElement = interaction.element;\n  const dragEvent = iEvent;\n  const dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget  = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function ({ interaction }) {\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function ({ interaction }) {\n  interaction.activeDrops.dropzones =\n    interaction.activeDrops.elements =\n    interaction.activeDrops.rects =\n    interaction.dropEvents = null;\n});\n\nfunction collectDrops (interaction, element) {\n  const drops = [];\n  const elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const current of scope.interactables) {\n    if (!current.options.drop.enabled) { continue; }\n\n    const accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if ((utils.isElement(accept) && accept !== element)\n        || (utils.isString(accept)\n        && !utils.matchesSelector(element, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.isString(current.target)\n      ? current._context.querySelectorAll(current.target)\n      : [current.target];\n\n    for (let i = 0; i < dropElements.length; i++) {\n      const currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements,\n    dropzones: drops,\n  };\n}\n\nfunction fireActiveDrops (interaction, event) {\n  let prevElement;\n\n  // loop through all active dropzones and trigger event\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    const current = interaction.activeDrops.dropzones[i];\n    const currentElement = interaction.activeDrops.elements [i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops (interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements  = possibleDrops.elements;\n  interaction.activeDrops.rects     = [];\n\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] =\n      interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop (dragEvent, event, dragElement) {\n  const interaction = dragEvent.interaction;\n  const validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (let j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    const current        = interaction.activeDrops.dropzones[j];\n    const currentElement = interaction.activeDrops.elements [j];\n    const rect           = interaction.activeDrops.rects    [j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect)\n      ? currentElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element : interaction.activeDrops.elements [dropIndex] || null,\n  };\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  const tmpl = {\n    dragEvent,\n    interaction,\n    target       : interaction.dropElement,\n    dropzone     : interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable    : dragEvent.interactable,\n    timeStamp    : dragEvent.timeStamp,\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent,\n        interaction,\n        target       : interaction.dropElement,\n        dropzone     : interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragenter',\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target   = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target   = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove     : dragEvent,\n      type         : 'dropmove',\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, dropEvents) {\n  if (dropEvents.leave) { interaction.prevDropTarget.fire(dropEvents.leave); }\n  if (dropEvents.enter) {     interaction.dropTarget.fire(dropEvents.enter); }\n  if (dropEvents.drop ) {     interaction.dropTarget.fire(dropEvents.drop ); }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget  = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.isFunction(options.ondrop)          ) { this._iEvents.ondrop           = options.ondrop          ; }\n    if (utils.isFunction(options.ondropactivate)  ) { this._iEvents.ondropactivate   = options.ondropactivate  ; }\n    if (utils.isFunction(options.ondropdeactivate)) { this._iEvents.ondropdeactivate = options.ondropdeactivate; }\n    if (utils.isFunction(options.ondragenter)     ) { this._iEvents.ondragenter      = options.ondragenter     ; }\n    if (utils.isFunction(options.ondragleave)     ) { this._iEvents.ondragleave      = options.ondragleave     ; }\n    if (utils.isFunction(options.ondropmove)      ) { this._iEvents.ondropmove       = options.ondropmove      ; }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    }\n    else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return (this.options.drop.checker\n      ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement);\n    const page = utils.getPageXY(dragEvent);\n    let horizontal;\n    let vertical;\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    horizontal = (page.x > rect.left) && (page.x < rect.right);\n    vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (utils.isNumber(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function ({ interactable }) {\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget      = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement     = null; // the element at the time of checking\n  interaction.prevDropTarget  = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents      = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [],      // the dropzones that are mentioned below\n    elements : [],      // elements of dropzones that accept the target draggable\n    rects    : [],      // the rects of the elements mentioned above\n  };\n\n});\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  interaction.dropTarget = interaction.dropElement =\n    interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Interactable.eventTypes, [\n  'dragenter',\n  'dragleave',\n  'dropactivate',\n  'dropdeactivate',\n  'dropmove',\n  'drop',\n]);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst gesture = {\n  defaults: {\n    enabled : false,\n    restrict: null,\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  let gestureEvent;\n\n  gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity\n      && gestureEvent.scale !== null\n      && gestureEvent.scale !== undefined\n      && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false? false: true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action, event, starting, ending, deltaSource }) {\n  if (action !== 'gesture') { return; }\n\n  const pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0,   // distance between two touches of touchStart\n    prevDistance : 0,\n    distance     : 0,\n\n    scale: 1,           // gesture.distance / gesture.startDistance\n\n    startAngle: 0,      // angle of line joining two touches\n    prevAngle : 0,      // angle of the previous gesture event\n  };\n});\n\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Interactable.eventTypes, [\n  'gesturestart',\n  'gesturemove',\n  'gestureend',\n]);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n","const actions = {\n  names: [],\n  methodDict: {},\n};\n\nmodule.exports = actions;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst browser        = require('../utils/browser');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nconst defaultMargin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\nconst resize = {\n  defaults: {\n    enabled   : false,\n\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) { return null; }\n\n    const page = utils.extend({}, interaction.curCoords.page);\n    const options = interactable.options;\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize;\n      const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n                                              resizeOptions.edges[edge],\n                                              page,\n                                              interaction._eventTarget,\n                                              element,\n                                              rect,\n                                              resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          };\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - defaultMargin);\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - defaultMargin);\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right? 'x' : '') + (bottom? 'y' : ''),\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: (browser.isIe9OrOlder ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  }),\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    }\n    else if (action.edges) {\n      let cursorKey = '';\n      const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    const startRect = interaction.target.getRect(interaction.element);\n    const resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n      linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n      linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n      linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    }\n    else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start     : startRect,\n      current   : utils.extend({}, startRect),\n      restricted: utils.extend({}, startRect),\n      previous  : utils.extend({}, startRect),\n      delta     : {\n        left: 0, right : 0, width : 0,\n        top : 0, bottom: 0, height: 0,\n      },\n    };\n\n    resizeEvent.rect = interaction.resizeRects.restricted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  if (edges) {\n    const start      = interaction.resizeRects.start;\n    const current    = interaction.resizeRects.current;\n    const restricted = interaction.resizeRects.restricted;\n    const delta      = interaction.resizeRects.delta;\n    const previous   = utils.extend(interaction.resizeRects.previous, restricted);\n    const originalEdges = edges;\n\n    let dx = resizeEvent.dx;\n    let dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      const startAspectRatio = resizeOptions.preserveAspectRatio\n        ? interaction.resizeStartAspectRatio\n        : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if ((originalEdges.left && originalEdges.bottom)\n          || (originalEdges.right && originalEdges.top)) {\n        dy = -dx / startAspectRatio;\n      }\n      else if (originalEdges.left || originalEdges.right ) { dy = dx / startAspectRatio; }\n      else if (originalEdges.top  || originalEdges.bottom) { dx = dy * startAspectRatio; }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top   ) { current.top    += dy; }\n    if (edges.bottom) { current.bottom += dy; }\n    if (edges.left  ) { current.left   += dx; }\n    if (edges.right ) { current.right  += dx; }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(restricted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        let swap;\n\n        if (restricted.top > restricted.bottom) {\n          swap = restricted.top;\n\n          restricted.top = restricted.bottom;\n          restricted.bottom = swap;\n        }\n        if (restricted.left > restricted.right) {\n          swap = restricted.left;\n\n          restricted.left = restricted.right;\n          restricted.right = swap;\n        }\n      }\n    }\n    else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      restricted.top    = Math.min(current.top, start.bottom);\n      restricted.bottom = Math.max(current.bottom, start.top);\n      restricted.left   = Math.min(current.left, start.right);\n      restricted.right  = Math.max(current.right, start.left);\n    }\n\n    restricted.width  = restricted.right  - restricted.left;\n    restricted.height = restricted.bottom - restricted.top ;\n\n    for (const edge in restricted) {\n      delta[edge] = restricted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = restricted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false? false: true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    }\n    else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.isNumber(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.isNumber(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) { return false; }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    }\n    else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Interactable.eventTypes, [\n  'resizestart',\n  'resizemove',\n  'resizeinertiastart',\n  'resizeinertiaresume',\n  'resizeend',\n]);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n","const raf            = require('./utils/raf');\nconst getWindow      = require('./utils/window').getWindow;\nconst isWindow       = require('./utils/isType').isWindow;\nconst domUtils       = require('./utils/domUtils');\nconst Interaction    = require('./Interaction');\nconst defaultOptions = require('./defaultOptions');\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    container: null,     // the item that is scrolled (Window or HTMLElement)\n    margin   : 60,\n    speed    : 300,      // the scroll speed in pixels per second\n  },\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(autoScroll.interaction.element);\n    const now = new Date().getTime();\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    const s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      }\n      else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop  += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    const options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function ({ interaction, pointer }) {\n    if (!(interaction.interacting()\n          && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const options = interaction.target.options[interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left   = pointer.clientX < autoScroll.margin;\n      top    = pointer.clientY < autoScroll.margin;\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container);\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin;\n      top    = pointer.clientY < rect.top    + autoScroll.margin;\n      right  = pointer.clientX > rect.right  - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = (right ? 1: left? -1: 0);\n    autoScroll.y = (bottom? 1:  top? -1: 0);\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed  = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  },\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n","const autoStart   = require('./index');\nconst Interaction = require('../Interaction');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(() => {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nInteraction.signals.on('move', function ({ interaction, duplicate }) {\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\n// prevent regular down->move autoStart\nautoStart.signals.on('before-start', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n});\n","const autoStart = require('./index');\nconst scope     = require('../scope');\nconst browser   = require('../utils/browser');\n\nconst { isElement } = require('../utils/isType');\nconst { matchesSelector, parentNode } = require('../utils/domUtils');\n\nrequire('./index').setActionDefaults(require('../actions/drag'));\n\nautoStart.signals.on('before-start',  function ({ interaction, eventTarget, dx, dy }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx);\n  const absY = Math.abs(dy);\n  const dragOptions = interaction.target.options.drag;\n  const startAxis = dragOptions.startAxis;\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start'\n    ? currentAxis\n    : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n\n      let element = eventTarget;\n\n      const getDraggable = function (interactable, selector, context) {\n        const elements = browser.useMatchesSelectorPolyfill\n            ? context.querySelectorAll(selector)\n            : undefined;\n\n        if (interactable === interaction.target) { return; }\n\n        let action = null;\n\n        if (interactable.inContext(eventTarget)\n            && !interactable.options.drag.manualStart\n            && !autoStart.testIgnore(interactable, element, eventTarget)\n            && autoStart.testAllow(interactable, element, eventTarget)\n            && matchesSelector(element, selector, elements)) {\n\n          action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, interactable)\n            && autoStart.withinInteractionLimit(interactable, element, { name: 'drag' })) {\n\n          return interactable;\n        }\n      };\n\n      let action = null;\n\n      // check all interactables\n      while (isElement(element)) {\n        const elementInteractable = scope.interactables.get(element);\n\n        if (elementInteractable\n            && elementInteractable !== interaction.target\n            && !elementInteractable.options.drag.manualStart) {\n\n          action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, elementInteractable)) {\n\n          interaction.prepared.name = 'drag';\n          interaction.target = elementInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        const selectorInteractable = scope.interactables.forEachSelector(getDraggable);\n\n        if (selectorInteractable) {\n          interaction.prepared.name = 'drag';\n          interaction.target = selectorInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        element = parentNode(element);\n      }\n    }\n  }\n});\n\nfunction checkStartAxis (startAxis, interactable) {\n  if (!interactable) { return false; }\n\n  const thisAxis = interactable.options.drag.startAxis;\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis);\n}\n","require('./index').setActionDefaults(require('../actions/gesture'));\n","const interact       = require('../interact');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst actions        = require('../actions');\nconst defaultOptions = require('../defaultOptions');\nconst browser        = require('../utils/browser');\nconst scope          = require('../scope');\nconst utils          = require('../utils');\nconst signals        = require('../utils/Signals').new();\n\nconst autoStart = {\n  signals,\n  testIgnore,\n  testAllow,\n  withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  perActionDefaults: {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n  },\n  setActionDefaults: function (action) {\n    utils.extend(action.defaults, autoStart.perActionDefaults);\n  },\n};\n\nfunction testIgnore (interactable, interactableElement, element) {\n  const ignoreFrom = interactable.options.ignoreFrom;\n\n  if (!ignoreFrom || !utils.isElement(element)) { return false; }\n\n  if (utils.isString(ignoreFrom)) {\n    return utils.matchesUpTo(element, ignoreFrom, interactableElement);\n  }\n  else if (utils.isElement(ignoreFrom)) {\n    return utils.nodeContains(ignoreFrom, element);\n  }\n\n  return false;\n}\n\nfunction testAllow (interactable, interactableElement, element) {\n  const allowFrom = interactable.options.allowFrom;\n\n  if (!allowFrom) { return true; }\n\n  if (!utils.isElement(element)) { return false; }\n\n  if (utils.isString(allowFrom)) {\n    return utils.matchesUpTo(element, allowFrom, interactableElement);\n  }\n  else if (utils.isElement(allowFrom)) {\n    return utils.nodeContains(allowFrom, element);\n  }\n\n  return false;\n}\n\n// set cursor style on mousedown\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n  if (interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\n// set cursor style on mousemove\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n  if (!interaction.mouse || interaction.pointerIsDown) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  const { interaction, event } = arg;\n\n  if (!interaction.pointerIsDown\n      || interaction.interacting()\n      || !interaction.pointerWasMoved\n      || !interaction.prepared.name) {\n    return;\n  }\n\n  signals.fire('before-start', arg);\n\n  const target = interaction.target;\n\n  if (interaction.prepared.name && target) {\n    // check manualStart and interaction limit\n    if (target.options[interaction.prepared.name].manualStart\n        || !withinInteractionLimit(target, interaction.element, interaction.prepared)) {\n      interaction.stop(event);\n    }\n    else {\n      interaction.start(interaction.prepared, target, interaction.element);\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = validateAction(match.getAction(pointer, event, interaction, matchElement), match);\n\n    if (action && withinInteractionLimit(match, matchElement, action)) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n  let action = null;\n\n  function pushMatches (interactable, selector, context) {\n    const elements = (browser.useMatchesSelectorPolyfill\n      ? context.querySelectorAll(selector)\n      : undefined);\n\n    if (interactable.inContext(element)\n        && !module.exports.testIgnore(interactable, element, eventTarget)\n      && module.exports.testAllow(interactable, element, eventTarget)\n      && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    const elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable\n        && (action = validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable))\n        && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element,\n        action,\n        target: elementInteractable,\n      };\n    }\n    else {\n      scope.interactables.forEachSelector(pushMatches);\n\n      const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action\n          && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\n/*\\\n * Interactable.ignoreFrom\n [ method ]\n *\n * If the target of the `mousedown`, `pointerdown` or `touchstart`\n * event or any of it's parents match the given CSS selector or\n * Element, no drag/resize/gesture is started.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n = (string | Element | object) The current ignoreFrom value or this Interactable\n **\n | interact(element, { ignoreFrom: document.getElementById('no-action') });\n | // or\n | interact(element).ignoreFrom('input, textarea, a');\n\\*/\nInteractable.prototype.ignoreFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {            // CSS selector to match event.target\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {              // specific element\n    this.options.ignoreFrom = newValue;\n    return this;\n  }\n\n  return this.options.ignoreFrom;\n};\n\n/*\\\n * Interactable.allowFrom\n [ method ]\n *\n * A drag/resize/gesture is started only If the target of the\n * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n * parents match the given CSS selector or Element.\n *\n - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n = (string | Element | object) The current allowFrom value or this Interactable\n **\n | interact(element, { allowFrom: document.getElementById('drag-handle') });\n | // or\n | interact(element).allowFrom('.handle');\n\\*/\nInteractable.prototype.allowFrom = function (newValue) {\n  if (utils.trySelector(newValue)) {            // CSS selector to match event.target\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  if (utils.isElement(newValue)) {              // specific element\n    this.options.allowFrom = newValue;\n    return this;\n  }\n\n  return this.options.allowFrom;\n};\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  const target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  const rect = this.getRect(element);\n  let action = null;\n\n  for (const actionName of actions.names) {\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nfunction withinInteractionLimit (interactable, element, action) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStart.maxInteractions)) { return; }\n\n  for (let i = 0, len = scope.interactions.length; i < len; i++) {\n    const interaction = scope.interactions[i];\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.perActionDefaults);\n\nmodule.exports = autoStart;\n","require('./index').setActionDefaults(require('../actions/resize'));\n","module.exports = {\n  base: {\n    accept        : null,\n    preventDefault: 'auto',\n    origin        : { x: 0, y: 0 },\n    deltaSource   : 'page',\n    allowFrom     : null,\n  },\n\n  perAction: {\n    inertia: {\n      enabled          : false,\n      resistance       : 10,    // the lambda in exponential decay\n      minSpeed         : 100,   // target speed must be above this for inertia to start\n      endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n      allowResume      : true,  // allow resuming an action in inertia phase\n      smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n    },\n  },\n\n  _holdDuration: 600,\n};\n","/* browser entry point */\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\nrequire('./pointerEvents/interactableTargets');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// delay\nrequire('./autoStart/delay');\n\n// actions\nrequire('./autoStart/gesture');\nrequire('./autoStart/resize');\nrequire('./autoStart/drag');\n\nrequire('./actions/drop');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n","const InteractEvent  = require('./InteractEvent');\nconst Interaction    = require('./Interaction');\nconst modifiers      = require('./modifiers');\nconst utils          = require('./utils');\nconst animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active     : false,\n    smoothEnd  : false,\n    allowResume: false,\n\n    startEvent: null,\n    upCoords  : {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i  : null,\n  };\n\n  interaction.boundInertiaFrame   = () => inertiaFrame  .apply(interaction);\n  interaction.boundSmoothEndFrame = () => smoothEndFrame.apply(interaction);\n});\n\nInteraction.signals.on('down', function ({ interaction, event, pointer, eventTarget }) {\n  const status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    let element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        const signalArg = { interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume'     , signalArg);\n\n        // fire a reume event\n        const resumeEvent = new InteractEvent(interaction,\n                                              event,\n                                              interaction.prepared.name,\n                                              'inertiaresume',\n                                              interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function ({ interaction, pointer, event }) {\n  const status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) { return; }\n\n  const target = interaction.target;\n  const options = target && target.options;\n  const inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  const now = new Date().getTime();\n  const statuses = {};\n  const page = utils.extend({}, interaction.curCoords.page);\n  const pointerSpeed = interaction.pointerDelta.client.speed;\n  let inertiaPossible = false;\n  let inertia = false;\n  let smoothEnd = false;\n  let modifierResult;\n\n  // check if inertia should be started\n  inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                     && interaction.prepared.name !== 'gesture'\n                     && event !== status.startEvent);\n\n  inertia = (inertiaPossible\n            && (now - interaction.curCoords.timeStamp) < 50\n            && pointerSpeed > inertiaOptions.minSpeed\n            && pointerSpeed > inertiaOptions.endSpeed);\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return; }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent =\n    new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  }\n  else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n\n  interaction.removePointer(pointer);\n});\n\nInteraction.signals.on('stop-active', function ({ interaction }) {\n  const status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia (interaction, status) {\n  const inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  const lambda = inertiaOptions.resistance;\n  const inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame () {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  const status = this.inertiaStatus;\n  const options = this.target.options[this.prepared.name].inertia;\n  const lambda = options.resistance;\n  const t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    const progress =  1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(0, 0,\n                                                     status.xe,\n                                                     status.ye,\n                                                     status.modifiedXe,\n                                                     status.modifiedYe,\n                                                     progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  }\n  else {\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame () {\n  updateInertiaCoords(this);\n\n  const status = this.inertiaStatus;\n  const t = new Date().getTime() - status.t0;\n  const duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  }\n  else {\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd =\n      status.active = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords (interaction) {\n  const status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) { return; }\n\n  const pageUp   = status.upCoords.page;\n  const clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [ {\n    pageX  : pageUp.x   + status.sx,\n    pageY  : pageUp.y   + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy,\n  } ]);\n}\n","const browser      = require('./utils/browser');\nconst events       = require('./utils/events');\nconst utils        = require('./utils');\nconst scope        = require('./scope');\nconst Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\n\nconst globalEvents = {};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact('#draggable').draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // ...\n |     });\n\\*/\nfunction interact (element, options) {\n  let interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable._iEvents.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Interactable.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    }\n    else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, useCapture);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Interactable.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  }\n  else {\n    let index;\n\n    if (type in globalEvents\n        && (index = utils.indexOf(globalEvents[type], listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointerAverage;\ninteract.getTouchBBox       = utils.touchBBox;\ninteract.getTouchDistance   = utils.touchDistance;\ninteract.getTouchAngle      = utils.touchAngle;\n\ninteract.getElementRect       = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector      = utils.matchesSelector;\ninteract.closest              = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (let i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument    = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n","const Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\nconst scope        = require('./scope');\nconst isType       = require('./utils/isType');\n\nconst { nodeContains } = require('./utils/domUtils');\n\n/*\\\n * Interactable.preventDefault\n [ method ]\n *\n * Returns or sets whether to prevent the browser's default behaviour\n * in response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n - newValue (string) #optional `true`, `false` or `'auto'`\n = (string | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (isType.isBool(newValue)) {\n    this.options.preventDefault = newValue? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  const setting = this.options.preventDefault;\n\n  if (setting === 'never') { return; }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on input elements\n  if (/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nfor (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag (event) {\n  for (const interaction of scope.interactions) {\n\n    if (interaction.element\n        && (interaction.element === event.target\n            || nodeContains(interaction.element, event.target))) {\n\n      interaction.target.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n","const scope   = require('./scope');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst iFinder = require('./utils/interactionFinder');\n\nconst toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick (event) {\n  const interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) { return; }\n\n  if (interaction.prevTap\n      && event.clientX === interaction.prevTap.clientX\n      && event.clientY === interaction.prevTap.clientY\n      && event.target  === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes  [0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  const selectFix = function (event) {\n    for (const interaction of scope.interactions) {\n      if (interaction.interacting()) {\n        interaction.target.checkAndPreventDefault(event);\n      }\n    }\n  };\n\n  const onDocIE8 = function onDocIE8 ({ doc, win }, signalName) {\n    const eventMethod = signalName.indexOf('listen') === 0\n      ? events.add : events.remove;\n\n    // For IE's lack of Event#preventDefault\n    eventMethod(doc, 'selectstart', selectFix);\n\n    if (scope.pointerEvents) {\n      eventMethod(doc, 'dblclick', onIE8Dblclick);\n    }\n  };\n\n  scope.signals.on('add-document'   , onDocIE8);\n  scope.signals.on('remove-document', onDocIE8);\n}\n\nmodule.exports = null;\n","const InteractEvent = require('../InteractEvent');\nconst Interaction   = require('../Interaction');\nconst extend        = require('../utils/extend');\n\nconst modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    const { target, element } = interaction;\n    const rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top  = coords.page.y - rect.top;\n\n      interaction.startOffset.right  = rect.right  - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n      if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n    }\n    else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n\n      offsets[modifierName] =\n        modifiers[modifiers.names[i]].setOffset(interaction,\n                                                interactable, element, rect,\n                                                interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    const result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true,\n    };\n    const target = interaction.target;\n    const coords = extend({}, coordsArg);\n\n    let currentStatus;\n\n    for (const modifierName of modifiers.names) {\n      const modifier = modifiers[modifierName];\n\n      if (!modifier.shouldDo(target, interaction.prepared.name, preEnd, requireEndOnly)) { continue; }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (const modifierName of modifiers.names) {\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function ({ interaction }, signalName) {\n    modifiers.setOffsets(interaction, signalName === 'action-resume'? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  },\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset      = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets  = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('action-start' , modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function ({ interaction, preEnd, interactingBeforeMove }) {\n  const modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  for (let i = 0; i < modifiers.names.length; i++) {\n    // if the endOnly option is true for any modifier\n    if (modifiers[modifiers.names[i]].shouldDo(interaction.target, interaction.prepared.name, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function ({ iEvent, interaction, page, client, phase, action: actionName }) {\n  const target = interaction.target;\n\n  for (let i = 0; i < modifiers.names.length; i++) {\n    const modifierName = modifiers.names[i];\n    const modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nmodule.exports = modifiers;\n","const modifiers      = require('./index');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst restrict = {\n  defaults: {\n    enabled    : false,\n    endOnly    : false,\n    restriction: null,\n    elementRect: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const restrictOptions = interactable.options[actionName].restrict;\n\n    return (restrictOptions && restrictOptions.enabled\n            && (preEnd || !restrictOptions.endOnly)\n            && (!requireEndOnly || restrictOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    const offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - (rect.width  * elementRect.left);\n      offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n      offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n      offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n    }\n    else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const target    = interaction.target;\n    const restrictOptions  = target && target.options[interaction.prepared.name].restrict;\n    let restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    let rect;\n    let restrictedX;\n    let restrictedY;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentNode(interaction.element);\n      }\n      else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      }\n      else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) { return status; }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    rect = restriction;\n\n    const offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      restrictedX = page.x;\n      restrictedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n      restrictedX = Math.max(Math.min(rect.x + rect.width  - offset.right , page.x), rect.x + offset.left);\n      restrictedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top );\n    }\n    else {\n      restrictedX = Math.max(Math.min(rect.right  - offset.right , page.x), rect.left + offset.left);\n      restrictedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top  + offset.top );\n    }\n\n    status.dx = restrictedX - page.x;\n    status.dy = restrictedY - page.y;\n\n    status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.restrictedX = restrictedX;\n    status.restrictedY = restrictedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const options = interactable.options[actionName].restrict;\n    const elementRect = options && options.elementRect;\n\n    if (options && options.enabled\n        && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n","const modifiers      = require('./index');\nconst interact       = require('../interact');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n\n  shouldDo: function (interactable, actionName, preEnd, requireEndOnly) {\n    const snapOptions = interactable.options[actionName].snap;\n\n    return (snapOptions && snapOptions.enabled\n            && (preEnd || !snapOptions.endOnly)\n            && (!requireEndOnly || snapOptions.endOnly));\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const offsets = [];\n    const origin = utils.getOriginXY(interactable, element);\n    const snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    let snapOffset;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y,\n      };\n    }\n    else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y,\n      };\n    }\n    else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (const { x: relativeX, y: relativeY } of snapOptions.relativePoints) {\n        offsets.push({\n          x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n          y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n        });\n      }\n    }\n    else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    const targets = [];\n    let target;\n    let page;\n    let i;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    }\n    else {\n      const origin = utils.getOriginXY(interaction.target, interaction.element);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    const offsets = interaction.modifierOffsets.snap;\n    let len = snapOptions.targets? snapOptions.targets.length : 0;\n\n    for (const { x: offsetX, y: offsetY } of offsets) {\n      const relativeX = page.x - offsetX;\n      const relativeY = page.y - offsetY;\n\n      for (const snapTarget of snapOptions.targets) {\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        }\n        else {\n          target = snapTarget;\n        }\n\n        if (!target) { continue; }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? (target.x + offsetX) : relativeX,\n          y: utils.isNumber(target.y) ? (target.y + offsetY) : relativeY,\n\n          range: utils.isNumber(target.range)? target.range: snapOptions.range,\n        });\n      }\n    }\n\n    const closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0,\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      const range = target.range;\n      const dx = target.x - page.x;\n      const dy = target.y - page.y;\n      const distance = utils.hypot(dx, dy);\n      let inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n          // is the closest target in range?\n          ? (closest.inRange && range !== Infinity\n          // the pointer is relatively deeper in this target\n          ? distance / range < closest.distance / closest.range\n          // this target has Infinite range and the closest doesn't\n          : (range === Infinity && closest.range !== Infinity)\n          // OR this target is closer that the previous closest\n        || distance < closest.distance)\n          // The other is not in range and the pointer is closer to this target\n          : (!closest.inRange && distance < closest.distance))) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    let snapChanged;\n\n    if (closest.target) {\n      snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    }\n    else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = (snapChanged || (closest.inRange && !status.locked));\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const snapOptions = interactable.options[actionName].snap;\n    const relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled\n        && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range  : status.range,\n        locked : status.locked,\n        x      : status.snappedX,\n        y      : status.snappedY,\n        realX  : status.realX,\n        realY  : status.realY,\n        dx     : status.dx,\n        dy     : status.dy,\n      };\n    }\n  },\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    const limits = grid.limits || {\n      left  : -Infinity,\n      right :  Infinity,\n      top   : -Infinity,\n      bottom:  Infinity,\n    };\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    const gridx = Math.round((x - offsetX) / grid.x);\n    const gridy = Math.round((y - offsetY) / grid.y);\n\n    const newX = Math.max(limits.left, Math.min(limits.right , gridx * grid.x + offsetX));\n    const newY = Math.max(limits.top , Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range,\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n","const scope       = require('../scope');\nconst Interaction = require('../Interaction');\nconst utils       = require('../utils');\nconst browser     = require('../utils/browser');\nconst defaults    = require('../defaultOptions');\nconst signals     = require('../utils/Signals').new();\n\nconst simpleSignals = [ 'down', 'up', 'up', 'cancel' ];\nconst simpleEvents = [ 'down', 'up', 'tap', 'cancel' ];\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopImmediatePropagation () {\n  this.immediatePropagationStopped = this.propagationStopped = true;\n}\n\nfunction stopPropagation () {\n  this.propagationStopped = true;\n}\n\nfunction firePointers (interaction, pointer, event, eventTarget, targets, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n  let pointerEvent = {};\n  let i;\n  // for tap events\n  let interval;\n  let createNewDoubleTap;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  }\n  else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault           = preventOriginalDefault;\n    pointerEvent.stopPropagation          = stopPropagation;\n    pointerEvent.stopImmediatePropagation = stopImmediatePropagation;\n    pointerEvent.interaction              = interaction;\n\n    pointerEvent.timeStamp     = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type          = eventType;\n    pointerEvent.pointerId     = utils.getPointerId(pointer);\n    pointerEvent.pointerType   = interaction.mouse? 'mouse' : !browser.supportsPointerEvent? 'touch'\n      : utils.isString(pointer.pointerType)\n        ? pointer.pointerType\n        : [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap'\n                            && interaction.prevTap.target === pointerEvent.target\n                            && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  const signalArg = {\n    pointerEvent,\n    pointer,\n    event,\n    targets,\n  };\n\n  signals.fire('new', signalArg);\n\n  for (i = 0; i < targets.length; i++) {\n    const target = targets[i];\n\n    pointerEvent.currentTarget = target.element;\n\n    for (const prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    target.eventable.fire(pointerEvent);\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (createNewDoubleTap) {\n    const doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt   = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  }\n  else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets (interaction, pointer, event, eventTarget, eventType) {\n  const pointerIndex = interaction.mouse? 0 : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer));\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  const targets = [];\n  const path = utils.getPath(eventTarget);\n  const signalArg = {\n    targets,\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    eventType,\n    path,\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, eventType);\n  }\n}\n\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n  const pointerIndex = (interaction.mouse\n    ? 0\n    : utils.indexOf(interaction.pointerIds, utils.getPointerId(pointer)));\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex]);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n  // copy event to be used in timeout for IE8\n  const eventCopy = browser.isIE8? utils.extend({}, event) : event;\n\n  interaction.holdTimers[pointerIndex] = setTimeout(function () {\n\n    collectEventTargets(interaction,\n                        browser.isIE8? eventCopy : pointer,\n                        eventCopy,\n                        eventTarget,\n                        'hold');\n\n  }, defaults._holdDuration);\n});\n\nfunction createSignalListener (event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction,\n                        arg.pointer,\n                        arg.event,\n                        arg.eventTarget,\n                        event);\n  };\n}\n\nfor (let i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null;  // the most recent tap event on this interaction\n  interaction.tapTime = 0;     // time of the most recent tap event\n});\n\nmodule.exports = scope.pointerEvents = {\n  firePointers,\n  collectEventTargets,\n  preventOriginalDefault,\n  signals,\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n};\n","const pointerEvents = require('./index');\nconst Interactable  = require('../Interactable');\nconst browser       = require('../utils/browser');\nconst isType        = require('../utils/isType');\nconst domUtils      = require('../utils/domUtils');\nconst scope         = require('../scope');\nconst { merge }     = require('../utils/arr');\n\npointerEvents.signals.on('collect-targets', function ({ targets, element, eventType }) {\n  function collectSelectors (interactable, selector, context) {\n    const els = browser.useMatchesSelectorPolyfill\n        ? context.querySelectorAll(selector)\n        : undefined;\n\n    const eventable = interactable._iEvents;\n\n    if (eventable[eventType]\n        && isType.isElement(element)\n        && interactable.inContext(element)\n        && domUtils.matchesSelector(element, selector, els)) {\n\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  }\n\n  const interactable = scope.interactables.get(element);\n\n  if (interactable) {\n    const eventable = interactable._iEvents;\n\n    if (eventable[eventType]) {\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  }\n\n  scope.interactables.forEachSelector(collectSelectors);\n});\n\nmerge(Interactable.eventTypes, pointerEvents.types);\n","const utils   = require('./utils');\nconst extend  = require('./utils/extend');\nconst events  = require('./utils/events');\nconst signals = require('./utils/Signals').new();\n\nconst scope = {\n  signals,\n  events,\n  utils,\n\n  documents: [],  // all documents being listened to\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) { return false; }\n\n    win = win || scope.getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc, win });\n  },\n\n  removeDocument: function (doc, win) {\n    const index = utils.indexOf(scope.documents, doc);\n\n    win = win || scope.getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win, doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  },\n};\n\nextend(scope, require('./utils/window'));\nextend(scope, require('./utils/domObjects'));\n\nmodule.exports = scope;\n","const { indexOf } = require('./arr');\n\nclass Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (let i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  }\n}\n\nSignals.new = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n","function indexOf (array, target) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains (array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge (target, source) {\n  for (let i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nmodule.exports = {\n  indexOf,\n  contains,\n  merge,\n};\n","const win        = require('./window');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!(('ontouchstart' in win.window) || isType.isFunction(win.window.DocumentTouch)\n                     && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: ('attachEvent' in win.window) && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: (navigator.appName === 'Opera'\n      && browser.supportsTouch\n      && navigator.userAgent.match('Presto')),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n  isIe9OrOlder: domObjects.document.all && !win.window.atob,\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype\n    ? 'matches': 'webkitMatchesSelector' in Element.prototype\n    ? 'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype\n    ? 'mozMatchesSelector': 'oMatchesSelector' in Element.prototype\n    ? 'oMatchesSelector': 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === win.window.MSPointerEvent\n      ? { up: 'MSPointerUp', down: 'MSPointerDown', over: 'mouseover',\n          out: 'mouseout', move: 'MSPointerMove', cancel: 'MSPointerCancel' }\n      : { up: 'pointerup', down: 'pointerdown', over: 'pointerover',\n          out: 'pointerout', move: 'pointermove', cancel: 'pointercancel' })\n    : null),\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document? 'mousewheel': 'wheel',\n\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n","const domObjects = {};\nconst win = require('./window').window;\n\nfunction blank () {}\n\ndomObjects.document           = win.document;\ndomObjects.DocumentFragment   = win.DocumentFragment   || blank;\ndomObjects.SVGElement         = win.SVGElement         || blank;\ndomObjects.SVGSVGElement      = win.SVGSVGElement      || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement        = win.HTMLElement        || win.Element;\n\ndomObjects.Event        = win.Event;\ndomObjects.Touch        = win.Touch || blank;\ndomObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent);\n\nmodule.exports = domObjects;\n","const win        = require('./window');\nconst browser    = require('./browser');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) { return element; }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    let parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill\n    ? function (element, selector, elems) {\n      elems = elems || element.parentNode.querySelectorAll(selector);\n\n      for (let i = 0, len = elems.length; i < len; i++) {\n        if (elems[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    let deepestZoneParents = [];\n    let dropzoneParents = [];\n    let dropzone;\n    let deepestZone = elements[0];\n    let index = deepestZone? 0: -1;\n    let parent;\n    let child;\n    let i;\n    let n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement\n          && dropzone instanceof domObjects.SVGElement\n          && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      }\n      else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      const parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n],\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        }\n        else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return (element instanceof domObjects.SVGElementInstance\n      ? element.correspondingUseElement\n      : element);\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n    };\n  },\n\n  getElementClientRect: function (element) {\n    const clientRect = (element instanceof domObjects.SVGElement\n      ? element.getBoundingClientRect()\n      : element.getClientRects()[0]);\n\n    return clientRect && {\n      left  : clientRect.left,\n      right : clientRect.right,\n      top   : clientRect.top,\n      bottom: clientRect.bottom,\n      width : clientRect.width  || clientRect.right  - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    };\n  },\n\n  getElementRect: function (element) {\n    const clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      const scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left   += scroll.x;\n      clientRect.right  += scroll.x;\n      clientRect.top    += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    const path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  },\n};\n\nmodule.exports = domUtils;\n","const arr       = require('./arr');\nconst isType    = require('./isType');\nconst domUtils  = require('./domUtils');\nconst indexOf   = arr.indexOf;\nconst contains  = arr.contains;\nconst getWindow = require('./window').getWindow;\nconst pExtend   = require('./pointerExtend');\n\nconst useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window);\nconst addEvent       = useAttachEvent?  'attachEvent': 'addEventListener';\nconst removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener';\nconst on             = useAttachEvent? 'on': '';\n\nconst elements          = [];\nconst targets           = [];\nconst attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nconst delegatedEvents = {};\n\nconst documents = [];\n\nfunction add (element, type, listener, useCapture) {\n  let elementIndex = indexOf(elements, element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push((useAttachEvent ? {\n      supplied: [],\n      wrapped : [],\n      useCount: [],\n    } : null));\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    let ret;\n\n    if (useAttachEvent) {\n      const { supplied, wrapped, useCount } = attachedListeners[elementIndex];\n      const listenerIndex = indexOf(supplied, listener);\n\n      const wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault           = event.preventDefault           || preventDef;\n          event.stopPropagation          = event.stopPropagation          || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      }\n      else {\n        useCount[listenerIndex]++;\n      }\n    }\n    else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove (element, type, listener, useCapture) {\n  const elementIndex = indexOf(elements, element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  let wrappedListener = listener;\n  let listeners;\n  let listenerIndex;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (let i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate (selector, context, type, listener, useCapture) {\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const fn = listeners[i][0];\n        const useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, useCapture) {\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const eventTarget = (domUtils.getActualElement(event.path\n    ? event.path[0]\n    : event.target));\n  let element = eventTarget;\n\n  useCapture = useCapture? true: false;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef () {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp () {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp () {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners,\n};\n","module.exports = function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n","const { closest, parentNode, getElementRect } = require('./domUtils');\nconst { isElement, isFunction, trySelector }  = require('./isType');\n\nmodule.exports = function (interactable, element) {\n  let origin = interactable.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentNode(element);\n  }\n  else if (origin === 'self') {\n    origin = interactable.getRect(element);\n  }\n  else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(interactable && element);\n  }\n\n  if (isElement(origin))  {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = ('x' in origin)? origin.x : origin.left;\n  origin.y = ('y' in origin)? origin.y : origin.top;\n\n  return origin;\n};\n","module.exports = (x, y) =>  Math.sqrt(x * x + y * y);\n","const extend = require('./extend');\nconst win    = require('./window');\n\nconst utils = {\n  warnOnce: function (method, message) {\n    let warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    const iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x:  utils._getQBezierValue(position, startX, cpX, endX),\n      y:  utils._getQBezierValue(position, startY, cpY, endY),\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t*(t-2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name  = src.name;\n    dest.axis  = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  extend     : extend,\n  hypot      : require('./hypot'),\n  getOriginXY: require('./getOriginXY'),\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\nmodule.exports = utils;\n","const scope   = require('../scope');\nconst utils   = require('./index');\nconst browser = require('./browser');\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouse', 'hasPointer', 'idle' ],\n\n  search: function (pointer, eventType, eventTarget) {\n    const mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n                        // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                        || pointer.pointerType === 4);\n    const pointerId = utils.getPointerId(pointer);\n    const details = { pointer, pointerId, mouseEvent, eventType, eventTarget };\n\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function ({ mouseEvent, eventType, eventTarget }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions) {\n      let element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume\n          && (interaction.mouse === mouseEvent)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function ({ pointerId, mouseEvent, eventType }) {\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    let firstNonActive;\n\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !utils.contains(interaction.pointerIds, pointerId)) { continue; }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction;\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId }) {\n    for (const interaction of scope.interactions) {\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function ({ mouseEvent }) {\n    for (const interaction of scope.interactions) {\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        const target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n        continue;\n      }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nmodule.exports = finder;\n","const win        = require('./window');\nconst isWindow   = require('./isWindow');\nconst domObjects = require('./domObjects');\n\nconst isType = {\n  isElement  : function (o) {\n    if (!o || (typeof o !== 'object')) { return false; }\n\n    const _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element)\n      ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string');\n  },\n\n  isArray    : null,\n\n  isWindow   : function (thing) { return thing === win.window || isWindow(thing); },\n\n  isDocFrag  : function (thing) { return isType.isObject(thing) && thing.nodeType === 11; },\n\n  isObject   : function (thing) { return !!thing && (typeof thing === 'object'); },\n\n  isFunction : function (thing) { return typeof thing === 'function'; },\n\n  isNumber   : function (thing) { return typeof thing === 'number'  ; },\n\n  isBool     : function (thing) { return typeof thing === 'boolean' ; },\n\n  isString   : function (thing) { return typeof thing === 'string'  ; },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) { return false; }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  },\n};\n\nisType.isArray = function (thing) {\n  return (isType.isObject(thing)\n      && (typeof thing.length !== 'undefined')\n      && isType.isFunction(thing.splice));\n};\n\nmodule.exports = isType;\n","module.exports = (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","function pointerExtend (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = module.exports.prefixedPropREs;\n    let deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated) {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n};\n\nmodule.exports = pointerExtend;\n","const hypot         = require('./hypot');\nconst browser       = require('./browser');\nconst dom           = require('./domObjects');\nconst isType        = require('./isType');\nconst pointerExtend = require('./pointerExtend');\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x;\n    targetObj.page.y    = cur.page.y    - prev.page.y;\n    targetObj.client.x  = cur.client.x  - prev.client.x;\n    targetObj.client.y  = cur.client.y  - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    const dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx      = targetObj.page.x / dt;\n    targetObj.page.vy      = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx    = targetObj.client.x / dt;\n    targetObj.client.vy    = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    const pointer = (pointers.length > 1\n                     ? pointerUtils.pointerAverage(pointers)\n                     : pointers[0]);\n\n    const tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp :new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    deltaSource = deltaSource;\n\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[1][sourceX] - touches[0][sourceX];\n    const dy = touches[1][sourceY] - touches[0][sourceY];\n    const angle = 180 * Math.atan2(dy , dx) / Math.PI;\n\n    return  angle;\n  },\n};\n\nmodule.exports = pointerUtils;\n","const vendors = ['ms', 'moz', 'webkit', 'o'];\nlet lastTime = 0;\nlet request;\nlet cancel;\n\nfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] +'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = setTimeout(function () { callback(currTime + timeToCall); },\n                          timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request,\n  cancel,\n};\n","const win = module.exports;\nconst isWindow = require('./isWindow');\n\nfunction init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nwin.getWindow = function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n"],"sourceRoot":"/source/"}