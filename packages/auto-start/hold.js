function install(scope) {
    const { autoStart, interactions, defaults, } = scope;
    defaults.perAction.hold = 0;
    defaults.perAction.delay = 0;
    interactions.signals.on('new', (interaction) => {
        interaction.autoStartHoldTimer = null;
    });
    autoStart.signals.on('prepared', ({ interaction }) => {
        const hold = getHoldDuration(interaction);
        if (hold > 0) {
            interaction.autoStartHoldTimer = setTimeout(() => {
                interaction.start(interaction.prepared, interaction.target, interaction.element);
            }, hold);
        }
    });
    interactions.signals.on('move', ({ interaction, duplicate }) => {
        if (interaction.pointerWasMoved && !duplicate) {
            clearTimeout(interaction.autoStartHoldTimer);
        }
    });
    // prevent regular down->move autoStart
    autoStart.signals.on('before-start', ({ interaction }) => {
        const hold = getHoldDuration(interaction);
        if (hold > 0) {
            interaction.prepared.name = null;
        }
    });
}
function getHoldDuration(interaction) {
    const actionName = interaction.prepared && interaction.prepared.name;
    if (!actionName) {
        return null;
    }
    const options = interaction.target.options;
    return options[actionName].hold || options[actionName].delay;
}
export default {
    install,
    getHoldDuration,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9sZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhvbGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU0EsU0FBUyxPQUFPLENBQUUsS0FBWTtJQUM1QixNQUFNLEVBQ0osU0FBUyxFQUNULFlBQVksRUFDWixRQUFRLEdBQ1QsR0FBRyxLQUFLLENBQUE7SUFFVCxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUE7SUFDM0IsUUFBUSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFBO0lBRTVCLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzdDLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUE7SUFDdkMsQ0FBQyxDQUFDLENBQUE7SUFFRixTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUU7UUFDbkQsTUFBTSxJQUFJLEdBQUcsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBRXpDLElBQUksSUFBSSxHQUFHLENBQUMsRUFBRTtZQUNaLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUMvQyxXQUFXLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUE7WUFDbEYsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFBO1NBQ1Q7SUFDSCxDQUFDLENBQUMsQ0FBQTtJQUVGLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUU7UUFDN0QsSUFBSSxXQUFXLENBQUMsZUFBZSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQzdDLFlBQVksQ0FBQyxXQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtTQUM3QztJQUNILENBQUMsQ0FBQyxDQUFBO0lBRUYsdUNBQXVDO0lBQ3ZDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLGNBQWMsRUFBRSxDQUFDLEVBQUUsV0FBVyxFQUFFLEVBQUUsRUFBRTtRQUN2RCxNQUFNLElBQUksR0FBRyxlQUFlLENBQUMsV0FBVyxDQUFDLENBQUE7UUFFekMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUFFO1lBQ1osV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFBO1NBQ2pDO0lBQ0gsQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDO0FBRUQsU0FBUyxlQUFlLENBQUUsV0FBVztJQUNuQyxNQUFNLFVBQVUsR0FBRyxXQUFXLENBQUMsUUFBUSxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFBO0lBRXBFLElBQUksQ0FBQyxVQUFVLEVBQUU7UUFBRSxPQUFPLElBQUksQ0FBQTtLQUFFO0lBRWhDLE1BQU0sT0FBTyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFBO0lBRTFDLE9BQU8sT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFBO0FBQzlELENBQUM7QUFFRCxlQUFlO0lBQ2IsT0FBTztJQUNQLGVBQWU7Q0FDaEIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbInR5cGUgU2NvcGUgPSBpbXBvcnQgKCdAaW50ZXJhY3Rqcy9jb3JlL3Njb3BlJykuU2NvcGVcblxuZGVjbGFyZSBtb2R1bGUgJ0BpbnRlcmFjdGpzL2NvcmUvZGVmYXVsdE9wdGlvbnMnIHtcbiAgaW50ZXJmYWNlIFBlckFjdGlvbkRlZmF1bHRzIHtcbiAgICBob2xkPzogbnVtYmVyXG4gICAgZGVsYXk/OiBudW1iZXJcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsIChzY29wZTogU2NvcGUpIHtcbiAgY29uc3Qge1xuICAgIGF1dG9TdGFydCxcbiAgICBpbnRlcmFjdGlvbnMsXG4gICAgZGVmYXVsdHMsXG4gIH0gPSBzY29wZVxuXG4gIGRlZmF1bHRzLnBlckFjdGlvbi5ob2xkID0gMFxuICBkZWZhdWx0cy5wZXJBY3Rpb24uZGVsYXkgPSAwXG5cbiAgaW50ZXJhY3Rpb25zLnNpZ25hbHMub24oJ25ldycsIChpbnRlcmFjdGlvbikgPT4ge1xuICAgIGludGVyYWN0aW9uLmF1dG9TdGFydEhvbGRUaW1lciA9IG51bGxcbiAgfSlcblxuICBhdXRvU3RhcnQuc2lnbmFscy5vbigncHJlcGFyZWQnLCAoeyBpbnRlcmFjdGlvbiB9KSA9PiB7XG4gICAgY29uc3QgaG9sZCA9IGdldEhvbGREdXJhdGlvbihpbnRlcmFjdGlvbilcblxuICAgIGlmIChob2xkID4gMCkge1xuICAgICAgaW50ZXJhY3Rpb24uYXV0b1N0YXJ0SG9sZFRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGludGVyYWN0aW9uLnN0YXJ0KGludGVyYWN0aW9uLnByZXBhcmVkLCBpbnRlcmFjdGlvbi50YXJnZXQsIGludGVyYWN0aW9uLmVsZW1lbnQpXG4gICAgICB9LCBob2xkKVxuICAgIH1cbiAgfSlcblxuICBpbnRlcmFjdGlvbnMuc2lnbmFscy5vbignbW92ZScsICh7IGludGVyYWN0aW9uLCBkdXBsaWNhdGUgfSkgPT4ge1xuICAgIGlmIChpbnRlcmFjdGlvbi5wb2ludGVyV2FzTW92ZWQgJiYgIWR1cGxpY2F0ZSkge1xuICAgICAgY2xlYXJUaW1lb3V0KGludGVyYWN0aW9uLmF1dG9TdGFydEhvbGRUaW1lcilcbiAgICB9XG4gIH0pXG5cbiAgLy8gcHJldmVudCByZWd1bGFyIGRvd24tPm1vdmUgYXV0b1N0YXJ0XG4gIGF1dG9TdGFydC5zaWduYWxzLm9uKCdiZWZvcmUtc3RhcnQnLCAoeyBpbnRlcmFjdGlvbiB9KSA9PiB7XG4gICAgY29uc3QgaG9sZCA9IGdldEhvbGREdXJhdGlvbihpbnRlcmFjdGlvbilcblxuICAgIGlmIChob2xkID4gMCkge1xuICAgICAgaW50ZXJhY3Rpb24ucHJlcGFyZWQubmFtZSA9IG51bGxcbiAgICB9XG4gIH0pXG59XG5cbmZ1bmN0aW9uIGdldEhvbGREdXJhdGlvbiAoaW50ZXJhY3Rpb24pIHtcbiAgY29uc3QgYWN0aW9uTmFtZSA9IGludGVyYWN0aW9uLnByZXBhcmVkICYmIGludGVyYWN0aW9uLnByZXBhcmVkLm5hbWVcblxuICBpZiAoIWFjdGlvbk5hbWUpIHsgcmV0dXJuIG51bGwgfVxuXG4gIGNvbnN0IG9wdGlvbnMgPSBpbnRlcmFjdGlvbi50YXJnZXQub3B0aW9uc1xuXG4gIHJldHVybiBvcHRpb25zW2FjdGlvbk5hbWVdLmhvbGQgfHwgb3B0aW9uc1thY3Rpb25OYW1lXS5kZWxheVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGluc3RhbGwsXG4gIGdldEhvbGREdXJhdGlvbixcbn1cbiJdfQ==