[{"comment":"/** @article /home/taye/proj/interact.js/docs/index.md **/","meta":{"filename":"index.md","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/docs","code":{},"shortpath":"docs/index.md"},"kind":"article","source":"\n<img\n  style=\"background-color: #272822; display: block; margin: auto; max-height: 8em; width: 100%\"\n  alt=\"interact.js\"\n  src=\"img/ijs-anim-short.svg\">\n","name":"index","filename":"index.md","title":"API Reference","longname":"article:index","description":"<p><img\n  style=\"background-color: #272822; display: block; margin: auto; max-height: 8em; width: 100%\"\n  alt=\"interact.js\"\n  src=\"img/ijs-anim-short.svg\"></p>","outfilename":"index.html","scope":"global","___id":"T000002R006019","___s":true,"attribs":"","id":"index","ancestors":[]},{"comment":"/**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */","meta":{"range":[157,714],"filename":"DropEvent.js","lineno":3,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100000533","name":"DropEvent","type":"MethodDefinition","paramnames":["dropStatus","dragEvent","type"]},"vars":{"":null},"shortpath":"packages/actions/drop/DropEvent.js"},"description":"<p>Class of events fired on dropzones during drags with acceptable targets.</p>","name":"DropEvent","longname":"DropEvent","kind":"class","scope":"global","params":[],"___id":"T000003R000002","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"DropEvent","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */","meta":{"range":[227,701],"filename":"DropEvent.ts","lineno":19,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100028836","name":"DropEvent","type":"MethodDefinition","paramnames":["dropStatus","dragEvent","type"]},"vars":{"":null},"shortpath":"packages/actions/drop/DropEvent.ts"},"description":"<p>Class of events fired on dropzones during drags with acceptable targets.</p>","name":"DropEvent","longname":"DropEvent","kind":"class","scope":"global","params":[],"___id":"T000003R000003","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"DropEvent","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */","meta":{"range":[935,2035],"filename":"DropEvent.js","lineno":22,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100000631","name":"DropEvent#reject","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/actions/drop/DropEvent.js"},"description":"<p>If this is a <code>dropactivate</code> event, the dropzone element will be\ndeactivated.</p>\n<p>If this is a <code>dragmove</code> or <code>dragenter</code>, a <code>dragleave</code> will be fired on the\ndropzone element and more.</p>","name":"reject","longname":"DropEvent#reject","kind":"function","memberof":"DropEvent","scope":"instance","params":[],"___id":"T000002R000064","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"reject","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"DropEvent.html\">DropEvent</a>#"]},{"comment":"/**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */","meta":{"range":[922,2022],"filename":"DropEvent.ts","lineno":38,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100028922","name":"DropEvent#reject","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/actions/drop/DropEvent.ts"},"description":"<p>If this is a <code>dropactivate</code> event, the dropzone element will be\ndeactivated.</p>\n<p>If this is a <code>dragmove</code> or <code>dragenter</code>, a <code>dragleave</code> will be fired on the\ndropzone element and more.</p>","name":"reject","longname":"DropEvent#reject","kind":"function","memberof":"DropEvent","scope":"instance","params":[],"___id":"T000002R003073","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"reject","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"DropEvent.html\">DropEvent</a>#"]},{"comment":"/**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */","meta":{"range":[2401,2509],"filename":"interactablePreventDefault.js","lineno":55,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009755","name":"Interactable.prototype.preventDefault","type":"FunctionExpression","funcscope":"install","paramnames":["newValue"]},"shortpath":"packages/core/interactablePreventDefault.js"},"description":"<p>Returns or sets whether to prevent the browser's default behaviour in\nresponse to pointer events. Can be set to:</p>\n<ul>\n<li><code>'always'</code> to always prevent</li>\n<li><code>'never'</code> to never prevent</li>\n<li><code>'auto'</code> to let interact.js try to determine what would be best</li>\n</ul>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p><code>'always'</code>, <code>'never'</code> or <code>'auto'</code></p>","name":"newValue"}],"returns":[{"type":{"names":["string","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"preventDefault","longname":"install~Interactable#preventDefault","kind":"function","memberof":"install~Interactable","scope":"instance","___id":"T000002R000892","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"preventDefault","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {string|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":[]},{"comment":"/**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */","meta":{"range":[2401,2509],"filename":"interactablePreventDefault.ts","lineno":68,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100038034","name":"Interactable.prototype.preventDefault","type":"FunctionExpression","funcscope":"install","paramnames":["newValue"]},"shortpath":"packages/core/interactablePreventDefault.ts"},"description":"<p>Returns or sets whether to prevent the browser's default behaviour in\nresponse to pointer events. Can be set to:</p>\n<ul>\n<li><code>'always'</code> to always prevent</li>\n<li><code>'never'</code> to never prevent</li>\n<li><code>'auto'</code> to let interact.js try to determine what would be best</li>\n</ul>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p><code>'always'</code>, <code>'never'</code> or <code>'auto'</code></p>","name":"newValue"}],"returns":[{"type":{"names":["string","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"preventDefault","longname":"install~Interactable#preventDefault","kind":"function","memberof":"install~Interactable","scope":"instance","___id":"T000002R003901","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"preventDefault","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {string|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":[]},{"comment":"/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */","meta":{"range":[905,1191],"filename":"interact.js","lineno":8,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015474","name":"exports.interact","type":"VariableDeclaration"},"shortpath":"packages/interact/interact.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact('#draggable').draggable(true)\n\nvar rectables = interact('rect')\nrectables\n  .gesturable(true)\n  .on('gesturemove', function (event) {\n      // ...\n  })\n</code></pre>\n<p>The methods of this variable can be used to set elements as interactables\nand also to change various default settings.</p>\n<p>Calling it as a function and passing an element or a valid CSS selector\nstring returns an Interactable object which has various methods to configure\nit.</p>","scope":"global","params":[{"type":{"names":["Element","string"]},"description":"<p>The HTML or SVG Element to interact with\nor CSS selector</p>","name":"target"}],"returns":[{"type":{"names":["Interactable"]}}],"name":"interact","longname":"interact","kind":"member","___id":"T000002R001503","___s":true,"attribs":"<span class=\"type-signature\">(constant) </span>","id":"interact","ancestors":[],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */","meta":{"range":[905,1191],"filename":"interact.ts","lineno":48,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100043645","name":"exports.interact","type":"VariableDeclaration"},"shortpath":"packages/interact/interact.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact('#draggable').draggable(true)\n\nvar rectables = interact('rect')\nrectables\n  .gesturable(true)\n  .on('gesturemove', function (event) {\n      // ...\n  })\n</code></pre>\n<p>The methods of this variable can be used to set elements as interactables\nand also to change various default settings.</p>\n<p>Calling it as a function and passing an element or a valid CSS selector\nstring returns an Interactable object which has various methods to configure\nit.</p>","scope":"global","params":[{"type":{"names":["Element","string"]},"description":"<p>The HTML or SVG Element to interact with\nor CSS selector</p>","name":"target"}],"returns":[{"type":{"names":["Interactable"]}}],"name":"interact","longname":"interact","kind":"member","___id":"T000002R004512","___s":true,"attribs":"<span class=\"type-signature\">(constant) </span>","id":"interact","ancestors":[],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */","meta":{"range":[5283,5577],"filename":"index.js","lineno":124,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100001222","name":"interact.dynamicDrop","type":"FunctionExpression","paramnames":["newValue"]},"vars":{"scope.dynamicDrop":"scope.dynamicDrop"},"shortpath":"packages/actions/drop/index.js"},"description":"<p>Returns or sets whether the dimensions of dropzone elements are calculated\non every dragmove or only on dragstart for the default dropChecker</p>","params":[{"type":{"names":["boolean"]},"optional":true,"description":"<p>True to check on each move. False to check only\nbefore start</p>","name":"newValue"}],"returns":[{"type":{"names":["boolean","interact"]},"description":"<p>The current setting or interact</p>"}],"name":"dynamicDrop","longname":"interact.dynamicDrop","kind":"function","memberof":"interact","scope":"static","___id":"T000002R000124","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".dynamicDrop","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"global.html#interact\">interact</a>}</span>","ancestors":["<a href=\"global.html#interact\">interact</a>."]},{"comment":"/** */","meta":{"range":[575,910],"filename":"Interactable.js","lineno":15,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100008544","name":"exports.Interactable","type":"MethodDefinition","paramnames":["target","options","defaultContext"]},"shortpath":"packages/core/Interactable.js"},"name":"Interactable","longname":"Interactable","kind":"class","memberof":"Interactable","scope":"instance","params":[],"___id":"T000003R000004","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Interactable","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[685,985],"filename":"Interactable.ts","lineno":24,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100036840","name":"exports.Interactable","type":"MethodDefinition","paramnames":["target","options","defaultContext"]},"shortpath":"packages/core/Interactable.ts"},"name":"Interactable","longname":"Interactable","kind":"class","memberof":"Interactable","scope":"instance","params":[],"___id":"T000003R000005","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Interactable","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *   if (interact.matchesSelector(event.target, '.drag-handle') {\n   *     // force drag with handle target\n   *     action.name = drag;\n   *   }\n   *   else {\n   *     // resize from the top and right edges\n   *     action.name  = 'resize';\n   *     action.edges = { top: true, right: true };\n   *   }\n   *\n   *   return action;\n   * });\n   * ```\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */","meta":{"range":[3678,3730],"filename":"InteractableMethods.js","lineno":70,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100007852","name":"Interactable.prototype.actionChecker","type":"Identifier","value":"actionChecker","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact('.resize-drag')\n  .resizable(true)\n  .draggable(true)\n  .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n\n  if (interact.matchesSelector(event.target, '.drag-handle') {\n    // force drag with handle target\n    action.name = drag;\n  }\n  else {\n    // resize from the top and right edges\n    action.name  = 'resize';\n    action.edges = { top: true, right: true };\n  }\n\n  return action;\n});\n</code></pre>\n<p>Gets or sets the function used to check action to be performed on\npointerDown</p>","params":[{"type":{"names":["function","null"]},"optional":true,"description":"<p>A function which takes a pointer event,\ndefaultAction string, interactable, element and interaction as parameters\nand returns an object with name property 'drag' 'resize' or 'gesture' and\noptionally an <code>edges</code> object with boolean 'top', 'left', 'bottom' and right\nprops.</p>","name":"checker"}],"returns":[{"type":{"names":["function","Interactable"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"actionChecker","longname":"Interactable#actionChecker","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000757","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"actionChecker","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *   if (interact.matchesSelector(event.target, '.drag-handle') {\n   *     // force drag with handle target\n   *     action.name = drag;\n   *   }\n   *   else {\n   *     // resize from the top and right edges\n   *     action.name  = 'resize';\n   *     action.edges = { top: true, right: true };\n   *   }\n   *\n   *   return action;\n   * });\n   * ```\n   *\n   * Gets or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */","meta":{"range":[3792,3844],"filename":"InteractableMethods.ts","lineno":108,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100036147","name":"Interactable.prototype.actionChecker","type":"Identifier","value":"actionChecker","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact('.resize-drag')\n  .resizable(true)\n  .draggable(true)\n  .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n\n  if (interact.matchesSelector(event.target, '.drag-handle') {\n    // force drag with handle target\n    action.name = drag;\n  }\n  else {\n    // resize from the top and right edges\n    action.name  = 'resize';\n    action.edges = { top: true, right: true };\n  }\n\n  return action;\n});\n</code></pre>\n<p>Gets or sets the function used to check action to be performed on\npointerDown</p>","params":[{"type":{"names":["function","null"]},"optional":true,"description":"<p>A function which takes a pointer event,\ndefaultAction string, interactable, element and interaction as parameters\nand returns an object with name property 'drag' 'resize' or 'gesture' and\noptionally an <code>edges</code> object with boolean 'top', 'left', 'bottom' and right\nprops.</p>","name":"checker"}],"returns":[{"type":{"names":["function","Interactable"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"actionChecker","longname":"Interactable#actionChecker","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R003766","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"actionChecker","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * @deprecated\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   });\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */","meta":{"range":[2228,2455],"filename":"InteractableMethods.js","lineno":41,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100007808","name":"Interactable.prototype.allowFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.js"},"deprecated":"A drag/resize/gesture is started only If the target of the `mousedown`,\n`pointerdown` or `touchstart` event or any of it's parents match the given\nCSS selector or Element.\n\nDon't use this method. Instead set the `allowFrom` option for each action\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\n  .resizable({\n    allowFrom: '.resize-handle',\n  .pointerEvents({\n    allowFrom: '.handle',,\n  });"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\nElement or <code>null</code> to allow from any element</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current allowFrom value or this\nInteractable</p>"}],"name":"allowFrom","longname":"Interactable#allowFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000753","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"allowFrom","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * @deprecated\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   });\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */","meta":{"range":[2342,2569],"filename":"InteractableMethods.ts","lineno":75,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100036103","name":"Interactable.prototype.allowFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.ts"},"deprecated":"A drag/resize/gesture is started only If the target of the `mousedown`,\n`pointerdown` or `touchstart` event or any of it's parents match the given\nCSS selector or Element.\n\nDon't use this method. Instead set the `allowFrom` option for each action\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\n  .resizable({\n    allowFrom: '.resize-handle',\n  .pointerEvents({\n    allowFrom: '.handle',,\n  });"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\nElement or <code>null</code> to allow from any element</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current allowFrom value or this\nInteractable</p>"}],"name":"allowFrom","longname":"Interactable#allowFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R003762","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"allowFrom","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */","meta":{"range":[5669,5710],"filename":"Interactable.js","lineno":159,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009088","name":"Interactable#context","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Gets the selector context Node of the Interactable. The default is\n<code>window.document</code>.</p>","returns":[{"type":{"names":["Node"]},"description":"<p>The context Node of this Interactable</p>"}],"name":"context","longname":"Interactable#context","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R000853","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"context","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Node}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */","meta":{"range":[5663,5704],"filename":"Interactable.ts","lineno":190,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037367","name":"Interactable#context","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Gets the selector context Node of the Interactable. The default is\n<code>window.document</code>.</p>","returns":[{"type":{"names":["Node"]},"description":"<p>The context Node of this Interactable</p>"}],"name":"context","longname":"Interactable#context","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R003862","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"context","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Node}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */","meta":{"range":[5304,5493],"filename":"Interactable.js","lineno":144,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009058","name":"Interactable#deltaSource","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Returns or sets the mouse coordinate types used to calculate the\nmovement of the pointer.</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Use 'client' if you will be scrolling while\ninteracting; Use 'page' if you want autoScroll to work</p>","name":"newValue"}],"returns":[{"type":{"names":["string","object"]},"description":"<p>The current deltaSource or this Interactable</p>"}],"name":"deltaSource","longname":"Interactable#deltaSource","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000851","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"deltaSource","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {string|object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */","meta":{"range":[5298,5487],"filename":"Interactable.ts","lineno":172,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037337","name":"Interactable#deltaSource","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Returns or sets the mouse coordinate types used to calculate the\nmovement of the pointer.</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Use 'client' if you will be scrolling while\ninteracting; Use 'page' if you want autoScroll to work</p>","name":"newValue"}],"returns":[{"type":{"names":["string","object"]},"description":"<p>The current deltaSource or this Interactable</p>"}],"name":"deltaSource","longname":"Interactable#deltaSource","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003860","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"deltaSource","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {string|object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * });\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */","meta":{"range":[3113,3673],"filename":"drag.js","lineno":52,"columnno":0,"path":"/home/taye/proj/interact.js/packages/actions","code":{"id":"astnode100000355","name":"draggable","type":"FunctionDeclaration","paramnames":["options"]},"vars":{"this.options.drag.enabled":"Interactable#draggable#options.drag.enabled","this.options.drag.lockAxis":"Interactable#draggable#options.drag.lockAxis","this.options.drag.startAxis":"Interactable#draggable#options.drag.startAxis"},"shortpath":"packages/actions/drag.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element).draggable({\n    onstart: function (event) {},\n    onmove : function (event) {},\n    onend  : function (event) {},\n\n    // the axis in which the first movement must be\n    // for the drag sequence to start\n    // 'xy' by default - any direction\n    startAxis: 'x' || 'y' || 'xy',\n\n    // 'xy' by default - don't restrict to one axis (move in any direction)\n    // 'x' or 'y' to restrict movement to either axis\n    // 'start' to restrict movement to the axis the drag started in\n    lockAxis: 'x' || 'y' || 'xy' || 'start',\n\n    // max number of drags that can happen concurrently\n    // with elements of this Interactable. Infinity by default\n    max: Infinity,\n\n    // max number of drags that can target the same element+Interactable\n    // 1 by default\n    maxPerElement: 2\n});\n\nvar isDraggable = interact('element').draggable(); // true\n</code></pre>\n<p>Get or set whether drag actions can be performed on the target</p>","alias":"Interactable.prototype.draggable","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\nlisteners to be fired on drag events (object makes the Interactable\ndraggable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>boolean indicating if this can be the\ntarget of drag events, or this Interctable</p>"}],"name":"draggable","longname":"Interactable#draggable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000030","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"draggable","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * });\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */","meta":{"range":[3113,3673],"filename":"drag.ts","lineno":72,"columnno":0,"path":"/home/taye/proj/interact.js/packages/actions","code":{"id":"astnode100028654","name":"draggable","type":"FunctionDeclaration","paramnames":["options"]},"vars":{"this.options.drag.enabled":"Interactable#draggable#options.drag.enabled","this.options.drag.lockAxis":"Interactable#draggable#options.drag.lockAxis","this.options.drag.startAxis":"Interactable#draggable#options.drag.startAxis"},"shortpath":"packages/actions/drag.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element).draggable({\n    onstart: function (event) {},\n    onmove : function (event) {},\n    onend  : function (event) {},\n\n    // the axis in which the first movement must be\n    // for the drag sequence to start\n    // 'xy' by default - any direction\n    startAxis: 'x' || 'y' || 'xy',\n\n    // 'xy' by default - don't restrict to one axis (move in any direction)\n    // 'x' or 'y' to restrict movement to either axis\n    // 'start' to restrict movement to the axis the drag started in\n    lockAxis: 'x' || 'y' || 'xy' || 'start',\n\n    // max number of drags that can happen concurrently\n    // with elements of this Interactable. Infinity by default\n    max: Infinity,\n\n    // max number of drags that can target the same element+Interactable\n    // 1 by default\n    maxPerElement: 2\n});\n\nvar isDraggable = interact('element').draggable(); // true\n</code></pre>\n<p>Get or set whether drag actions can be performed on the target</p>","alias":"Interactable.prototype.draggable","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\nlisteners to be fired on drag events (object makes the Interactable\ndraggable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>boolean indicating if this can be the\ntarget of drag events, or this Interctable</p>"}],"name":"draggable","longname":"Interactable#draggable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003039","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"draggable","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop');\n   * }\n   * ```\n   */","meta":{"range":[4727,4943],"filename":"index.js","lineno":106,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100001197","name":"Interactable.prototype.dropCheck","type":"FunctionExpression","paramnames":["dragEvent","event","draggable","draggableElement","dropElement","rect"]},"shortpath":"packages/actions/drop/index.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n.dropChecker(function(dragEvent,         // related dragmove or dragend event\n                      event,             // TouchEvent/PointerEvent/MouseEvent\n                      dropped,           // bool result of the default checker\n                      dropzone,          // dropzone Interactable\n                      dropElement,       // dropzone elemnt\n                      draggable,         // draggable Interactable\n                      draggableElement) {// draggable element\n\n  return dropped && event.target.hasAttribute('allow-drop');\n}\n</code></pre>","name":"dropCheck","longname":"Interactable#dropCheck","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000123","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"dropCheck","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop');\n   * }\n   * ```\n   */","meta":{"range":[5144,5360],"filename":"index.ts","lineno":162,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100029492","name":"Interactable.prototype.dropCheck","type":"FunctionExpression","paramnames":["dragEvent","event","draggable","draggableElement","dropElement","rect"]},"shortpath":"packages/actions/drop/index.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n.dropChecker(function(dragEvent,         // related dragmove or dragend event\n                      event,             // TouchEvent/PointerEvent/MouseEvent\n                      dropped,           // bool result of the default checker\n                      dropzone,          // dropzone Interactable\n                      dropElement,       // dropzone elemnt\n                      draggable,         // draggable Interactable\n                      draggableElement) {// draggable element\n\n  return dropped && event.target.hasAttribute('allow-drop');\n}\n</code></pre>","name":"dropCheck","longname":"Interactable#dropCheck","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003132","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"dropCheck","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */","meta":{"range":[3963,4063],"filename":"index.js","lineno":63,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100001182","name":"Interactable.prototype.dropzone","type":"FunctionExpression","paramnames":["options"]},"shortpath":"packages/actions/drop/index.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact('.drop').dropzone({\n  accept: '.can-drop' || document.getElementById('single-drop'),\n  overlap: 'pointer' || 'center' || zeroToOne\n}\n</code></pre>\n<p>Returns or sets whether draggables can be dropped onto this target to\ntrigger drop events</p>\n<p>Dropzones can receive the following events:</p>\n<ul>\n<li><code>dropactivate</code> and <code>dropdeactivate</code> when an acceptable drag starts and ends</li>\n<li><code>dragenter</code> and <code>dragleave</code> when a draggable enters and leaves the dropzone</li>\n<li><code>dragmove</code> when a draggable that has entered the dropzone is moved</li>\n<li><code>drop</code> when a draggable is dropped into this dropzone</li>\n</ul>\n<p>Use the <code>accept</code> option to allow only elements that match the given CSS\nselector or element. The value can be:</p>\n<ul>\n<li><strong>an Element</strong> - only that element can be dropped into this dropzone.</li>\n<li><strong>a string</strong>, - the element being dragged must match it as a CSS selector.</li>\n<li><strong><code>null</code></strong> - accept options is cleared - it accepts any element.</li>\n</ul>\n<p>Use the <code>overlap</code> option to set how drops are checked for. The allowed\nvalues are:</p>\n<ul>\n<li><code>'pointer'</code>, the pointer must be over the dropzone (default)</li>\n<li><code>'center'</code>, the draggable element's center must be over the dropzone</li>\n<li>a number from 0-1 which is the <code>(intersection area) / (draggable area)</code>.\ne.g. <code>0.5</code> for drop to happen when half of the area of the draggable is\nover the dropzone</li>\n</ul>\n<p>Use the <code>checker</code> option to specify a function to check if a dragged element\nis over this Interactable.</p>","params":[{"type":{"names":["boolean","object","null"]},"optional":true,"description":"<p>The new options to be set.</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"dropzone","longname":"Interactable#dropzone","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000122","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"dropzone","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */","meta":{"range":[4380,4480],"filename":"index.ts","lineno":118,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100029477","name":"Interactable.prototype.dropzone","type":"FunctionExpression","paramnames":["options"]},"shortpath":"packages/actions/drop/index.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact('.drop').dropzone({\n  accept: '.can-drop' || document.getElementById('single-drop'),\n  overlap: 'pointer' || 'center' || zeroToOne\n}\n</code></pre>\n<p>Returns or sets whether draggables can be dropped onto this target to\ntrigger drop events</p>\n<p>Dropzones can receive the following events:</p>\n<ul>\n<li><code>dropactivate</code> and <code>dropdeactivate</code> when an acceptable drag starts and ends</li>\n<li><code>dragenter</code> and <code>dragleave</code> when a draggable enters and leaves the dropzone</li>\n<li><code>dragmove</code> when a draggable that has entered the dropzone is moved</li>\n<li><code>drop</code> when a draggable is dropped into this dropzone</li>\n</ul>\n<p>Use the <code>accept</code> option to allow only elements that match the given CSS\nselector or element. The value can be:</p>\n<ul>\n<li><strong>an Element</strong> - only that element can be dropped into this dropzone.</li>\n<li><strong>a string</strong>, - the element being dragged must match it as a CSS selector.</li>\n<li><strong><code>null</code></strong> - accept options is cleared - it accepts any element.</li>\n</ul>\n<p>Use the <code>overlap</code> option to set how drops are checked for. The allowed\nvalues are:</p>\n<ul>\n<li><code>'pointer'</code>, the pointer must be over the dropzone (default)</li>\n<li><code>'center'</code>, the draggable element's center must be over the dropzone</li>\n<li>a number from 0-1 which is the <code>(intersection area) / (draggable area)</code>.\ne.g. <code>0.5</code> for drop to happen when half of the area of the draggable is\nover the dropzone</li>\n</ul>\n<p>Use the <code>checker</code> option to specify a function to check if a dragged element\nis over this Interactable.</p>","params":[{"type":{"names":["boolean","object","null"]},"optional":true,"description":"<p>The new options to be set.</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"dropzone","longname":"Interactable#dropzone","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003131","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"dropzone","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */","meta":{"range":[6104,6169],"filename":"Interactable.js","lineno":172,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009116","name":"Interactable#fire","type":"MethodDefinition","paramnames":["iEvent"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Calls listeners for the given InteractEvent type bound globally\nand directly to this Interactable</p>","params":[{"type":{"names":["InteractEvent"]},"description":"<p>The InteractEvent object to be fired on this\nInteractable</p>","name":"iEvent"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>this Interactable</p>"}],"name":"fire","longname":"Interactable#fire","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000855","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"fire","signature":"<span class=\"signature\">(iEvent)</span><span class=\"type-signature\"> &rarr; {<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */","meta":{"range":[6098,6163],"filename":"Interactable.ts","lineno":205,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037395","name":"Interactable#fire","type":"MethodDefinition","paramnames":["iEvent"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Calls listeners for the given InteractEvent type bound globally\nand directly to this Interactable</p>","params":[{"type":{"names":["InteractEvent"]},"description":"<p>The InteractEvent object to be fired on this\nInteractable</p>","name":"iEvent"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>this Interactable</p>"}],"name":"fire","longname":"Interactable#fire","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003864","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"fire","signature":"<span class=\"signature\">(iEvent)</span><span class=\"type-signature\"> &rarr; {<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * });\n   *\n   * var isGestureable = interact(element).gesturable();\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */","meta":{"range":[1016,1430],"filename":"gesture.js","lineno":5,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions","code":{"id":"astnode100002841","name":"Interactable.prototype.gesturable","type":"FunctionExpression","paramnames":["options"]},"vars":{"this.options.gesture.enabled":"Interactable#gesturable#options.gesture.enabled"},"shortpath":"packages/actions/gesture.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element).gesturable({\n    onstart: function (event) {},\n    onmove : function (event) {},\n    onend  : function (event) {},\n\n    // limit multiple gestures.\n    // See the explanation in {@link Interactable.draggable} example\n    max: Infinity,\n    maxPerElement: 1,\n});\n\nvar isGestureable = interact(element).gesturable();\n</code></pre>\n<p>Gets or sets whether multitouch gestures can be performed on the target</p>","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\nlisteners to be fired on gesture events (makes the Interactable gesturable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>A boolean indicating if this can be the\ntarget of gesture events, or this Interactable</p>"}],"name":"gesturable","longname":"Interactable#gesturable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000255","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"gesturable","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * });\n   *\n   * var isGestureable = interact(element).gesturable();\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */","meta":{"range":[1016,1430],"filename":"gesture.ts","lineno":13,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions","code":{"id":"astnode100031136","name":"Interactable.prototype.gesturable","type":"FunctionExpression","paramnames":["options"]},"vars":{"this.options.gesture.enabled":"Interactable#gesturable#options.gesture.enabled"},"shortpath":"packages/actions/gesture.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element).gesturable({\n    onstart: function (event) {},\n    onmove : function (event) {},\n    onend  : function (event) {},\n\n    // limit multiple gestures.\n    // See the explanation in {@link Interactable.draggable} example\n    max: Infinity,\n    maxPerElement: 1,\n});\n\nvar isGestureable = interact(element).gesturable();\n</code></pre>\n<p>Gets or sets whether multitouch gestures can be performed on the target</p>","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\nlisteners to be fired on gesture events (makes the Interactable gesturable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>A boolean indicating if this can be the\ntarget of gesture events, or this Interactable</p>"}],"name":"gesturable","longname":"Interactable#gesturable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003264","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"gesturable","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */","meta":{"range":[3360,3602],"filename":"Interactable.js","lineno":86,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100008906","name":"Interactable#getRect","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>The default function to get an Interactables bounding rect. Can be\noverridden using {@link Interactable.rectChecker}.</p>","params":[{"type":{"names":["Element"]},"optional":true,"description":"<p>The element to measure.</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>The object's bounding rectangle.</p>"}],"name":"getRect","longname":"Interactable#getRect","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000841","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getRect","signature":"<span class=\"signature\">(element<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */","meta":{"range":[3354,3596],"filename":"Interactable.ts","lineno":101,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037185","name":"Interactable#getRect","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>The default function to get an Interactables bounding rect. Can be\noverridden using {@link Interactable.rectChecker}.</p>","params":[{"type":{"names":["Element"]},"optional":true,"description":"<p>The element to measure.</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>The object's bounding rectangle.</p>"}],"name":"getRect","longname":"Interactable#getRect","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003850","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getRect","signature":"<span class=\"signature\">(element<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(element, { ignoreFrom: document.getElementById('no-action') });\n   * // or\n   * interact(element).ignoreFrom('input, textarea, a');\n   * ```\n   * @deprecated\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   });\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */","meta":{"range":[1268,1499],"filename":"InteractableMethods.js","lineno":10,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100007788","name":"Interactable.prototype.ignoreFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element, { ignoreFrom: document.getElementById('no-action') });\n// or\ninteract(element).ignoreFrom('input, textarea, a');\n</code></pre>","deprecated":"If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\nof it's parents match the given CSS selector or Element, no\ndrag/resize/gesture is started.\n\nDon't use this method. Instead set the `ignoreFrom` option for each action\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\n  .draggable({\n    ignoreFrom: 'input, textarea, a[href]'',\n  })\n  .pointerEvents({\n    ignoreFrom: '[no-pointer]',\n  });"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\nElement or <code>null</code> to not ignore any elements</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current ignoreFrom value or this\nInteractable</p>"}],"name":"ignoreFrom","longname":"Interactable#ignoreFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000752","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"ignoreFrom","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * ```js\n   * interact(element, { ignoreFrom: document.getElementById('no-action') });\n   * // or\n   * interact(element).ignoreFrom('input, textarea, a');\n   * ```\n   * @deprecated\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   });\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */","meta":{"range":[1382,1613],"filename":"InteractableMethods.ts","lineno":43,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100036083","name":"Interactable.prototype.ignoreFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element, { ignoreFrom: document.getElementById('no-action') });\n// or\ninteract(element).ignoreFrom('input, textarea, a');\n</code></pre>","deprecated":"If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\nof it's parents match the given CSS selector or Element, no\ndrag/resize/gesture is started.\n\nDon't use this method. Instead set the `ignoreFrom` option for each action\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\n  .draggable({\n    ignoreFrom: 'input, textarea, a[href]'',\n  })\n  .pointerEvents({\n    ignoreFrom: '[no-pointer]',\n  });"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\nElement or <code>null</code> to not ignore any elements</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current ignoreFrom value or this\nInteractable</p>"}],"name":"ignoreFrom","longname":"Interactable#ignoreFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R003761","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"ignoreFrom","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */","meta":{"range":[8039,8131],"filename":"Interactable.js","lineno":225,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009279","name":"Interactable#off","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Removes an InteractEvent, pointerEvent or DOM event listener.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were\nlistened for</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"off","longname":"Interactable#off","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000865","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"off","signature":"<span class=\"signature\">(types, listener<span class=\"signature-attributes\">opt</span>, options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */","meta":{"range":[8033,8125],"filename":"Interactable.ts","lineno":264,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037558","name":"Interactable#off","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Removes an InteractEvent, pointerEvent or DOM event listener.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were\nlistened for</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"off","longname":"Interactable#off","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003874","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"off","signature":"<span class=\"signature\">(types, listener<span class=\"signature-attributes\">opt</span>, options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */","meta":{"range":[7536,7626],"filename":"Interactable.js","lineno":212,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009263","name":"Interactable#on","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Binds a listener for an InteractEvent, pointerEvent or DOM event.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen\nfor</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"on","longname":"Interactable#on","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000864","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"on","signature":"<span class=\"signature\">(types, listener<span class=\"signature-attributes\">opt</span>, options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */","meta":{"range":[7530,7620],"filename":"Interactable.ts","lineno":250,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037542","name":"Interactable#on","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Binds a listener for an InteractEvent, pointerEvent or DOM event.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen\nfor</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"on","longname":"Interactable#on","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003873","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"on","signature":"<span class=\"signature\">(types, listener<span class=\"signature-attributes\">opt</span>, options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */","meta":{"range":[4893,4970],"filename":"Interactable.js","lineno":131,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009046","name":"Interactable#origin","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Gets or sets the origin of the Interactable's element.  The x and y\nof the origin will be subtracted from action event coordinates.</p>","params":[{"type":{"names":["Element","object","string"]},"optional":true,"description":"<p>An HTML or SVG Element whose\nrect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\nor any CSS selector</p>","name":"origin"}],"returns":[{"type":{"names":["object"]},"description":"<p>The current origin or this Interactable</p>"}],"name":"origin","longname":"Interactable#origin","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000850","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"origin","signature":"<span class=\"signature\">(origin<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */","meta":{"range":[4887,4964],"filename":"Interactable.ts","lineno":158,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037325","name":"Interactable#origin","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Gets or sets the origin of the Interactable's element.  The x and y\nof the origin will be subtracted from action event coordinates.</p>","params":[{"type":{"names":["Element","object","string"]},"optional":true,"description":"<p>An HTML or SVG Element whose\nrect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\nor any CSS selector</p>","name":"origin"}],"returns":[{"type":{"names":["object"]},"description":"<p>The current origin or this Interactable</p>"}],"name":"origin","longname":"Interactable#origin","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003859","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"origin","signature":"<span class=\"signature\">(origin<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */","meta":{"range":[3931,4155],"filename":"Interactable.js","lineno":102,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100008955","name":"Interactable#rectChecker","type":"MethodDefinition","paramnames":["checker"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Returns or sets the function used to calculate the interactable's\nelement's rectangle</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>A function which returns this Interactable's\nbounding rectangle. See {@link Interactable.getRect}</p>","name":"checker"}],"returns":[{"type":{"names":["function","object"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"rectChecker","longname":"Interactable#rectChecker","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000844","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"rectChecker","signature":"<span class=\"signature\">(checker<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {function|object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */","meta":{"range":[3925,4149],"filename":"Interactable.ts","lineno":120,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037234","name":"Interactable#rectChecker","type":"MethodDefinition","paramnames":["checker"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Returns or sets the function used to calculate the interactable's\nelement's rectangle</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>A function which returns this Interactable's\nbounding rectangle. See {@link Interactable.getRect}</p>","name":"checker"}],"returns":[{"type":{"names":["function","object"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"rectChecker","longname":"Interactable#rectChecker","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003853","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"rectChecker","signature":"<span class=\"signature\">(checker<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {function|object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * const interactable = interact(target);\n   * const drag = { name: drag, axis: 'x' };\n   * const resize = { name: resize, edges: { left: true, bottom: true };\n   *\n   * interactable.reflow(drag);\n   * interactable.reflow(resize);\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise<Interactable> }\n   */","meta":{"range":[1191,1286],"filename":"index.js","lineno":18,"columnno":2,"path":"/home/taye/proj/interact.js/packages/reflow","code":{"id":"astnode100021878","name":"Interactable.prototype.reflow","type":"FunctionExpression","paramnames":["action"]},"shortpath":"packages/reflow/index.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>const interactable = interact(target);\nconst drag = { name: drag, axis: 'x' };\nconst resize = { name: resize, edges: { left: true, bottom: true };\n\ninteractable.reflow(drag);\ninteractable.reflow(resize);\n</code></pre>\n<p>Start an action sequence to re-apply modifiers, check drops, etc.</p>","params":[{"type":{"names":["Object"]},"description":"<p>The action to begin</p>","name":"action","subparams":[{"type":{"names":["string"]},"description":"<p>The name of the action</p>","name":"name"}]},null],"returns":[{"type":{"names":["Promise.<Interactable>"]}}],"name":"reflow","longname":"Interactable#reflow","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002298","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"reflow","signature":"<span class=\"signature\">(action)</span><span class=\"type-signature\"> &rarr; {Promise.&lt;<a href=\"Interactable.html\">Interactable</a>>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * const interactable = interact(target);\n   * const drag = { name: drag, axis: 'x' };\n   * const resize = { name: resize, edges: { left: true, bottom: true };\n   *\n   * interactable.reflow(drag);\n   * interactable.reflow(resize);\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise<Interactable> }\n   */","meta":{"range":[1191,1286],"filename":"index.ts","lineno":34,"columnno":2,"path":"/home/taye/proj/interact.js/packages/reflow","code":{"id":"astnode100050057","name":"Interactable.prototype.reflow","type":"FunctionExpression","paramnames":["action"]},"shortpath":"packages/reflow/index.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>const interactable = interact(target);\nconst drag = { name: drag, axis: 'x' };\nconst resize = { name: resize, edges: { left: true, bottom: true };\n\ninteractable.reflow(drag);\ninteractable.reflow(resize);\n</code></pre>\n<p>Start an action sequence to re-apply modifiers, check drops, etc.</p>","params":[{"type":{"names":["Object"]},"description":"<p>The action to begin</p>","name":"action","subparams":[{"type":{"names":["string"]},"description":"<p>The name of the action</p>","name":"name"}]},null],"returns":[{"type":{"names":["Promise.<Interactable>"]}}],"name":"reflow","longname":"Interactable#reflow","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R005307","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"reflow","signature":"<span class=\"signature\">(action)</span><span class=\"type-signature\"> &rarr; {Promise.&lt;<a href=\"Interactable.html\">Interactable</a>>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * });\n   *\n   * var isResizeable = interact(element).resizable();\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */","meta":{"range":[2544,2647],"filename":"resize.js","lineno":17,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions","code":{"id":"astnode100003688","name":"Interactable.prototype.resizable","type":"FunctionExpression","paramnames":["options"]},"shortpath":"packages/actions/resize.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element).resizable({\n  onstart: function (event) {},\n  onmove : function (event) {},\n  onend  : function (event) {},\n\n  edges: {\n    top   : true,       // Use pointer coords to check for resize.\n    left  : false,      // Disable resizing from left edge.\n    bottom: '.resize-s',// Resize if pointer target matches selector\n    right : handleEl    // Resize if pointer target is the given Element\n  },\n\n    // Width and height can be adjusted independently. When `true`, width and\n    // height are adjusted at a 1:1 ratio.\n    square: false,\n\n    // Width and height can be adjusted independently. When `true`, width and\n    // height maintain the aspect ratio they had when resizing started.\n    preserveAspectRatio: false,\n\n  // a value of 'none' will limit the resize rect to a minimum of 0x0\n  // 'negate' will allow the rect to have negative width/height\n  // 'reposition' will keep the width/height positive by swapping\n  // the top and bottom edges and/or swapping the left and right edges\n  invert: 'none' || 'negate' || 'reposition'\n\n  // limit multiple resizes.\n  // See the explanation in the {@link Interactable.draggable} example\n  max: Infinity,\n  maxPerElement: 1,\n});\n\nvar isResizeable = interact(element).resizable();\n</code></pre>\n<p>Gets or sets whether resize actions can be performed on the target</p>","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\nlisteners to be fired on resize events (object makes the Interactable\nresizable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>A boolean indicating if this can be the\ntarget of resize elements, or this Interactable</p>"}],"name":"resizable","longname":"Interactable#resizable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000337","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"resizable","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * });\n   *\n   * var isResizeable = interact(element).resizable();\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */","meta":{"range":[2544,2647],"filename":"resize.ts","lineno":32,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions","code":{"id":"astnode100031983","name":"Interactable.prototype.resizable","type":"FunctionExpression","paramnames":["options"]},"shortpath":"packages/actions/resize.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(element).resizable({\n  onstart: function (event) {},\n  onmove : function (event) {},\n  onend  : function (event) {},\n\n  edges: {\n    top   : true,       // Use pointer coords to check for resize.\n    left  : false,      // Disable resizing from left edge.\n    bottom: '.resize-s',// Resize if pointer target matches selector\n    right : handleEl    // Resize if pointer target is the given Element\n  },\n\n    // Width and height can be adjusted independently. When `true`, width and\n    // height are adjusted at a 1:1 ratio.\n    square: false,\n\n    // Width and height can be adjusted independently. When `true`, width and\n    // height maintain the aspect ratio they had when resizing started.\n    preserveAspectRatio: false,\n\n  // a value of 'none' will limit the resize rect to a minimum of 0x0\n  // 'negate' will allow the rect to have negative width/height\n  // 'reposition' will keep the width/height positive by swapping\n  // the top and bottom edges and/or swapping the left and right edges\n  invert: 'none' || 'negate' || 'reposition'\n\n  // limit multiple resizes.\n  // See the explanation in the {@link Interactable.draggable} example\n  max: Infinity,\n  maxPerElement: 1,\n});\n\nvar isResizeable = interact(element).resizable();\n</code></pre>\n<p>Gets or sets whether resize actions can be performed on the target</p>","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\nlisteners to be fired on resize events (object makes the Interactable\nresizable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>A boolean indicating if this can be the\ntarget of resize elements, or this Interactable</p>"}],"name":"resizable","longname":"Interactable#resizable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003346","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"resizable","signature":"<span class=\"signature\">(options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"Interactable.html\">Interactable</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */","meta":{"range":[8292,8902],"filename":"Interactable.js","lineno":238,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009295","name":"Interactable#set","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Reset the options of this Interactable</p>","params":[{"type":{"names":["object"]},"description":"<p>The new settings to apply</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>This Interactable</p>"}],"name":"set","longname":"Interactable#set","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000866","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"set","signature":"<span class=\"signature\">(options)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */","meta":{"range":[8286,8896],"filename":"Interactable.ts","lineno":278,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037574","name":"Interactable#set","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Reset the options of this Interactable</p>","params":[{"type":{"names":["object"]},"description":"<p>The new settings to apply</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>This Interactable</p>"}],"name":"set","longname":"Interactable#set","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R003875","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"set","signature":"<span class=\"signature\">(options)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */","meta":{"range":[4018,4066],"filename":"InteractableMethods.js","lineno":102,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100007860","name":"Interactable.prototype.styleCursor","type":"Identifier","value":"styleCursor","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.js"},"description":"<p>Returns or sets whether the the cursor should be changed depending on the\naction that would be performed if the mouse were pressed and dragged.</p>","params":[{"type":{"names":["boolean"]},"optional":true,"name":"newValue"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"styleCursor","longname":"Interactable#styleCursor","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000758","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"styleCursor","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */","meta":{"range":[4132,4180],"filename":"InteractableMethods.ts","lineno":141,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100036155","name":"Interactable.prototype.styleCursor","type":"Identifier","value":"styleCursor","paramnames":[]},"shortpath":"packages/auto-start/InteractableMethods.ts"},"description":"<p>Returns or sets whether the the cursor should be changed depending on the\naction that would be performed if the mouse were pressed and dragged.</p>","params":[{"type":{"names":["boolean"]},"optional":true,"name":"newValue"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"styleCursor","longname":"Interactable#styleCursor","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R003767","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"styleCursor","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */","meta":{"range":[9070,9884],"filename":"Interactable.js","lineno":263,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009406","name":"Interactable#unset","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/Interactable.js"},"description":"<p>Remove this interactable from the list of interactables and remove it's\naction capabilities and event listeners</p>","returns":[{"type":{"names":["interact"]}}],"name":"unset","longname":"Interactable#unset","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R000874","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"unset","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {<a href=\"global.html#interact\">interact</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */","meta":{"range":[9064,9878],"filename":"Interactable.ts","lineno":311,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100037685","name":"Interactable#unset","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/Interactable.ts"},"description":"<p>Remove this interactable from the list of interactables and remove it's\naction capabilities and event listeners</p>","returns":[{"type":{"names":["interact"]}}],"name":"unset","longname":"Interactable#unset","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R003883","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"unset","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {<a href=\"global.html#interact\">interact</a>}</span>","ancestors":["<a href=\"Interactable.html\">#Interactable</a>#"]},{"comment":"/** */","meta":{"range":[230,2699],"filename":"InteractEvent.js","lineno":7,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100009886","name":"exports.InteractEvent","type":"MethodDefinition","paramnames":["interaction","event","actionName","phase","element","related","preEnd","type"]},"vars":{"":null},"shortpath":"packages/core/InteractEvent.js"},"name":"InteractEvent","longname":"InteractEvent#InteractEvent","kind":"class","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000003R000006","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"InteractEvent","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[479,2865],"filename":"InteractEvent.ts","lineno":18,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100038169","name":"exports.InteractEvent","type":"MethodDefinition","paramnames":["interaction","event","actionName","phase","element","related","preEnd","type"]},"vars":{"":null},"shortpath":"packages/core/InteractEvent.ts"},"name":"InteractEvent","longname":"InteractEvent#InteractEvent","kind":"class","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000003R000007","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"InteractEvent","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call listeners on the remaining targets\n   */","meta":{"range":[4489,4592],"filename":"InteractEvent.js","lineno":113,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100010735","name":"InteractEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/InteractEvent.js"},"description":"<p>Don't call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"InteractEvent#stopImmediatePropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R000994","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopImmediatePropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call listeners on the remaining targets\n   */","meta":{"range":[4655,4758],"filename":"InteractEvent.ts","lineno":183,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039006","name":"InteractEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/InteractEvent.ts"},"description":"<p>Don't call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"InteractEvent#stopImmediatePropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R004003","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopImmediatePropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call any other listeners (even on the current target)\n   */","meta":{"range":[4674,4733],"filename":"InteractEvent.js","lineno":119,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100010749","name":"InteractEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/InteractEvent.js"},"description":"<p>Don't call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"InteractEvent#stopPropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R000997","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopPropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call any other listeners (even on the current target)\n   */","meta":{"range":[4840,4899],"filename":"InteractEvent.ts","lineno":190,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039020","name":"InteractEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/InteractEvent.ts"},"description":"<p>Don't call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"InteractEvent#stopPropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R004006","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopPropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end();\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation();\n   *     }\n   *   });\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */","meta":{"range":[7272,7622],"filename":"Interaction.js","lineno":211,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100011553","name":"Interaction#end","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null},"shortpath":"packages/core/Interaction.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n  .draggable(true)\n  .on('move', function (event) {\n    if (event.pageX > 1000) {\n      // end the current action\n      event.interaction.end();\n      // stop all further listeners from being called\n      event.stopImmediatePropagation();\n    }\n  });\n</code></pre>","params":[{"type":{"names":["PointerEvent"]},"optional":true,"name":"event"}],"name":"end","longname":"Interaction#end","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R001085","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"end","signature":"<span class=\"signature\">(event<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end();\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation();\n   *     }\n   *   });\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */","meta":{"range":[7124,7474],"filename":"Interaction.ts","lineno":268,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039764","name":"Interaction#end","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null},"shortpath":"packages/core/Interaction.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n  .draggable(true)\n  .on('move', function (event) {\n    if (event.pageX > 1000) {\n      // end the current action\n      event.interaction.end();\n      // stop all further listeners from being called\n      event.stopImmediatePropagation();\n    }\n  });\n</code></pre>","params":[{"type":{"names":["PointerEvent"]},"optional":true,"name":"event"}],"name":"end","longname":"Interaction#end","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R004094","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"end","signature":"<span class=\"signature\">(event<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[168,1755],"filename":"Interaction.js","lineno":6,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100010779","name":"exports.Interaction","type":"MethodDefinition","paramnames":[""]},"vars":{"":null},"shortpath":"packages/core/Interaction.js"},"name":"Interaction","longname":"Interaction#Interaction","kind":"class","memberof":"Interaction","scope":"instance","params":[],"___id":"T000003R000008","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Interaction","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n     * @alias Interaction.prototype.move\n     */","meta":{"range":[1017,1177],"filename":"Interaction.js","lineno":34,"columnno":4,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100010879","name":"this.doMove","type":"CallExpression","value":"","paramnames":[]},"shortpath":"packages/core/Interaction.js"},"alias":"Interaction.prototype.move","name":"move","longname":"Interaction#move","kind":"member","memberof":"Interaction","scope":"instance","___id":"T000002R001024","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","ancestors":[],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }});\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move();\n   *     }\n   *   });\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */","meta":{"range":[5790,6111],"filename":"Interaction.js","lineno":158,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100011391","name":"Interaction#move","type":"MethodDefinition","paramnames":["signalArg"]},"vars":{"":null},"shortpath":"packages/core/Interaction.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n  .draggable(true)\n  .on('dragmove', function (event) {\n    if (someCondition) {\n      // change the snap settings\n      event.interactable.draggable({ snap: { targets: [] }});\n      // fire another move event with re-calculated snap\n      event.interaction.move();\n    }\n  });\n</code></pre>\n<p>Force a move of the current action at the same coordinates. Useful if\nsnap/restrict has been changed and you want a movement with the new\nsettings.</p>","name":"move","longname":"Interaction#move","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R001064","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * @alias Interaction.prototype.move\n   */","meta":{"range":[892,1044],"filename":"Interaction.ts","lineno":62,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039094","name":"doMove","type":"ClassProperty"},"shortpath":"packages/core/Interaction.ts"},"alias":"Interaction.prototype.move","name":"move","longname":"Interaction#move","kind":"member","memberof":"Interaction","scope":"instance","___id":"T000002R004031","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","ancestors":[],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }});\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move();\n   *     }\n   *   });\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */","meta":{"range":[5642,5963],"filename":"Interaction.ts","lineno":206,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039602","name":"Interaction#move","type":"MethodDefinition","paramnames":["signalArg"]},"vars":{"":null},"shortpath":"packages/core/Interaction.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n  .draggable(true)\n  .on('dragmove', function (event) {\n    if (someCondition) {\n      // change the snap settings\n      event.interactable.draggable({ snap: { targets: [] }});\n      // fire another move event with re-calculated snap\n      event.interaction.move();\n    }\n  });\n</code></pre>\n<p>Force a move of the current action at the same coordinates. Useful if\nsnap/restrict has been changed and you want a movement with the new\nsettings.</p>","name":"move","longname":"Interaction#move","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R004073","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction;\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget);\n   *     }\n   * });\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */","meta":{"range":[3233,3627],"filename":"Interaction.js","lineno":69,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100011002","name":"Interaction#start","type":"MethodDefinition","paramnames":["action","target","element"]},"vars":{"":null},"shortpath":"packages/core/Interaction.js"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n  .draggable({\n    // disable the default drag start by down->move\n    manualStart: true\n  })\n  // start dragging after the user holds the pointer down\n  .on('hold', function (event) {\n    var interaction = event.interaction;\n\n    if (!interaction.interacting()) {\n      interaction.start({ name: 'drag' },\n                        event.interactable,\n                        event.currentTarget);\n    }\n});\n</code></pre>\n<p>Start an action with the given Interactable and Element as tartgets. The\naction must be enabled for the target Interactable and an appropriate\nnumber of pointers must be held down - 1 for drag/resize, 2 for gesture.</p>\n<p>Use it with <code>interactable.&lt;action&gt;able({ manualStart: false })</code> to always\n<a href=\"https://github.com/taye/interact.js/issues/114\">start actions manually</a></p>","params":[{"type":{"names":["object"]},"description":"<p>The action to be performed - drag, resize, etc.</p>","name":"action"},{"type":{"names":["Interactable"]},"description":"<p>The Interactable to target</p>","name":"target"},{"type":{"names":["Element"]},"description":"<p>The DOM Element to target</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"start","longname":"Interaction#start","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R001041","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"start","signature":"<span class=\"signature\">(action, target, element)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":[]},{"comment":"/**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction;\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget);\n   *     }\n   * });\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */","meta":{"range":[3085,3479],"filename":"Interaction.ts","lineno":104,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039213","name":"Interaction#start","type":"MethodDefinition","paramnames":["action","target","element"]},"vars":{"":null},"shortpath":"packages/core/Interaction.ts"},"description":"<pre class=\"prettyprint source lang-js\"><code>interact(target)\n  .draggable({\n    // disable the default drag start by down->move\n    manualStart: true\n  })\n  // start dragging after the user holds the pointer down\n  .on('hold', function (event) {\n    var interaction = event.interaction;\n\n    if (!interaction.interacting()) {\n      interaction.start({ name: 'drag' },\n                        event.interactable,\n                        event.currentTarget);\n    }\n});\n</code></pre>\n<p>Start an action with the given Interactable and Element as tartgets. The\naction must be enabled for the target Interactable and an appropriate\nnumber of pointers must be held down - 1 for drag/resize, 2 for gesture.</p>\n<p>Use it with <code>interactable.&lt;action&gt;able({ manualStart: false })</code> to always\n<a href=\"https://github.com/taye/interact.js/issues/114\">start actions manually</a></p>","params":[{"type":{"names":["object"]},"description":"<p>The action to be performed - drag, resize, etc.</p>","name":"action"},{"type":{"names":["Interactable"]},"description":"<p>The Interactable to target</p>","name":"target"},{"type":{"names":["Element"]},"description":"<p>The DOM Element to target</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"start","longname":"Interaction#start","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R004050","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"start","signature":"<span class=\"signature\">(action, target, element)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":[]},{"comment":"/** */","meta":{"range":[7772,7968],"filename":"Interaction.js","lineno":285,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100011636","name":"Interaction#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/Interaction.js"},"name":"stop","longname":"Interaction#stop","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R001096","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stop","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[7624,7820],"filename":"Interaction.ts","lineno":288,"columnno":2,"path":"/home/taye/proj/interact.js/packages/core","code":{"id":"astnode100039847","name":"Interaction#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/core/Interaction.ts"},"name":"stop","longname":"Interaction#stop","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R004105","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stop","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[114,1192],"filename":"PointerEvent.js","lineno":6,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100021494","name":"module.exports","type":"MethodDefinition","paramnames":["type","pointer","event","eventTarget","interaction"]},"shortpath":"packages/pointer-events/PointerEvent.js"},"name":"exports","longname":"module.exports","kind":"class","memberof":"module","scope":"static","params":[],"___id":"T000003R000009","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"exports","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[184,1179],"filename":"PointerEvent.ts","lineno":9,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100049685","name":"module.exports","type":"MethodDefinition","paramnames":["type","pointer","event","eventTarget","interaction"]},"shortpath":"packages/pointer-events/PointerEvent.ts"},"name":"exports","longname":"module.exports","kind":"class","memberof":"module","scope":"static","params":[],"___id":"T000003R000010","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"exports","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/** @module interact */","meta":{"filename":"interact.js","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{},"shortpath":"packages/interact/interact.js"},"kind":"module","name":"interact","longname":"module:interact","___id":"T000004R000002","___s":true,"attribs":"","id":"interact","ancestors":[],"modules":[]},{"comment":"/** @module interact */","meta":{"filename":"interact.ts","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{},"shortpath":"packages/interact/interact.ts"},"kind":"module","name":"interact","longname":"module:interact","___id":"T000004R000003","___s":true,"attribs":"","id":"interact","ancestors":[],"modules":[]},{"comment":"/**\n * Returns an object which exposes internal data\n * @alias module:interact.debug\n *\n * @return {object} An object with properties that outline the current state\n * and expose internal functions and variables\n */","meta":{"range":[4674,4696],"filename":"interact.js","lineno":159,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015890","name":"interact.debug","type":"Identifier","value":"debug","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Returns an object which exposes internal data</p>","alias":"module:interact.debug","returns":[{"type":{"names":["object"]},"description":"<p>An object with properties that outline the current state\nand expose internal functions and variables</p>"}],"name":"debug","longname":"module:interact.debug","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001527","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".debug","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Returns an object which exposes internal data\n * @alias module:interact.debug\n *\n * @return {object} An object with properties that outline the current state\n * and expose internal functions and variables\n */","meta":{"range":[4674,4696],"filename":"interact.ts","lineno":221,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100044061","name":"interact.debug","type":"Identifier","value":"debug","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Returns an object which exposes internal data</p>","alias":"module:interact.debug","returns":[{"type":{"names":["object"]},"description":"<p>An object with properties that outline the current state\nand expose internal functions and variables</p>"}],"name":"debug","longname":"module:interact.debug","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004536","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".debug","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n */","meta":{"range":[1846,1868],"filename":"interact.js","lineno":60,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015566","name":"interact.isSet","type":"Identifier","value":"isSet","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Check if an element or selector has been set with the {@link interact}\nfunction</p>","alias":"module:interact.isSet","params":[{"type":{"names":["Element"]},"description":"<p>The Element being searched for</p>","name":"element"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Indicates if the element or CSS selector was previously\npassed to interact</p>"}],"name":"isSet","longname":"module:interact.isSet","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001511","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".isSet","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n */","meta":{"range":[1846,1868],"filename":"interact.ts","lineno":106,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100043737","name":"interact.isSet","type":"Identifier","value":"isSet","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Check if an element or selector has been set with the {@link interact}\nfunction</p>","alias":"module:interact.isSet","params":[{"type":{"names":["Element"]},"description":"<p>The Element being searched for</p>","name":"element"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Indicates if the element or CSS selector was previously\npassed to interact</p>"}],"name":"isSet","longname":"module:interact.isSet","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004520","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".isSet","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */","meta":{"range":[2802,2890],"filename":"base.js","lineno":63,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100006573","name":"interact.maxInteractions","type":"ArrowFunctionExpression","paramnames":["newValue"]},"shortpath":"packages/auto-start/base.js"},"description":"<p>Returns or sets the maximum number of concurrent interactions allowed.  By\ndefault only 1 interaction is allowed at a time (for backwards\ncompatibility). To allow multiple interactions on the same Interactables and\nelements, you need to enable it in the draggable, resizable and gesturable\n<code>'max'</code> and <code>'maxPerElement'</code> options.</p>","alias":"module:interact.maxInteractions","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>Any number. newValue &lt;= 0 means no interactions.</p>","name":"newValue"}],"name":"maxInteractions","longname":"module:interact.maxInteractions","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R000633","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".maxInteractions","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"module-interact.html\">interact</a>."]},{"comment":"/**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */","meta":{"range":[2802,2890],"filename":"base.ts","lineno":116,"columnno":2,"path":"/home/taye/proj/interact.js/packages/auto-start","code":{"id":"astnode100034868","name":"interact.maxInteractions","type":"ArrowFunctionExpression","paramnames":["newValue"]},"shortpath":"packages/auto-start/base.ts"},"description":"<p>Returns or sets the maximum number of concurrent interactions allowed.  By\ndefault only 1 interaction is allowed at a time (for backwards\ncompatibility). To allow multiple interactions on the same Interactables and\nelements, you need to enable it in the draggable, resizable and gesturable\n<code>'max'</code> and <code>'maxPerElement'</code> options.</p>","alias":"module:interact.maxInteractions","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>Any number. newValue &lt;= 0 means no interactions.</p>","name":"newValue"}],"name":"maxInteractions","longname":"module:interact.maxInteractions","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R003642","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".maxInteractions","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"module-interact.html\">interact</a>."]},{"comment":"/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */","meta":{"range":[3692,3710],"filename":"interact.js","lineno":118,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015738","name":"interact.off","type":"Identifier","value":"off","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Removes a global InteractEvent listener or DOM event from <code>document</code></p>","alias":"module:interact.off","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were listened\nfor</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The listener function to be removed</p>","name":"listener"},{"type":{"names":["object","boolean"]},"description":"<p>[options] object or useCapture flag for\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"off","longname":"module:interact.off","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001520","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".off","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */","meta":{"range":[3692,3710],"filename":"interact.ts","lineno":172,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100043909","name":"interact.off","type":"Identifier","value":"off","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Removes a global InteractEvent listener or DOM event from <code>document</code></p>","alias":"module:interact.off","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were listened\nfor</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The listener function to be removed</p>","name":"listener"},{"type":{"names":["object","boolean"]},"description":"<p>[options] object or useCapture flag for\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"off","longname":"module:interact.off","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004529","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".off","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */","meta":{"range":[2368,2384],"filename":"interact.js","lineno":74,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015593","name":"interact.on","type":"Identifier","value":"on","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Add a global listener for an InteractEvent or adds a DOM event to <code>document</code></p>","alias":"module:interact.on","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen for</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The function event (s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>object or useCapture flag for\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"on","longname":"module:interact.on","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001513","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".on","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */","meta":{"range":[2368,2384],"filename":"interact.ts","lineno":121,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100043764","name":"interact.on","type":"Identifier","value":"on","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Add a global listener for an InteractEvent or adds a DOM event to <code>document</code></p>","alias":"module:interact.on","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen for</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The function event (s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>object or useCapture flag for\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"on","longname":"module:interact.on","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004522","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".on","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */","meta":{"range":[6320,6372],"filename":"interact.js","lineno":211,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100016033","name":"interact.pointerMoveTolerance","type":"Identifier","value":"pointerMoveTolerance","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Returns or sets the distance the pointer must be moved before an action\nsequence occurs. This also affects tolerance for tap events.</p>","alias":"module:interact.pointerMoveTolerance","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>The movement from the start position must be greater than this value</p>","name":"newValue"}],"returns":[{"type":{"names":["interact","number"]}}],"name":"pointerMoveTolerance","longname":"module:interact.pointerMoveTolerance","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001544","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".pointerMoveTolerance","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */","meta":{"range":[6320,6372],"filename":"interact.ts","lineno":280,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100044204","name":"interact.pointerMoveTolerance","type":"Identifier","value":"pointerMoveTolerance","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Returns or sets the distance the pointer must be moved before an action\nsequence occurs. This also affects tolerance for tap events.</p>","alias":"module:interact.pointerMoveTolerance","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>The movement from the start position must be greater than this value</p>","name":"newValue"}],"returns":[{"type":{"names":["interact","number"]}}],"name":"pointerMoveTolerance","longname":"module:interact.pointerMoveTolerance","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004553","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".pointerMoveTolerance","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @return {object} interact\n */","meta":{"range":[5842,5862],"filename":"interact.js","lineno":197,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100016007","name":"interact.stop","type":"Identifier","value":"stop","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Cancels all interactions (end events are not fired)</p>","alias":"module:interact.stop","returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"stop","longname":"module:interact.stop","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001541","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".stop","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @return {object} interact\n */","meta":{"range":[5842,5862],"filename":"interact.ts","lineno":264,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100044178","name":"interact.stop","type":"Identifier","value":"stop","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Cancels all interactions (end events are not fired)</p>","alias":"module:interact.stop","returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"stop","longname":"module:interact.stop","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004550","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".stop","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */","meta":{"range":[5581,5633],"filename":"interact.js","lineno":188,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015994","name":"interact.supportsPointerEvent","type":"Identifier","value":"supportsPointerEvent","paramnames":[]},"shortpath":"packages/interact/interact.js"},"alias":"module:interact.supportsPointerEvent","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports PointerEvents</p>"}],"name":"supportsPointerEvent","longname":"module:interact.supportsPointerEvent","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001539","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".supportsPointerEvent","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */","meta":{"range":[5581,5633],"filename":"interact.ts","lineno":254,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100044165","name":"interact.supportsPointerEvent","type":"Identifier","value":"supportsPointerEvent","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"alias":"module:interact.supportsPointerEvent","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports PointerEvents</p>"}],"name":"supportsPointerEvent","longname":"module:interact.supportsPointerEvent","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004548","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".supportsPointerEvent","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */","meta":{"range":[5348,5386],"filename":"interact.js","lineno":179,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015981","name":"interact.supportsTouch","type":"Identifier","value":"supportsTouch","paramnames":[]},"shortpath":"packages/interact/interact.js"},"alias":"module:interact.supportsTouch","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports touch input</p>"}],"name":"supportsTouch","longname":"module:interact.supportsTouch","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001537","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".supportsTouch","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */","meta":{"range":[5348,5386],"filename":"interact.ts","lineno":244,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100044152","name":"interact.supportsTouch","type":"Identifier","value":"supportsTouch","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"alias":"module:interact.supportsTouch","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports touch input</p>"}],"name":"supportsTouch","longname":"module:interact.supportsTouch","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004546","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".supportsTouch","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Use a plugin\n *\n * @alias module:interact.use\n *\n * @param {Object} plugin\n * @param {function} plugin.install\n * @return {interact}\n */","meta":{"range":[1358,1376],"filename":"interact.js","lineno":42,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100015526","name":"interact.use","type":"Identifier","value":"use","paramnames":[]},"shortpath":"packages/interact/interact.js"},"description":"<p>Use a plugin</p>","alias":"module:interact.use","params":[{"type":{"names":["Object"]},"name":"plugin"},{"type":{"names":["function"]},"name":"plugin.install"}],"returns":[{"type":{"names":["interact"]}}],"name":"use","longname":"module:interact.use","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R001509","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".use","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n * Use a plugin\n *\n * @alias module:interact.use\n *\n * @param {Object} plugin\n * @param {function} plugin.install\n * @return {interact}\n */","meta":{"range":[1358,1376],"filename":"interact.ts","lineno":86,"columnno":0,"path":"/home/taye/proj/interact.js/packages/interact","code":{"id":"astnode100043697","name":"interact.use","type":"Identifier","value":"use","paramnames":[]},"shortpath":"packages/interact/interact.ts"},"description":"<p>Use a plugin</p>","alias":"module:interact.use","params":[{"type":{"names":["Object"]},"name":"plugin"},{"type":{"names":["function"]},"name":"plugin.install"}],"returns":[{"type":{"names":["interact"]}}],"name":"use","longname":"module:interact.use","kind":"member","memberof":"module:interact","scope":"static","___id":"T000002R004518","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".use","ancestors":["<a href=\"module-interact.html\">interact</a>."],"signature":"<span class=\"type-signature\"></span>"},{"comment":"/**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */","meta":{"range":[5700,5994],"filename":"index.ts","lineno":181,"columnno":2,"path":"/home/taye/proj/interact.js/packages/actions/drop","code":{"id":"astnode100029517","name":"interact.dynamicDrop","type":"FunctionExpression","paramnames":["newValue"]},"vars":{"scope.dynamicDrop":"module:interact~scope.dynamicDrop"},"shortpath":"packages/actions/drop/index.ts"},"description":"<p>Returns or sets whether the dimensions of dropzone elements are calculated\non every dragmove or only on dragstart for the default dropChecker</p>","params":[{"type":{"names":["boolean"]},"optional":true,"description":"<p>True to check on each move. False to check only\nbefore start</p>","name":"newValue"}],"returns":[{"type":{"names":["boolean","interact"]},"description":"<p>The current setting or interact</p>"}],"name":"dynamicDrop","longname":"module:interact~interact.dynamicDrop","kind":"function","memberof":"module:interact~interact","scope":"static","___id":"T000002R003133","___s":true,"attribs":"<span class=\"type-signature\">(static) </span>","id":".dynamicDrop","signature":"<span class=\"signature\">(newValue<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {boolean|<a href=\"global.html#interact\">interact</a>}</span>","ancestors":[]},{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.js","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.js"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000004R000004","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[],"modules":[{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.js","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.js"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000002R001897","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[]},{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.ts","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.ts"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000002R004906","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[]}]},{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.ts","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.ts"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000004R000005","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[],"modules":[{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.js","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.js"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000002R001897","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[],"modules":[{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.js","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.js"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000002R001897","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[]},{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.ts","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.ts"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000002R004906","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[]}]},{"comment":"/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * });\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * });\n */","meta":{"filename":"edges.ts","lineno":1,"columnno":0,"path":"/home/taye/proj/interact.js/packages/modifiers/snap","code":{},"shortpath":"packages/modifiers/snap/edges.ts"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\n  snapEdges: {\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\n  },\n});\n\ninteract(target).resizable({\n  snapEdges: {\n    targets: [\n      interact.snappers.grid({\n       top: 50,\n       left: 50,\n       bottom: 100,\n       right: 100,\n      }),\n    ],\n  },\n});"}],"longname":"module:modifiers/snapEdges","___id":"T000002R004906","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[]}]},{"kind":"package","longname":"package:undefined","files":["/home/taye/proj/interact.js/packages/actions/drag.js","/home/taye/proj/interact.js/packages/actions/drop/DropEvent.js","/home/taye/proj/interact.js/packages/actions/drop/index.js","/home/taye/proj/interact.js/packages/actions/gesture.js","/home/taye/proj/interact.js/packages/actions/index.js","/home/taye/proj/interact.js/packages/actions/resize.js","/home/taye/proj/interact.js/packages/auto-scroll/index.js","/home/taye/proj/interact.js/packages/auto-start/base.js","/home/taye/proj/interact.js/packages/auto-start/dragAxis.js","/home/taye/proj/interact.js/packages/auto-start/hold.js","/home/taye/proj/interact.js/packages/auto-start/index.js","/home/taye/proj/interact.js/packages/auto-start/InteractableMethods.js","/home/taye/proj/interact.js/packages/core/defaultOptions.js","/home/taye/proj/interact.js/packages/core/Eventable.js","/home/taye/proj/interact.js/packages/core/Interactable.js","/home/taye/proj/interact.js/packages/core/interactablePreventDefault.js","/home/taye/proj/interact.js/packages/core/InteractEvent.js","/home/taye/proj/interact.js/packages/core/Interaction.js","/home/taye/proj/interact.js/packages/core/interactions.js","/home/taye/proj/interact.js/packages/core/PointerInfo.js","/home/taye/proj/interact.js/packages/core/scope.js","/home/taye/proj/interact.js/packages/inertia/index.js","/home/taye/proj/interact.js/packages/interact/index.js","/home/taye/proj/interact.js/packages/interact/interact.js","/home/taye/proj/interact.js/packages/interactjs/index.js","/home/taye/proj/interact.js/packages/modifiers/base.js","/home/taye/proj/interact.js/packages/modifiers/index.js","/home/taye/proj/interact.js/packages/modifiers/restrict/edges.js","/home/taye/proj/interact.js/packages/modifiers/restrict/pointer.js","/home/taye/proj/interact.js/packages/modifiers/restrict/size.js","/home/taye/proj/interact.js/packages/modifiers/snap/edges.js","/home/taye/proj/interact.js/packages/modifiers/snap/pointer.js","/home/taye/proj/interact.js/packages/modifiers/snap/size.js","/home/taye/proj/interact.js/packages/pointer-events/base.js","/home/taye/proj/interact.js/packages/pointer-events/holdRepeat.js","/home/taye/proj/interact.js/packages/pointer-events/index.js","/home/taye/proj/interact.js/packages/pointer-events/interactableTargets.js","/home/taye/proj/interact.js/packages/pointer-events/PointerEvent.js","/home/taye/proj/interact.js/packages/reflow/index.js","/home/taye/proj/interact.js/packages/types/interactjs-test.js","/home/taye/proj/interact.js/packages/utils/arr.js","/home/taye/proj/interact.js/packages/utils/browser.js","/home/taye/proj/interact.js/packages/utils/clone.js","/home/taye/proj/interact.js/packages/utils/domObjects.js","/home/taye/proj/interact.js/packages/utils/domUtils.js","/home/taye/proj/interact.js/packages/utils/events.js","/home/taye/proj/interact.js/packages/utils/extend.js","/home/taye/proj/interact.js/packages/utils/getOriginXY.js","/home/taye/proj/interact.js/packages/utils/hypot.js","/home/taye/proj/interact.js/packages/utils/index.js","/home/taye/proj/interact.js/packages/utils/interactionFinder.js","/home/taye/proj/interact.js/packages/utils/is.js","/home/taye/proj/interact.js/packages/utils/isWindow.js","/home/taye/proj/interact.js/packages/utils/normalizeListeners.js","/home/taye/proj/interact.js/packages/utils/pointerExtend.js","/home/taye/proj/interact.js/packages/utils/pointerUtils.js","/home/taye/proj/interact.js/packages/utils/raf.js","/home/taye/proj/interact.js/packages/utils/rect.js","/home/taye/proj/interact.js/packages/utils/Signals.js","/home/taye/proj/interact.js/packages/utils/snappers/grid.js","/home/taye/proj/interact.js/packages/utils/snappers/index.js","/home/taye/proj/interact.js/packages/utils/window.js","/home/taye/proj/interact.js/packages/actions/drag.ts","/home/taye/proj/interact.js/packages/actions/drop/DropEvent.ts","/home/taye/proj/interact.js/packages/actions/drop/index.ts","/home/taye/proj/interact.js/packages/actions/gesture.ts","/home/taye/proj/interact.js/packages/actions/index.ts","/home/taye/proj/interact.js/packages/actions/resize.ts","/home/taye/proj/interact.js/packages/auto-scroll/index.ts","/home/taye/proj/interact.js/packages/auto-start/base.ts","/home/taye/proj/interact.js/packages/auto-start/dragAxis.ts","/home/taye/proj/interact.js/packages/auto-start/hold.ts","/home/taye/proj/interact.js/packages/auto-start/index.ts","/home/taye/proj/interact.js/packages/auto-start/InteractableMethods.ts","/home/taye/proj/interact.js/packages/core/defaultOptions.ts","/home/taye/proj/interact.js/packages/core/Eventable.ts","/home/taye/proj/interact.js/packages/core/Interactable.ts","/home/taye/proj/interact.js/packages/core/interactablePreventDefault.ts","/home/taye/proj/interact.js/packages/core/InteractEvent.ts","/home/taye/proj/interact.js/packages/core/Interaction.ts","/home/taye/proj/interact.js/packages/core/interactions.ts","/home/taye/proj/interact.js/packages/core/PointerInfo.ts","/home/taye/proj/interact.js/packages/core/scope.ts","/home/taye/proj/interact.js/packages/inertia/index.ts","/home/taye/proj/interact.js/packages/interact/index.ts","/home/taye/proj/interact.js/packages/interact/interact.ts","/home/taye/proj/interact.js/packages/interactjs/index.ts","/home/taye/proj/interact.js/packages/modifiers/base.ts","/home/taye/proj/interact.js/packages/modifiers/index.ts","/home/taye/proj/interact.js/packages/modifiers/restrict/edges.ts","/home/taye/proj/interact.js/packages/modifiers/restrict/pointer.ts","/home/taye/proj/interact.js/packages/modifiers/restrict/size.ts","/home/taye/proj/interact.js/packages/modifiers/snap/edges.ts","/home/taye/proj/interact.js/packages/modifiers/snap/pointer.ts","/home/taye/proj/interact.js/packages/modifiers/snap/size.ts","/home/taye/proj/interact.js/packages/pointer-events/base.ts","/home/taye/proj/interact.js/packages/pointer-events/holdRepeat.ts","/home/taye/proj/interact.js/packages/pointer-events/index.ts","/home/taye/proj/interact.js/packages/pointer-events/interactableTargets.ts","/home/taye/proj/interact.js/packages/pointer-events/PointerEvent.ts","/home/taye/proj/interact.js/packages/reflow/index.ts","/home/taye/proj/interact.js/packages/types/interactjs-test.ts","/home/taye/proj/interact.js/packages/utils/arr.ts","/home/taye/proj/interact.js/packages/utils/browser.ts","/home/taye/proj/interact.js/packages/utils/clone.ts","/home/taye/proj/interact.js/packages/utils/domObjects.ts","/home/taye/proj/interact.js/packages/utils/domUtils.ts","/home/taye/proj/interact.js/packages/utils/events.ts","/home/taye/proj/interact.js/packages/utils/extend.ts","/home/taye/proj/interact.js/packages/utils/getOriginXY.ts","/home/taye/proj/interact.js/packages/utils/hypot.ts","/home/taye/proj/interact.js/packages/utils/index.ts","/home/taye/proj/interact.js/packages/utils/interactionFinder.ts","/home/taye/proj/interact.js/packages/utils/is.ts","/home/taye/proj/interact.js/packages/utils/isWindow.ts","/home/taye/proj/interact.js/packages/utils/normalizeListeners.ts","/home/taye/proj/interact.js/packages/utils/pointerExtend.ts","/home/taye/proj/interact.js/packages/utils/pointerUtils.ts","/home/taye/proj/interact.js/packages/utils/raf.ts","/home/taye/proj/interact.js/packages/utils/rect.ts","/home/taye/proj/interact.js/packages/utils/Signals.ts","/home/taye/proj/interact.js/packages/utils/snappers/grid.ts","/home/taye/proj/interact.js/packages/utils/snappers/index.ts","/home/taye/proj/interact.js/packages/utils/window.ts","/home/taye/proj/interact.js/docs/index.md"],"___id":"T000002R006020","___s":true,"attribs":"","id":"package:","ancestors":[]},{"comment":"/**\n   * Prevent the default behaviour of the original Event\n   */","meta":{"range":[1643,1706],"filename":"PointerEvent.js","lineno":47,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100021752","name":"preventDefault","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/pointer-events/PointerEvent.js"},"description":"<p>Prevent the default behaviour of the original Event</p>","name":"preventDefault","longname":"preventDefault","kind":"function","scope":"global","params":[],"___id":"T000002R002285","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"preventDefault","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Prevent the default behaviour of the original Event\n   */","meta":{"range":[1630,1693],"filename":"PointerEvent.ts","lineno":76,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100049931","name":"preventDefault","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/pointer-events/PointerEvent.ts"},"description":"<p>Prevent the default behaviour of the original Event</p>","name":"preventDefault","longname":"preventDefault","kind":"function","scope":"global","params":[],"___id":"T000002R005294","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"preventDefault","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call any other listeners (even on the current target)\n   */","meta":{"range":[1915,2018],"filename":"PointerEvent.js","lineno":59,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100021773","name":"stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/pointer-events/PointerEvent.js"},"description":"<p>Don't call any other listeners (even on the current target)</p>","name":"stopImmediatePropagation","longname":"stopImmediatePropagation","kind":"function","scope":"global","params":[],"___id":"T000002R002288","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopImmediatePropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call any other listeners (even on the current target)\n   */","meta":{"range":[1902,2005],"filename":"PointerEvent.ts","lineno":90,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100049952","name":"stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/pointer-events/PointerEvent.ts"},"description":"<p>Don't call any other listeners (even on the current target)</p>","name":"stopImmediatePropagation","longname":"stopImmediatePropagation","kind":"function","scope":"global","params":[],"___id":"T000002R005297","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopImmediatePropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call listeners on the remaining targets\n   */","meta":{"range":[1774,1833],"filename":"PointerEvent.js","lineno":53,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100021763","name":"stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/pointer-events/PointerEvent.js"},"description":"<p>Don't call listeners on the remaining targets</p>","name":"stopPropagation","longname":"stopPropagation","kind":"function","scope":"global","params":[],"___id":"T000002R002286","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopPropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n   * Don't call listeners on the remaining targets\n   */","meta":{"range":[1761,1820],"filename":"PointerEvent.ts","lineno":83,"columnno":2,"path":"/home/taye/proj/interact.js/packages/pointer-events","code":{"id":"astnode100049942","name":"stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"packages/pointer-events/PointerEvent.ts"},"description":"<p>Don't call listeners on the remaining targets</p>","name":"stopPropagation","longname":"stopPropagation","kind":"function","scope":"global","params":[],"___id":"T000002R005295","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stopPropagation","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":[]}]