import test from '@interactjs/_dev/test/test';
import Interaction from '@interactjs/core/Interaction';
import { mockInteractable, mockScope, mockSignals } from '@interactjs/core/tests/helpers';
import snapEdges from '../../snap/edges';
test('modifiers/snapEdges', (t) => {
    mockScope();
    const interaction = new Interaction({ signals: mockSignals() });
    interaction.target = mockInteractable();
    interaction.target.getRect = () => ({ top: 0, left: 0, bottom: 100, right: 100 });
    interaction._interacting = true;
    const target0 = Object.freeze({
        left: 50,
        right: 150,
        top: 0,
        bottom: 100,
    });
    const options = {
        targets: [
            { ...target0 },
        ],
        range: Infinity,
    };
    const pageCoords = Object.freeze({ x: 0, y: 0 });
    const arg = {
        interaction,
        interactable: interaction.target,
        state: null,
        pageCoords,
        coords: { ...pageCoords },
        offset: [{ x: 0, y: 0 }],
    };
    // resize from top left
    interaction.prepared.edges = { top: true, left: true };
    arg.state = { options };
    snapEdges.start(arg);
    snapEdges.set(arg);
    t.deepEqual(arg.coords, { x: target0.left, y: target0.top }, 'modified coords are correct');
    // resize from bottom right
    interaction.prepared.edges = { bottom: true, right: true };
    arg.state = { options };
    snapEdges.start(arg);
    snapEdges.set(arg);
    t.deepEqual(arg.coords, { x: target0.right, y: target0.bottom }, 'modified coord are correct');
    t.end();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlZGdlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLElBQUksTUFBTSw0QkFBNEIsQ0FBQTtBQUM3QyxPQUFPLFdBQVcsTUFBTSw4QkFBOEIsQ0FBQTtBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdDQUFnQyxDQUFBO0FBQ3pGLE9BQU8sU0FBUyxNQUFNLGtCQUFrQixDQUFBO0FBRXhDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFO0lBQ2hDLFNBQVMsRUFBRSxDQUFBO0lBQ1gsTUFBTSxXQUFXLEdBQUcsSUFBSSxXQUFXLENBQUMsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLEVBQVMsQ0FBQyxDQUFBO0lBQ3RFLFdBQVcsQ0FBQyxNQUFNLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQTtJQUN2QyxXQUFXLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBVSxDQUFBLENBQUE7SUFDeEYsV0FBVyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUE7SUFFL0IsTUFBTSxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM1QixJQUFJLEVBQUUsRUFBRTtRQUNSLEtBQUssRUFBRSxHQUFHO1FBQ1YsR0FBRyxFQUFFLENBQUM7UUFDTixNQUFNLEVBQUUsR0FBRztLQUNaLENBQUMsQ0FBQTtJQUNGLE1BQU0sT0FBTyxHQUFHO1FBQ2QsT0FBTyxFQUFFO1lBQ1AsRUFBRSxHQUFHLE9BQU8sRUFBRTtTQUNmO1FBQ0QsS0FBSyxFQUFFLFFBQVE7S0FDaEIsQ0FBQTtJQUNELE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0lBQ2hELE1BQU0sR0FBRyxHQUFHO1FBQ1YsV0FBVztRQUNYLFlBQVksRUFBRSxXQUFXLENBQUMsTUFBTTtRQUNoQyxLQUFLLEVBQUUsSUFBSTtRQUNYLFVBQVU7UUFDVixNQUFNLEVBQUUsRUFBRSxHQUFHLFVBQVUsRUFBRTtRQUN6QixNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO0tBQ3pCLENBQUE7SUFFRCx1QkFBdUI7SUFDdkIsV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQTtJQUV0RCxHQUFHLENBQUMsS0FBSyxHQUFHLEVBQUUsT0FBTyxFQUFFLENBQUE7SUFDdkIsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUNwQixTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBRWxCLENBQUMsQ0FBQyxTQUFTLENBQ1QsR0FBRyxDQUFDLE1BQU0sRUFDVixFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQ25DLDZCQUE2QixDQUFDLENBQUE7SUFFaEMsMkJBQTJCO0lBQzNCLFdBQVcsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUE7SUFFMUQsR0FBRyxDQUFDLEtBQUssR0FBRyxFQUFFLE9BQU8sRUFBRSxDQUFBO0lBQ3ZCLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDcEIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUVsQixDQUFDLENBQUMsU0FBUyxDQUNULEdBQUcsQ0FBQyxNQUFNLEVBQ1YsRUFBRSxDQUFDLEVBQUUsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUN2Qyw0QkFBNEIsQ0FBQyxDQUFBO0lBRS9CLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtBQUNULENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRlc3QgZnJvbSAnQGludGVyYWN0anMvX2Rldi90ZXN0L3Rlc3QnXG5pbXBvcnQgSW50ZXJhY3Rpb24gZnJvbSAnQGludGVyYWN0anMvY29yZS9JbnRlcmFjdGlvbidcbmltcG9ydCB7IG1vY2tJbnRlcmFjdGFibGUsIG1vY2tTY29wZSwgbW9ja1NpZ25hbHMgfSBmcm9tICdAaW50ZXJhY3Rqcy9jb3JlL3Rlc3RzL2hlbHBlcnMnXG5pbXBvcnQgc25hcEVkZ2VzIGZyb20gJy4uLy4uL3NuYXAvZWRnZXMnXG5cbnRlc3QoJ21vZGlmaWVycy9zbmFwRWRnZXMnLCAodCkgPT4ge1xuICBtb2NrU2NvcGUoKVxuICBjb25zdCBpbnRlcmFjdGlvbiA9IG5ldyBJbnRlcmFjdGlvbih7IHNpZ25hbHM6IG1vY2tTaWduYWxzKCkgfSBhcyBhbnkpXG4gIGludGVyYWN0aW9uLnRhcmdldCA9IG1vY2tJbnRlcmFjdGFibGUoKVxuICBpbnRlcmFjdGlvbi50YXJnZXQuZ2V0UmVjdCA9ICgpID0+ICh7IHRvcDogMCwgbGVmdDogMCwgYm90dG9tOiAxMDAsIHJpZ2h0OiAxMDAgfSBhcyBhbnkpXG4gIGludGVyYWN0aW9uLl9pbnRlcmFjdGluZyA9IHRydWVcblxuICBjb25zdCB0YXJnZXQwID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgbGVmdDogNTAsXG4gICAgcmlnaHQ6IDE1MCxcbiAgICB0b3A6IDAsXG4gICAgYm90dG9tOiAxMDAsXG4gIH0pXG4gIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgdGFyZ2V0czogW1xuICAgICAgeyAuLi50YXJnZXQwIH0sXG4gICAgXSxcbiAgICByYW5nZTogSW5maW5pdHksXG4gIH1cbiAgY29uc3QgcGFnZUNvb3JkcyA9IE9iamVjdC5mcmVlemUoeyB4OiAwLCB5OiAwIH0pXG4gIGNvbnN0IGFyZyA9IHtcbiAgICBpbnRlcmFjdGlvbixcbiAgICBpbnRlcmFjdGFibGU6IGludGVyYWN0aW9uLnRhcmdldCxcbiAgICBzdGF0ZTogbnVsbCxcbiAgICBwYWdlQ29vcmRzLFxuICAgIGNvb3JkczogeyAuLi5wYWdlQ29vcmRzIH0sXG4gICAgb2Zmc2V0OiBbeyB4OiAwLCB5OiAwIH1dLFxuICB9XG5cbiAgLy8gcmVzaXplIGZyb20gdG9wIGxlZnRcbiAgaW50ZXJhY3Rpb24ucHJlcGFyZWQuZWRnZXMgPSB7IHRvcDogdHJ1ZSwgbGVmdDogdHJ1ZSB9XG5cbiAgYXJnLnN0YXRlID0geyBvcHRpb25zIH1cbiAgc25hcEVkZ2VzLnN0YXJ0KGFyZylcbiAgc25hcEVkZ2VzLnNldChhcmcpXG5cbiAgdC5kZWVwRXF1YWwoXG4gICAgYXJnLmNvb3JkcyxcbiAgICB7IHg6IHRhcmdldDAubGVmdCwgeTogdGFyZ2V0MC50b3AgfSxcbiAgICAnbW9kaWZpZWQgY29vcmRzIGFyZSBjb3JyZWN0JylcblxuICAvLyByZXNpemUgZnJvbSBib3R0b20gcmlnaHRcbiAgaW50ZXJhY3Rpb24ucHJlcGFyZWQuZWRnZXMgPSB7IGJvdHRvbTogdHJ1ZSwgcmlnaHQ6IHRydWUgfVxuXG4gIGFyZy5zdGF0ZSA9IHsgb3B0aW9ucyB9XG4gIHNuYXBFZGdlcy5zdGFydChhcmcpXG4gIHNuYXBFZGdlcy5zZXQoYXJnKVxuXG4gIHQuZGVlcEVxdWFsKFxuICAgIGFyZy5jb29yZHMsXG4gICAgeyB4OiB0YXJnZXQwLnJpZ2h0LCB5OiB0YXJnZXQwLmJvdHRvbSB9LFxuICAgICdtb2RpZmllZCBjb29yZCBhcmUgY29ycmVjdCcpXG5cbiAgdC5lbmQoKVxufSlcbiJdfQ==